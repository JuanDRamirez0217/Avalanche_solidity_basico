{
	"id": "ce035051c09fbc5a7641f6eb4f18c441",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"Clarence_dolar_flattened.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n\n// File: @openzeppelin/contracts/interfaces/draft-IERC6093.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/ERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/access/Ownable.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n\n// File: @openzeppelin/contracts/utils/cryptography/ECDSA.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError, bytes32) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError, bytes32) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/utils/math/Math.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n\n// File: @openzeppelin/contracts/utils/math/SignedMath.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Strings.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\n\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n\n// File: @openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/utils/StorageSlot.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/utils/ShortStrings.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/interfaces/IERC5267.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n\n// File: @openzeppelin/contracts/utils/cryptography/EIP712.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {IERC-5267}.\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Nonces.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Nonces.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides tracking nonces for addresses. Nonces will only increment.\n */\nabstract contract Nonces {\n    /**\n     * @dev The nonce used for an `account` is not the expected current nonce.\n     */\n    error InvalidAccountNonce(address account, uint256 currentNonce);\n\n    mapping(address account => uint256) private _nonces;\n\n    /**\n     * @dev Returns the next unused nonce for an address.\n     */\n    function nonces(address owner) public view virtual returns (uint256) {\n        return _nonces[owner];\n    }\n\n    /**\n     * @dev Consumes a nonce.\n     *\n     * Returns the current value and increments nonce.\n     */\n    function _useNonce(address owner) internal virtual returns (uint256) {\n        // For each account, the nonce has an initial value of 0, can only be incremented by one, and cannot be\n        // decremented or reset. This guarantees that the nonce never overflows.\n        unchecked {\n            // It is important to do x++ and not ++x here.\n            return _nonces[owner]++;\n        }\n    }\n\n    /**\n     * @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`.\n     */\n    function _useCheckedNonce(address owner, uint256 nonce) internal virtual {\n        uint256 current = _useNonce(owner);\n        if (nonce != current) {\n            revert InvalidAccountNonce(owner, current);\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n\n\n/**\n * @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712, Nonces {\n    bytes32 private constant PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    /**\n     * @dev Permit deadline has expired.\n     */\n    error ERC2612ExpiredSignature(uint256 deadline);\n\n    /**\n     * @dev Mismatched signature.\n     */\n    error ERC2612InvalidSigner(address signer, address owner);\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > deadline) {\n            revert ERC2612ExpiredSignature(deadline);\n        }\n\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        if (signer != owner) {\n            revert ERC2612InvalidSigner(signer, owner);\n        }\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {\n        return super.nonces(owner);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n}\n\n// File: Clarence_dolar.sol\n\n\n// Compatible with OpenZeppelin Contracts ^5.0.0\npragma solidity ^0.8.20;\n\n\n\n\n/// @custom:security-contact juand.ramirezr@ecci.edu.co\ncontract Clarence_dolar is ERC20, Ownable, ERC20Permit {\n    constructor(address initialOwner)\n        ERC20(\"ClarenceDolar\", \"CLD\")\n        Ownable(initialOwner)\n        ERC20Permit(\"ClarenceDolar\")\n    {\n        _mint(msg.sender, 1000 * 10 ** decimals());\n    }\n\n    function mint(address to, uint256 amount) public onlyOwner {\n        _mint(to, amount);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"Clarence_dolar_flattened.sol": {
				"Clarence_dolar": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "ERC2612ExpiredSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "signer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC2612InvalidSigner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentNonce",
									"type": "uint256"
								}
							],
							"name": "InvalidAccountNonce",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"custom:security-contact": "juand.ramirezr@ecci.edu.co",
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC2612ExpiredSignature(uint256)": [
								{
									"details": "Permit deadline has expired."
								}
							],
							"ERC2612InvalidSigner(address,address)": [
								{
									"details": "Mismatched signature."
								}
							],
							"InvalidAccountNonce(address,uint256)": [
								{
									"details": "The nonce used for an `account` is not the expected current nonce."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"eip712Domain()": {
								"details": "See {IERC-5267}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Clarence_dolar_flattened.sol\":79675:80039  contract Clarence_dolar is ERC20, Ownable, ERC20Permit {... */\n  mstore(0x40, 0x0160)\n    /* \"Clarence_dolar_flattened.sol\":79736:79938  constructor(address initialOwner)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Clarence_dolar_flattened.sol\":78313:78365  constructor(string memory name) EIP712(name, \"1\") {} */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0d\n  dup2\n  mstore\n  0x20\n  add\n  0x436c6172656e6365446f6c617200000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"Clarence_dolar_flattened.sol\":78352:78356  name */\n  dup1\n    /* \"Clarence_dolar_flattened.sol\":72157:72588  constructor(string memory name, string memory version) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x01\n  dup2\n  mstore\n  0x20\n  add\n  0x3100000000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"Clarence_dolar_flattened.sol\":79824:79836  initialOwner */\n  dup4\n    /* \"Clarence_dolar_flattened.sol\":12788:12901  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0d\n  dup2\n  mstore\n  0x20\n  add\n  0x436c6172656e6365446f6c617200000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x434c440000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"Clarence_dolar_flattened.sol\":12862:12867  name_ */\n  dup2\n    /* \"Clarence_dolar_flattened.sol\":12854:12859  _name */\n  0x03\n    /* \"Clarence_dolar_flattened.sol\":12854:12867  _name = name_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"Clarence_dolar_flattened.sol\":12887:12894  symbol_ */\n  dup1\n    /* \"Clarence_dolar_flattened.sol\":12877:12884  _symbol */\n  0x04\n    /* \"Clarence_dolar_flattened.sol\":12877:12894  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_12\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_12:\n  pop\n    /* \"Clarence_dolar_flattened.sol\":12788:12901  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"Clarence_dolar_flattened.sol\":23309:23310  0 */\n  0x00\n    /* \"Clarence_dolar_flattened.sol\":23285:23311  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Clarence_dolar_flattened.sol\":23285:23297  initialOwner */\n  dup2\n    /* \"Clarence_dolar_flattened.sol\":23285:23311  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"Clarence_dolar_flattened.sol\":23281:23376  if (initialOwner == address(0)) {... */\n  tag_14\n  jumpi\n    /* \"Clarence_dolar_flattened.sol\":23362:23363  0 */\n  0x00\n    /* \"Clarence_dolar_flattened.sol\":23334:23365  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_15\n  swap2\n  swap1\n  tag_16\n  jump\t// in\ntag_15:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"Clarence_dolar_flattened.sol\":23281:23376  if (initialOwner == address(0)) {... */\ntag_14:\n    /* \"Clarence_dolar_flattened.sol\":23385:23417  _transferOwnership(initialOwner) */\n  tag_17\n    /* \"Clarence_dolar_flattened.sol\":23404:23416  initialOwner */\n  dup2\n    /* \"Clarence_dolar_flattened.sol\":23385:23403  _transferOwnership */\n  shl(0x20, tag_18)\n    /* \"Clarence_dolar_flattened.sol\":23385:23417  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_17:\n    /* \"Clarence_dolar_flattened.sol\":23237:23424  constructor(address initialOwner) {... */\n  pop\n    /* \"Clarence_dolar_flattened.sol\":72230:72275  name.toShortStringWithFallback(_nameFallback) */\n  tag_20\n    /* \"Clarence_dolar_flattened.sol\":72261:72274  _nameFallback */\n  0x06\n    /* \"Clarence_dolar_flattened.sol\":72230:72234  name */\n  dup4\n    /* \"Clarence_dolar_flattened.sol\":72230:72260  name.toShortStringWithFallback */\n  shl(0x20, tag_21)\n  swap1\n    /* \"Clarence_dolar_flattened.sol\":72230:72275  name.toShortStringWithFallback(_nameFallback) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_20:\n    /* \"Clarence_dolar_flattened.sol\":72222:72275  _name = name.toShortStringWithFallback(_nameFallback) */\n  0x0120\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"Clarence_dolar_flattened.sol\":72296:72347  version.toShortStringWithFallback(_versionFallback) */\n  tag_22\n    /* \"Clarence_dolar_flattened.sol\":72330:72346  _versionFallback */\n  0x07\n    /* \"Clarence_dolar_flattened.sol\":72296:72303  version */\n  dup3\n    /* \"Clarence_dolar_flattened.sol\":72296:72329  version.toShortStringWithFallback */\n  shl(0x20, tag_21)\n  swap1\n    /* \"Clarence_dolar_flattened.sol\":72296:72347  version.toShortStringWithFallback(_versionFallback) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_22:\n    /* \"Clarence_dolar_flattened.sol\":72285:72347  _version = version.toShortStringWithFallback(_versionFallback) */\n  0x0140\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"Clarence_dolar_flattened.sol\":72387:72391  name */\n  dup2\n    /* \"Clarence_dolar_flattened.sol\":72371:72393  keccak256(bytes(name)) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"Clarence_dolar_flattened.sol\":72357:72393  _hashedName = keccak256(bytes(name)) */\n  0xe0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"Clarence_dolar_flattened.sol\":72436:72443  version */\n  dup1\n    /* \"Clarence_dolar_flattened.sol\":72420:72445  keccak256(bytes(version)) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"Clarence_dolar_flattened.sol\":72403:72445  _hashedVersion = keccak256(bytes(version)) */\n  0x0100\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"Clarence_dolar_flattened.sol\":72473:72486  block.chainid */\n  chainid\n    /* \"Clarence_dolar_flattened.sol\":72456:72486  _cachedChainId = block.chainid */\n  0xa0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"Clarence_dolar_flattened.sol\":72521:72544  _buildDomainSeparator() */\n  tag_23\n    /* \"Clarence_dolar_flattened.sol\":72521:72542  _buildDomainSeparator */\n  shl(0x20, tag_24)\n    /* \"Clarence_dolar_flattened.sol\":72521:72544  _buildDomainSeparator() */\n  0x20\n  shr\n  jump\t// in\ntag_23:\n    /* \"Clarence_dolar_flattened.sol\":72496:72544  _cachedDomainSeparator = _buildDomainSeparator() */\n  0x80\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"Clarence_dolar_flattened.sol\":72576:72580  this */\n  address\n    /* \"Clarence_dolar_flattened.sol\":72554:72581  _cachedThis = address(this) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xc0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"Clarence_dolar_flattened.sol\":72157:72588  constructor(string memory name, string memory version) {... */\n  pop\n  pop\n    /* \"Clarence_dolar_flattened.sol\":78313:78365  constructor(string memory name) EIP712(name, \"1\") {} */\n  pop\n    /* \"Clarence_dolar_flattened.sol\":79889:79931  _mint(msg.sender, 1000 * 10 ** decimals()) */\n  tag_27\n    /* \"Clarence_dolar_flattened.sol\":79895:79905  msg.sender */\n  caller\n    /* \"Clarence_dolar_flattened.sol\":79920:79930  decimals() */\n  tag_28\n    /* \"Clarence_dolar_flattened.sol\":79920:79928  decimals */\n  shl(0x20, tag_29)\n    /* \"Clarence_dolar_flattened.sol\":79920:79930  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_28:\n    /* \"Clarence_dolar_flattened.sol\":79914:79916  10 */\n  0x0a\n    /* \"Clarence_dolar_flattened.sol\":79914:79930  10 ** decimals() */\n  tag_30\n  swap2\n  swap1\n  tag_31\n  jump\t// in\ntag_30:\n    /* \"Clarence_dolar_flattened.sol\":79907:79911  1000 */\n  0x03e8\n    /* \"Clarence_dolar_flattened.sol\":79907:79930  1000 * 10 ** decimals() */\n  tag_32\n  swap2\n  swap1\n  tag_33\n  jump\t// in\ntag_32:\n    /* \"Clarence_dolar_flattened.sol\":79889:79894  _mint */\n  shl(0x20, tag_34)\n    /* \"Clarence_dolar_flattened.sol\":79889:79931  _mint(msg.sender, 1000 * 10 ** decimals()) */\n  0x20\n  shr\n  jump\t// in\ntag_27:\n    /* \"Clarence_dolar_flattened.sol\":79736:79938  constructor(address initialOwner)... */\n  pop\n    /* \"Clarence_dolar_flattened.sol\":79675:80039  contract Clarence_dolar is ERC20, Ownable, ERC20Permit {... */\n  jump(tag_35)\n    /* \"Clarence_dolar_flattened.sol\":24924:25111  function _transferOwnership(address newOwner) internal virtual {... */\ntag_18:\n    /* \"Clarence_dolar_flattened.sol\":24997:25013  address oldOwner */\n  0x00\n    /* \"Clarence_dolar_flattened.sol\":25016:25022  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Clarence_dolar_flattened.sol\":24997:25022  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"Clarence_dolar_flattened.sol\":25041:25049  newOwner */\n  dup2\n    /* \"Clarence_dolar_flattened.sol\":25032:25038  _owner */\n  0x05\n  0x00\n    /* \"Clarence_dolar_flattened.sol\":25032:25049  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Clarence_dolar_flattened.sol\":25095:25103  newOwner */\n  dup2\n    /* \"Clarence_dolar_flattened.sol\":25064:25104  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Clarence_dolar_flattened.sol\":25085:25093  oldOwner */\n  dup2\n    /* \"Clarence_dolar_flattened.sol\":25064:25104  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"Clarence_dolar_flattened.sol\":24987:25111  {... */\n  pop\n    /* \"Clarence_dolar_flattened.sol\":24924:25111  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"Clarence_dolar_flattened.sol\":66807:67147  function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {... */\ntag_21:\n    /* \"Clarence_dolar_flattened.sol\":66903:66914  ShortString */\n  0x00\n    /* \"Clarence_dolar_flattened.sol\":66952:66954  32 */\n  0x20\n    /* \"Clarence_dolar_flattened.sol\":66936:66941  value */\n  dup4\n    /* \"Clarence_dolar_flattened.sol\":66930:66949  bytes(value).length */\n  mload\n    /* \"Clarence_dolar_flattened.sol\":66930:66954  bytes(value).length < 32 */\n  lt\n    /* \"Clarence_dolar_flattened.sol\":66926:67141  if (bytes(value).length < 32) {... */\n  iszero\n  tag_38\n  jumpi\n    /* \"Clarence_dolar_flattened.sol\":66977:66997  toShortString(value) */\n  tag_39\n    /* \"Clarence_dolar_flattened.sol\":66991:66996  value */\n  dup4\n    /* \"Clarence_dolar_flattened.sol\":66977:66990  toShortString */\n  shl(0x20, tag_40)\n    /* \"Clarence_dolar_flattened.sol\":66977:66997  toShortString(value) */\n  0x20\n  shr\n  jump\t// in\ntag_39:\n    /* \"Clarence_dolar_flattened.sol\":66970:66997  return toShortString(value) */\n  swap1\n  pop\n  jump(tag_37)\n    /* \"Clarence_dolar_flattened.sol\":66926:67141  if (bytes(value).length < 32) {... */\ntag_38:\n    /* \"Clarence_dolar_flattened.sol\":67069:67074  value */\n  dup3\n    /* \"Clarence_dolar_flattened.sol\":67028:67060  StorageSlot.getStringSlot(store) */\n  tag_42\n    /* \"Clarence_dolar_flattened.sol\":67054:67059  store */\n  dup4\n    /* \"Clarence_dolar_flattened.sol\":67028:67053  StorageSlot.getStringSlot */\n  shl(0x20, tag_43)\n    /* \"Clarence_dolar_flattened.sol\":67028:67060  StorageSlot.getStringSlot(store) */\n  0x20\n  shr\n  jump\t// in\ntag_42:\n    /* \"Clarence_dolar_flattened.sol\":67028:67066  StorageSlot.getStringSlot(store).value */\n  0x00\n  add\n    /* \"Clarence_dolar_flattened.sol\":67028:67074  StorageSlot.getStringSlot(store).value = value */\n  swap1\n  dup2\n  tag_44\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_44:\n  pop\n    /* \"Clarence_dolar_flattened.sol\":65283:65349  0x00000000000000000000000000000000000000000000000000000000000000FF */\n  0xff\n    /* \"Clarence_dolar_flattened.sol\":67112:67129  FALLBACK_SENTINEL */\n  0x00\n  shl\n    /* \"Clarence_dolar_flattened.sol\":67088:67130  return ShortString.wrap(FALLBACK_SENTINEL) */\n  swap1\n  pop\n    /* \"Clarence_dolar_flattened.sol\":66807:67147  function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {... */\ntag_37:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"Clarence_dolar_flattened.sol\":72942:73121  function _buildDomainSeparator() private view returns (bytes32) {... */\ntag_24:\n    /* \"Clarence_dolar_flattened.sol\":72997:73004  bytes32 */\n  0x00\n    /* \"Clarence_dolar_flattened.sol\":70908:71003  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n  0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n    /* \"Clarence_dolar_flattened.sol\":73055:73066  _hashedName */\n  mload(0xe0)\n    /* \"Clarence_dolar_flattened.sol\":73068:73082  _hashedVersion */\n  mload(0x0100)\n    /* \"Clarence_dolar_flattened.sol\":73084:73097  block.chainid */\n  chainid\n    /* \"Clarence_dolar_flattened.sol\":73107:73111  this */\n  address\n    /* \"Clarence_dolar_flattened.sol\":73033:73113  abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)) */\n  add(0x20, mload(0x40))\n  tag_46\n  swap6\n  swap5\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_47\n  jump\t// in\ntag_46:\n  mload(0x40)\n  0x20\n  dup2\n  dup4\n  sub\n  sub\n  dup2\n  mstore\n  swap1\n  0x40\n  mstore\n    /* \"Clarence_dolar_flattened.sol\":73023:73114  keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"Clarence_dolar_flattened.sol\":73016:73114  return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n  swap1\n  pop\n    /* \"Clarence_dolar_flattened.sol\":72942:73121  function _buildDomainSeparator() private view returns (bytes32) {... */\n  swap1\n  jump\t// out\n    /* \"Clarence_dolar_flattened.sol\":13894:13976  function decimals() public view virtual returns (uint8) {... */\ntag_29:\n    /* \"Clarence_dolar_flattened.sol\":13943:13948  uint8 */\n  0x00\n    /* \"Clarence_dolar_flattened.sol\":13967:13969  18 */\n  0x12\n    /* \"Clarence_dolar_flattened.sol\":13960:13969  return 18 */\n  swap1\n  pop\n    /* \"Clarence_dolar_flattened.sol\":13894:13976  function decimals() public view virtual returns (uint8) {... */\n  swap1\n  jump\t// out\n    /* \"Clarence_dolar_flattened.sol\":18613:18821  function _mint(address account, uint256 value) internal {... */\ntag_34:\n    /* \"Clarence_dolar_flattened.sol\":18702:18703  0 */\n  0x00\n    /* \"Clarence_dolar_flattened.sol\":18683:18704  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Clarence_dolar_flattened.sol\":18683:18690  account */\n  dup3\n    /* \"Clarence_dolar_flattened.sol\":18683:18704  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"Clarence_dolar_flattened.sol\":18679:18770  if (account == address(0)) {... */\n  tag_50\n  jumpi\n    /* \"Clarence_dolar_flattened.sol\":18756:18757  0 */\n  0x00\n    /* \"Clarence_dolar_flattened.sol\":18727:18759  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_51\n  swap2\n  swap1\n  tag_16\n  jump\t// in\ntag_51:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"Clarence_dolar_flattened.sol\":18679:18770  if (account == address(0)) {... */\ntag_50:\n    /* \"Clarence_dolar_flattened.sol\":18779:18814  _update(address(0), account, value) */\n  tag_52\n    /* \"Clarence_dolar_flattened.sol\":18795:18796  0 */\n  0x00\n    /* \"Clarence_dolar_flattened.sol\":18799:18806  account */\n  dup4\n    /* \"Clarence_dolar_flattened.sol\":18808:18813  value */\n  dup4\n    /* \"Clarence_dolar_flattened.sol\":18779:18786  _update */\n  shl(0x20, tag_53)\n    /* \"Clarence_dolar_flattened.sol\":18779:18814  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_52:\n    /* \"Clarence_dolar_flattened.sol\":18613:18821  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"Clarence_dolar_flattened.sol\":65601:65887  function toShortString(string memory str) internal pure returns (ShortString) {... */\ntag_40:\n    /* \"Clarence_dolar_flattened.sol\":65666:65677  ShortString */\n  0x00\n    /* \"Clarence_dolar_flattened.sol\":65689:65706  bytes memory bstr */\n  dup1\n    /* \"Clarence_dolar_flattened.sol\":65715:65718  str */\n  dup3\n    /* \"Clarence_dolar_flattened.sol\":65689:65719  bytes memory bstr = bytes(str) */\n  swap1\n  pop\n    /* \"Clarence_dolar_flattened.sol\":65747:65749  31 */\n  0x1f\n    /* \"Clarence_dolar_flattened.sol\":65733:65737  bstr */\n  dup2\n    /* \"Clarence_dolar_flattened.sol\":65733:65744  bstr.length */\n  mload\n    /* \"Clarence_dolar_flattened.sol\":65733:65749  bstr.length > 31 */\n  gt\n    /* \"Clarence_dolar_flattened.sol\":65729:65801  if (bstr.length > 31) {... */\n  iszero\n  tag_55\n  jumpi\n    /* \"Clarence_dolar_flattened.sol\":65786:65789  str */\n  dup3\n    /* \"Clarence_dolar_flattened.sol\":65772:65790  StringTooLong(str) */\n  mload(0x40)\n  0x305a27a900000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_56\n  swap2\n  swap1\n  tag_57\n  jump\t// in\ntag_56:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"Clarence_dolar_flattened.sol\":65729:65801  if (bstr.length > 31) {... */\ntag_55:\n    /* \"Clarence_dolar_flattened.sol\":65867:65871  bstr */\n  dup1\n    /* \"Clarence_dolar_flattened.sol\":65867:65878  bstr.length */\n  mload\n    /* \"Clarence_dolar_flattened.sol\":65858:65862  bstr */\n  dup2\n    /* \"Clarence_dolar_flattened.sol\":65850:65863  bytes32(bstr) */\n  tag_58\n  swap1\n  tag_59\n  jump\t// in\ntag_58:\n    /* \"Clarence_dolar_flattened.sol\":65842:65864  uint256(bytes32(bstr)) */\n  0x00\n  shr\n    /* \"Clarence_dolar_flattened.sol\":65842:65878  uint256(bytes32(bstr)) | bstr.length */\n  or\n    /* \"Clarence_dolar_flattened.sol\":65834:65879  bytes32(uint256(bytes32(bstr)) | bstr.length) */\n  0x00\n  shl\n    /* \"Clarence_dolar_flattened.sol\":65810:65880  return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length)) */\n  swap2\n  pop\n  pop\n    /* \"Clarence_dolar_flattened.sol\":65601:65887  function toShortString(string memory str) internal pure returns (ShortString) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"Clarence_dolar_flattened.sol\":63117:63319  function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {... */\ntag_43:\n    /* \"Clarence_dolar_flattened.sol\":63185:63205  StringSlot storage r */\n  0x00\n    /* \"Clarence_dolar_flattened.sol\":63293:63303  store.slot */\n  dup2\n    /* \"Clarence_dolar_flattened.sol\":63283:63303  r.slot := store.slot */\n  swap1\n  pop\n    /* \"Clarence_dolar_flattened.sol\":63117:63319  function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"Clarence_dolar_flattened.sol\":17163:18270  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_53:\n    /* \"Clarence_dolar_flattened.sol\":17268:17269  0 */\n  0x00\n    /* \"Clarence_dolar_flattened.sol\":17252:17270  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Clarence_dolar_flattened.sol\":17252:17256  from */\n  dup4\n    /* \"Clarence_dolar_flattened.sol\":17252:17270  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"Clarence_dolar_flattened.sol\":17248:17788  if (from == address(0)) {... */\n  tag_62\n  jumpi\n    /* \"Clarence_dolar_flattened.sol\":17404:17409  value */\n  dup1\n    /* \"Clarence_dolar_flattened.sol\":17388:17400  _totalSupply */\n  0x02\n  0x00\n    /* \"Clarence_dolar_flattened.sol\":17388:17409  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_63\n  swap2\n  swap1\n  tag_64\n  jump\t// in\ntag_63:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Clarence_dolar_flattened.sol\":17248:17788  if (from == address(0)) {... */\n  jump(tag_65)\ntag_62:\n    /* \"Clarence_dolar_flattened.sol\":17440:17459  uint256 fromBalance */\n  0x00\n    /* \"Clarence_dolar_flattened.sol\":17462:17471  _balances */\n  dup1\n    /* \"Clarence_dolar_flattened.sol\":17462:17477  _balances[from] */\n  0x00\n    /* \"Clarence_dolar_flattened.sol\":17472:17476  from */\n  dup6\n    /* \"Clarence_dolar_flattened.sol\":17462:17477  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"Clarence_dolar_flattened.sol\":17440:17477  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"Clarence_dolar_flattened.sol\":17509:17514  value */\n  dup2\n    /* \"Clarence_dolar_flattened.sol\":17495:17506  fromBalance */\n  dup2\n    /* \"Clarence_dolar_flattened.sol\":17495:17514  fromBalance < value */\n  lt\n    /* \"Clarence_dolar_flattened.sol\":17491:17606  if (fromBalance < value) {... */\n  iszero\n  tag_66\n  jumpi\n    /* \"Clarence_dolar_flattened.sol\":17566:17570  from */\n  dup4\n    /* \"Clarence_dolar_flattened.sol\":17572:17583  fromBalance */\n  dup2\n    /* \"Clarence_dolar_flattened.sol\":17585:17590  value */\n  dup4\n    /* \"Clarence_dolar_flattened.sol\":17541:17591  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_67\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_68\n  jump\t// in\ntag_67:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"Clarence_dolar_flattened.sol\":17491:17606  if (fromBalance < value) {... */\ntag_66:\n    /* \"Clarence_dolar_flattened.sol\":17758:17763  value */\n  dup2\n    /* \"Clarence_dolar_flattened.sol\":17744:17755  fromBalance */\n  dup2\n    /* \"Clarence_dolar_flattened.sol\":17744:17763  fromBalance - value */\n  sub\n    /* \"Clarence_dolar_flattened.sol\":17726:17735  _balances */\n  0x00\n    /* \"Clarence_dolar_flattened.sol\":17726:17741  _balances[from] */\n  dup1\n    /* \"Clarence_dolar_flattened.sol\":17736:17740  from */\n  dup7\n    /* \"Clarence_dolar_flattened.sol\":17726:17741  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"Clarence_dolar_flattened.sol\":17726:17763  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Clarence_dolar_flattened.sol\":17426:17788  {... */\n  pop\n    /* \"Clarence_dolar_flattened.sol\":17248:17788  if (from == address(0)) {... */\ntag_65:\n    /* \"Clarence_dolar_flattened.sol\":17816:17817  0 */\n  0x00\n    /* \"Clarence_dolar_flattened.sol\":17802:17818  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Clarence_dolar_flattened.sol\":17802:17804  to */\n  dup3\n    /* \"Clarence_dolar_flattened.sol\":17802:17818  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"Clarence_dolar_flattened.sol\":17798:18223  if (to == address(0)) {... */\n  tag_69\n  jumpi\n    /* \"Clarence_dolar_flattened.sol\":17981:17986  value */\n  dup1\n    /* \"Clarence_dolar_flattened.sol\":17965:17977  _totalSupply */\n  0x02\n  0x00\n    /* \"Clarence_dolar_flattened.sol\":17965:17986  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Clarence_dolar_flattened.sol\":17798:18223  if (to == address(0)) {... */\n  jump(tag_70)\ntag_69:\n    /* \"Clarence_dolar_flattened.sol\":18193:18198  value */\n  dup1\n    /* \"Clarence_dolar_flattened.sol\":18176:18185  _balances */\n  0x00\n    /* \"Clarence_dolar_flattened.sol\":18176:18189  _balances[to] */\n  dup1\n    /* \"Clarence_dolar_flattened.sol\":18186:18188  to */\n  dup5\n    /* \"Clarence_dolar_flattened.sol\":18176:18189  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"Clarence_dolar_flattened.sol\":18176:18198  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Clarence_dolar_flattened.sol\":17798:18223  if (to == address(0)) {... */\ntag_70:\n    /* \"Clarence_dolar_flattened.sol\":18253:18255  to */\n  dup2\n    /* \"Clarence_dolar_flattened.sol\":18238:18263  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Clarence_dolar_flattened.sol\":18247:18251  from */\n  dup4\n    /* \"Clarence_dolar_flattened.sol\":18238:18263  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"Clarence_dolar_flattened.sol\":18257:18262  value */\n  dup4\n    /* \"Clarence_dolar_flattened.sol\":18238:18263  Transfer(from, to, value) */\n  mload(0x40)\n  tag_71\n  swap2\n  swap1\n  tag_72\n  jump\t// in\ntag_71:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"Clarence_dolar_flattened.sol\":17163:18270  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_74:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_76:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_77:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_122\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_76\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_78:\n    /* \"#utility.yul\":641:665   */\n  tag_124\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_77\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_125\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_125:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_79:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_127\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_78\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_129\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_130\n  tag_74\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":932:1051   */\ntag_129:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_131\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_79\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1301   */\ntag_80:\n    /* \"#utility.yul\":1254:1260   */\n  0x00\n    /* \"#utility.yul\":1288:1293   */\n  dup2\n    /* \"#utility.yul\":1282:1294   */\n  mload\n    /* \"#utility.yul\":1272:1294   */\n  swap1\n  pop\n    /* \"#utility.yul\":1202:1301   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1307:1487   */\ntag_81:\n    /* \"#utility.yul\":1355:1432   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1352:1353   */\n  0x00\n    /* \"#utility.yul\":1345:1433   */\n  mstore\n    /* \"#utility.yul\":1452:1456   */\n  0x41\n    /* \"#utility.yul\":1449:1450   */\n  0x04\n    /* \"#utility.yul\":1442:1457   */\n  mstore\n    /* \"#utility.yul\":1476:1480   */\n  0x24\n    /* \"#utility.yul\":1473:1474   */\n  0x00\n    /* \"#utility.yul\":1466:1481   */\n  revert\n    /* \"#utility.yul\":1493:1673   */\ntag_82:\n    /* \"#utility.yul\":1541:1618   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1531:1619   */\n  mstore\n    /* \"#utility.yul\":1638:1642   */\n  0x22\n    /* \"#utility.yul\":1635:1636   */\n  0x04\n    /* \"#utility.yul\":1628:1643   */\n  mstore\n    /* \"#utility.yul\":1662:1666   */\n  0x24\n    /* \"#utility.yul\":1659:1660   */\n  0x00\n    /* \"#utility.yul\":1652:1667   */\n  revert\n    /* \"#utility.yul\":1679:1999   */\ntag_83:\n    /* \"#utility.yul\":1723:1729   */\n  0x00\n    /* \"#utility.yul\":1760:1761   */\n  0x02\n    /* \"#utility.yul\":1754:1758   */\n  dup3\n    /* \"#utility.yul\":1750:1762   */\n  div\n    /* \"#utility.yul\":1740:1762   */\n  swap1\n  pop\n    /* \"#utility.yul\":1807:1808   */\n  0x01\n    /* \"#utility.yul\":1801:1805   */\n  dup3\n    /* \"#utility.yul\":1797:1809   */\n  and\n    /* \"#utility.yul\":1828:1846   */\n  dup1\n    /* \"#utility.yul\":1818:1899   */\n  tag_136\n  jumpi\n    /* \"#utility.yul\":1884:1888   */\n  0x7f\n    /* \"#utility.yul\":1876:1882   */\n  dup3\n    /* \"#utility.yul\":1872:1889   */\n  and\n    /* \"#utility.yul\":1862:1889   */\n  swap2\n  pop\n    /* \"#utility.yul\":1818:1899   */\ntag_136:\n    /* \"#utility.yul\":1946:1948   */\n  0x20\n    /* \"#utility.yul\":1938:1944   */\n  dup3\n    /* \"#utility.yul\":1935:1949   */\n  lt\n    /* \"#utility.yul\":1915:1933   */\n  dup2\n    /* \"#utility.yul\":1912:1950   */\n  sub\n    /* \"#utility.yul\":1909:1993   */\n  tag_137\n  jumpi\n    /* \"#utility.yul\":1965:1983   */\n  tag_138\n  tag_82\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":1909:1993   */\ntag_137:\n    /* \"#utility.yul\":1730:1999   */\n  pop\n    /* \"#utility.yul\":1679:1999   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2005:2146   */\ntag_84:\n    /* \"#utility.yul\":2054:2058   */\n  0x00\n    /* \"#utility.yul\":2077:2080   */\n  dup2\n    /* \"#utility.yul\":2069:2080   */\n  swap1\n  pop\n    /* \"#utility.yul\":2100:2103   */\n  dup2\n    /* \"#utility.yul\":2097:2098   */\n  0x00\n    /* \"#utility.yul\":2090:2104   */\n  mstore\n    /* \"#utility.yul\":2134:2138   */\n  0x20\n    /* \"#utility.yul\":2131:2132   */\n  0x00\n    /* \"#utility.yul\":2121:2139   */\n  keccak256\n    /* \"#utility.yul\":2113:2139   */\n  swap1\n  pop\n    /* \"#utility.yul\":2005:2146   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2152:2245   */\ntag_85:\n    /* \"#utility.yul\":2189:2195   */\n  0x00\n    /* \"#utility.yul\":2236:2238   */\n  0x20\n    /* \"#utility.yul\":2231:2233   */\n  0x1f\n    /* \"#utility.yul\":2224:2229   */\n  dup4\n    /* \"#utility.yul\":2220:2234   */\n  add\n    /* \"#utility.yul\":2216:2239   */\n  div\n    /* \"#utility.yul\":2206:2239   */\n  swap1\n  pop\n    /* \"#utility.yul\":2152:2245   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2251:2358   */\ntag_86:\n    /* \"#utility.yul\":2295:2303   */\n  0x00\n    /* \"#utility.yul\":2345:2350   */\n  dup3\n    /* \"#utility.yul\":2339:2343   */\n  dup3\n    /* \"#utility.yul\":2335:2351   */\n  shl\n    /* \"#utility.yul\":2314:2351   */\n  swap1\n  pop\n    /* \"#utility.yul\":2251:2358   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2364:2757   */\ntag_87:\n    /* \"#utility.yul\":2433:2439   */\n  0x00\n    /* \"#utility.yul\":2483:2484   */\n  0x08\n    /* \"#utility.yul\":2471:2481   */\n  dup4\n    /* \"#utility.yul\":2467:2485   */\n  mul\n    /* \"#utility.yul\":2506:2603   */\n  tag_143\n    /* \"#utility.yul\":2536:2602   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2525:2534   */\n  dup3\n    /* \"#utility.yul\":2506:2603   */\n  tag_86\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":2624:2663   */\n  tag_144\n    /* \"#utility.yul\":2654:2662   */\n  dup7\n    /* \"#utility.yul\":2643:2652   */\n  dup4\n    /* \"#utility.yul\":2624:2663   */\n  tag_86\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":2612:2663   */\n  swap6\n  pop\n    /* \"#utility.yul\":2696:2700   */\n  dup1\n    /* \"#utility.yul\":2692:2701   */\n  not\n    /* \"#utility.yul\":2685:2690   */\n  dup5\n    /* \"#utility.yul\":2681:2702   */\n  and\n    /* \"#utility.yul\":2672:2702   */\n  swap4\n  pop\n    /* \"#utility.yul\":2745:2749   */\n  dup1\n    /* \"#utility.yul\":2735:2743   */\n  dup7\n    /* \"#utility.yul\":2731:2750   */\n  and\n    /* \"#utility.yul\":2724:2729   */\n  dup5\n    /* \"#utility.yul\":2721:2751   */\n  or\n    /* \"#utility.yul\":2711:2751   */\n  swap3\n  pop\n    /* \"#utility.yul\":2440:2757   */\n  pop\n  pop\n    /* \"#utility.yul\":2364:2757   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2763:2840   */\ntag_88:\n    /* \"#utility.yul\":2800:2807   */\n  0x00\n    /* \"#utility.yul\":2829:2834   */\n  dup2\n    /* \"#utility.yul\":2818:2834   */\n  swap1\n  pop\n    /* \"#utility.yul\":2763:2840   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2846:2906   */\ntag_89:\n    /* \"#utility.yul\":2874:2877   */\n  0x00\n    /* \"#utility.yul\":2895:2900   */\n  dup2\n    /* \"#utility.yul\":2888:2900   */\n  swap1\n  pop\n    /* \"#utility.yul\":2846:2906   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2912:3054   */\ntag_90:\n    /* \"#utility.yul\":2962:2971   */\n  0x00\n    /* \"#utility.yul\":2995:3048   */\n  tag_148\n    /* \"#utility.yul\":3013:3047   */\n  tag_149\n    /* \"#utility.yul\":3022:3046   */\n  tag_150\n    /* \"#utility.yul\":3040:3045   */\n  dup5\n    /* \"#utility.yul\":3022:3046   */\n  tag_88\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":3013:3047   */\n  tag_89\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":2995:3048   */\n  tag_88\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":2982:3048   */\n  swap1\n  pop\n    /* \"#utility.yul\":2912:3054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3060:3135   */\ntag_91:\n    /* \"#utility.yul\":3103:3106   */\n  0x00\n    /* \"#utility.yul\":3124:3129   */\n  dup2\n    /* \"#utility.yul\":3117:3129   */\n  swap1\n  pop\n    /* \"#utility.yul\":3060:3135   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3141:3410   */\ntag_92:\n    /* \"#utility.yul\":3251:3290   */\n  tag_153\n    /* \"#utility.yul\":3282:3289   */\n  dup4\n    /* \"#utility.yul\":3251:3290   */\n  tag_90\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":3312:3403   */\n  tag_154\n    /* \"#utility.yul\":3361:3402   */\n  tag_155\n    /* \"#utility.yul\":3385:3401   */\n  dup3\n    /* \"#utility.yul\":3361:3402   */\n  tag_91\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":3353:3359   */\n  dup5\n    /* \"#utility.yul\":3346:3350   */\n  dup5\n    /* \"#utility.yul\":3340:3351   */\n  sload\n    /* \"#utility.yul\":3312:3403   */\n  tag_87\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":3306:3310   */\n  dup3\n    /* \"#utility.yul\":3299:3404   */\n  sstore\n    /* \"#utility.yul\":3217:3410   */\n  pop\n    /* \"#utility.yul\":3141:3410   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3416:3489   */\ntag_93:\n    /* \"#utility.yul\":3461:3464   */\n  0x00\n    /* \"#utility.yul\":3416:3489   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3495:3684   */\ntag_94:\n    /* \"#utility.yul\":3572:3604   */\n  tag_158\n  tag_93\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":3613:3678   */\n  tag_159\n    /* \"#utility.yul\":3671:3677   */\n  dup2\n    /* \"#utility.yul\":3663:3669   */\n  dup5\n    /* \"#utility.yul\":3657:3661   */\n  dup5\n    /* \"#utility.yul\":3613:3678   */\n  tag_92\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":3548:3684   */\n  pop\n    /* \"#utility.yul\":3495:3684   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3690:3876   */\ntag_95:\n    /* \"#utility.yul\":3750:3870   */\ntag_161:\n    /* \"#utility.yul\":3767:3770   */\n  dup2\n    /* \"#utility.yul\":3760:3765   */\n  dup2\n    /* \"#utility.yul\":3757:3771   */\n  lt\n    /* \"#utility.yul\":3750:3870   */\n  iszero\n  tag_163\n  jumpi\n    /* \"#utility.yul\":3821:3860   */\n  tag_164\n    /* \"#utility.yul\":3858:3859   */\n  0x00\n    /* \"#utility.yul\":3851:3856   */\n  dup3\n    /* \"#utility.yul\":3821:3860   */\n  tag_94\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":3794:3795   */\n  0x01\n    /* \"#utility.yul\":3787:3792   */\n  dup2\n    /* \"#utility.yul\":3783:3796   */\n  add\n    /* \"#utility.yul\":3774:3796   */\n  swap1\n  pop\n    /* \"#utility.yul\":3750:3870   */\n  jump(tag_161)\ntag_163:\n    /* \"#utility.yul\":3690:3876   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3882:4425   */\ntag_96:\n    /* \"#utility.yul\":3983:3985   */\n  0x1f\n    /* \"#utility.yul\":3978:3981   */\n  dup3\n    /* \"#utility.yul\":3975:3986   */\n  gt\n    /* \"#utility.yul\":3972:4418   */\n  iszero\n  tag_166\n  jumpi\n    /* \"#utility.yul\":4017:4055   */\n  tag_167\n    /* \"#utility.yul\":4049:4054   */\n  dup2\n    /* \"#utility.yul\":4017:4055   */\n  tag_84\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":4101:4130   */\n  tag_168\n    /* \"#utility.yul\":4119:4129   */\n  dup5\n    /* \"#utility.yul\":4101:4130   */\n  tag_85\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":4091:4099   */\n  dup2\n    /* \"#utility.yul\":4087:4131   */\n  add\n    /* \"#utility.yul\":4284:4286   */\n  0x20\n    /* \"#utility.yul\":4272:4282   */\n  dup6\n    /* \"#utility.yul\":4269:4287   */\n  lt\n    /* \"#utility.yul\":4266:4315   */\n  iszero\n  tag_169\n  jumpi\n    /* \"#utility.yul\":4305:4313   */\n  dup2\n    /* \"#utility.yul\":4290:4313   */\n  swap1\n  pop\n    /* \"#utility.yul\":4266:4315   */\ntag_169:\n    /* \"#utility.yul\":4328:4408   */\n  tag_170\n    /* \"#utility.yul\":4384:4406   */\n  tag_171\n    /* \"#utility.yul\":4402:4405   */\n  dup6\n    /* \"#utility.yul\":4384:4406   */\n  tag_85\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":4374:4382   */\n  dup4\n    /* \"#utility.yul\":4370:4407   */\n  add\n    /* \"#utility.yul\":4357:4368   */\n  dup3\n    /* \"#utility.yul\":4328:4408   */\n  tag_95\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":3987:4418   */\n  pop\n  pop\n    /* \"#utility.yul\":3972:4418   */\ntag_166:\n    /* \"#utility.yul\":3882:4425   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4431:4548   */\ntag_97:\n    /* \"#utility.yul\":4485:4493   */\n  0x00\n    /* \"#utility.yul\":4535:4540   */\n  dup3\n    /* \"#utility.yul\":4529:4533   */\n  dup3\n    /* \"#utility.yul\":4525:4541   */\n  shr\n    /* \"#utility.yul\":4504:4541   */\n  swap1\n  pop\n    /* \"#utility.yul\":4431:4548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4554:4723   */\ntag_98:\n    /* \"#utility.yul\":4598:4604   */\n  0x00\n    /* \"#utility.yul\":4631:4682   */\n  tag_174\n    /* \"#utility.yul\":4679:4680   */\n  0x00\n    /* \"#utility.yul\":4675:4681   */\n  not\n    /* \"#utility.yul\":4667:4672   */\n  dup5\n    /* \"#utility.yul\":4664:4665   */\n  0x08\n    /* \"#utility.yul\":4660:4673   */\n  mul\n    /* \"#utility.yul\":4631:4682   */\n  tag_97\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":4627:4683   */\n  not\n    /* \"#utility.yul\":4712:4716   */\n  dup1\n    /* \"#utility.yul\":4706:4710   */\n  dup4\n    /* \"#utility.yul\":4702:4717   */\n  and\n    /* \"#utility.yul\":4692:4717   */\n  swap2\n  pop\n    /* \"#utility.yul\":4605:4723   */\n  pop\n    /* \"#utility.yul\":4554:4723   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4728:5023   */\ntag_99:\n    /* \"#utility.yul\":4804:4808   */\n  0x00\n    /* \"#utility.yul\":4950:4979   */\n  tag_176\n    /* \"#utility.yul\":4975:4978   */\n  dup4\n    /* \"#utility.yul\":4969:4973   */\n  dup4\n    /* \"#utility.yul\":4950:4979   */\n  tag_98\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":4942:4979   */\n  swap2\n  pop\n    /* \"#utility.yul\":5012:5015   */\n  dup3\n    /* \"#utility.yul\":5009:5010   */\n  0x02\n    /* \"#utility.yul\":5005:5016   */\n  mul\n    /* \"#utility.yul\":4999:5003   */\n  dup3\n    /* \"#utility.yul\":4996:5017   */\n  or\n    /* \"#utility.yul\":4988:5017   */\n  swap1\n  pop\n    /* \"#utility.yul\":4728:5023   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5028:6423   */\ntag_11:\n    /* \"#utility.yul\":5145:5182   */\n  tag_178\n    /* \"#utility.yul\":5178:5181   */\n  dup3\n    /* \"#utility.yul\":5145:5182   */\n  tag_80\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":5247:5265   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5239:5245   */\n  dup2\n    /* \"#utility.yul\":5236:5266   */\n  gt\n    /* \"#utility.yul\":5233:5289   */\n  iszero\n  tag_179\n  jumpi\n    /* \"#utility.yul\":5269:5287   */\n  tag_180\n  tag_81\n  jump\t// in\ntag_180:\n    /* \"#utility.yul\":5233:5289   */\ntag_179:\n    /* \"#utility.yul\":5313:5351   */\n  tag_181\n    /* \"#utility.yul\":5345:5349   */\n  dup3\n    /* \"#utility.yul\":5339:5350   */\n  sload\n    /* \"#utility.yul\":5313:5351   */\n  tag_83\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":5398:5465   */\n  tag_182\n    /* \"#utility.yul\":5458:5464   */\n  dup3\n    /* \"#utility.yul\":5450:5456   */\n  dup3\n    /* \"#utility.yul\":5444:5448   */\n  dup6\n    /* \"#utility.yul\":5398:5465   */\n  tag_96\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":5492:5493   */\n  0x00\n    /* \"#utility.yul\":5516:5520   */\n  0x20\n    /* \"#utility.yul\":5503:5520   */\n  swap1\n  pop\n    /* \"#utility.yul\":5548:5550   */\n  0x1f\n    /* \"#utility.yul\":5540:5546   */\n  dup4\n    /* \"#utility.yul\":5537:5551   */\n  gt\n    /* \"#utility.yul\":5565:5566   */\n  0x01\n    /* \"#utility.yul\":5560:6178   */\n  dup2\n  eq\n  tag_184\n  jumpi\n    /* \"#utility.yul\":6222:6223   */\n  0x00\n    /* \"#utility.yul\":6239:6245   */\n  dup5\n    /* \"#utility.yul\":6236:6313   */\n  iszero\n  tag_185\n  jumpi\n    /* \"#utility.yul\":6288:6297   */\n  dup3\n    /* \"#utility.yul\":6283:6286   */\n  dup8\n    /* \"#utility.yul\":6279:6298   */\n  add\n    /* \"#utility.yul\":6273:6299   */\n  mload\n    /* \"#utility.yul\":6264:6299   */\n  swap1\n  pop\n    /* \"#utility.yul\":6236:6313   */\ntag_185:\n    /* \"#utility.yul\":6339:6406   */\n  tag_186\n    /* \"#utility.yul\":6399:6405   */\n  dup6\n    /* \"#utility.yul\":6392:6397   */\n  dup3\n    /* \"#utility.yul\":6339:6406   */\n  tag_99\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":6333:6337   */\n  dup7\n    /* \"#utility.yul\":6326:6407   */\n  sstore\n    /* \"#utility.yul\":6195:6417   */\n  pop\n    /* \"#utility.yul\":5530:6417   */\n  jump(tag_183)\n    /* \"#utility.yul\":5560:6178   */\ntag_184:\n    /* \"#utility.yul\":5612:5616   */\n  0x1f\n    /* \"#utility.yul\":5608:5617   */\n  not\n    /* \"#utility.yul\":5600:5606   */\n  dup5\n    /* \"#utility.yul\":5596:5618   */\n  and\n    /* \"#utility.yul\":5646:5683   */\n  tag_187\n    /* \"#utility.yul\":5678:5682   */\n  dup7\n    /* \"#utility.yul\":5646:5683   */\n  tag_84\n  jump\t// in\ntag_187:\n    /* \"#utility.yul\":5705:5706   */\n  0x00\n    /* \"#utility.yul\":5719:5927   */\ntag_188:\n    /* \"#utility.yul\":5733:5740   */\n  dup3\n    /* \"#utility.yul\":5730:5731   */\n  dup2\n    /* \"#utility.yul\":5727:5741   */\n  lt\n    /* \"#utility.yul\":5719:5927   */\n  iszero\n  tag_190\n  jumpi\n    /* \"#utility.yul\":5812:5821   */\n  dup5\n    /* \"#utility.yul\":5807:5810   */\n  dup10\n    /* \"#utility.yul\":5803:5822   */\n  add\n    /* \"#utility.yul\":5797:5823   */\n  mload\n    /* \"#utility.yul\":5789:5795   */\n  dup3\n    /* \"#utility.yul\":5782:5824   */\n  sstore\n    /* \"#utility.yul\":5863:5864   */\n  0x01\n    /* \"#utility.yul\":5855:5861   */\n  dup3\n    /* \"#utility.yul\":5851:5865   */\n  add\n    /* \"#utility.yul\":5841:5865   */\n  swap2\n  pop\n    /* \"#utility.yul\":5910:5912   */\n  0x20\n    /* \"#utility.yul\":5899:5908   */\n  dup6\n    /* \"#utility.yul\":5895:5913   */\n  add\n    /* \"#utility.yul\":5882:5913   */\n  swap5\n  pop\n    /* \"#utility.yul\":5756:5760   */\n  0x20\n    /* \"#utility.yul\":5753:5754   */\n  dup2\n    /* \"#utility.yul\":5749:5761   */\n  add\n    /* \"#utility.yul\":5744:5761   */\n  swap1\n  pop\n    /* \"#utility.yul\":5719:5927   */\n  jump(tag_188)\ntag_190:\n    /* \"#utility.yul\":5955:5961   */\n  dup7\n    /* \"#utility.yul\":5946:5953   */\n  dup4\n    /* \"#utility.yul\":5943:5962   */\n  lt\n    /* \"#utility.yul\":5940:6119   */\n  iszero\n  tag_191\n  jumpi\n    /* \"#utility.yul\":6013:6022   */\n  dup5\n    /* \"#utility.yul\":6008:6011   */\n  dup10\n    /* \"#utility.yul\":6004:6023   */\n  add\n    /* \"#utility.yul\":5998:6024   */\n  mload\n    /* \"#utility.yul\":6056:6104   */\n  tag_192\n    /* \"#utility.yul\":6098:6102   */\n  0x1f\n    /* \"#utility.yul\":6090:6096   */\n  dup10\n    /* \"#utility.yul\":6086:6103   */\n  and\n    /* \"#utility.yul\":6075:6084   */\n  dup3\n    /* \"#utility.yul\":6056:6104   */\n  tag_98\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":6048:6054   */\n  dup4\n    /* \"#utility.yul\":6041:6105   */\n  sstore\n    /* \"#utility.yul\":5963:6119   */\n  pop\n    /* \"#utility.yul\":5940:6119   */\ntag_191:\n    /* \"#utility.yul\":6165:6166   */\n  0x01\n    /* \"#utility.yul\":6161:6162   */\n  0x02\n    /* \"#utility.yul\":6153:6159   */\n  dup9\n    /* \"#utility.yul\":6149:6163   */\n  mul\n    /* \"#utility.yul\":6145:6167   */\n  add\n    /* \"#utility.yul\":6139:6143   */\n  dup9\n    /* \"#utility.yul\":6132:6168   */\n  sstore\n    /* \"#utility.yul\":5567:6178   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5530:6417   */\ntag_183:\n  pop\n    /* \"#utility.yul\":5120:6423   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5028:6423   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6429:6547   */\ntag_100:\n    /* \"#utility.yul\":6516:6540   */\n  tag_194\n    /* \"#utility.yul\":6534:6539   */\n  dup2\n    /* \"#utility.yul\":6516:6540   */\n  tag_77\n  jump\t// in\ntag_194:\n    /* \"#utility.yul\":6511:6514   */\n  dup3\n    /* \"#utility.yul\":6504:6541   */\n  mstore\n    /* \"#utility.yul\":6429:6547   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6553:6775   */\ntag_16:\n    /* \"#utility.yul\":6646:6650   */\n  0x00\n    /* \"#utility.yul\":6684:6686   */\n  0x20\n    /* \"#utility.yul\":6673:6682   */\n  dup3\n    /* \"#utility.yul\":6669:6687   */\n  add\n    /* \"#utility.yul\":6661:6687   */\n  swap1\n  pop\n    /* \"#utility.yul\":6697:6768   */\n  tag_196\n    /* \"#utility.yul\":6765:6766   */\n  0x00\n    /* \"#utility.yul\":6754:6763   */\n  dup4\n    /* \"#utility.yul\":6750:6767   */\n  add\n    /* \"#utility.yul\":6741:6747   */\n  dup5\n    /* \"#utility.yul\":6697:6768   */\n  tag_100\n  jump\t// in\ntag_196:\n    /* \"#utility.yul\":6553:6775   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6781:6961   */\ntag_101:\n    /* \"#utility.yul\":6829:6906   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":6826:6827   */\n  0x00\n    /* \"#utility.yul\":6819:6907   */\n  mstore\n    /* \"#utility.yul\":6926:6930   */\n  0x11\n    /* \"#utility.yul\":6923:6924   */\n  0x04\n    /* \"#utility.yul\":6916:6931   */\n  mstore\n    /* \"#utility.yul\":6950:6954   */\n  0x24\n    /* \"#utility.yul\":6947:6948   */\n  0x00\n    /* \"#utility.yul\":6940:6955   */\n  revert\n    /* \"#utility.yul\":6967:7069   */\ntag_102:\n    /* \"#utility.yul\":7009:7017   */\n  0x00\n    /* \"#utility.yul\":7056:7061   */\n  dup2\n    /* \"#utility.yul\":7053:7054   */\n  0x01\n    /* \"#utility.yul\":7049:7062   */\n  shr\n    /* \"#utility.yul\":7028:7062   */\n  swap1\n  pop\n    /* \"#utility.yul\":6967:7069   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7075:7923   */\ntag_103:\n    /* \"#utility.yul\":7136:7141   */\n  0x00\n    /* \"#utility.yul\":7143:7147   */\n  dup1\n    /* \"#utility.yul\":7167:7173   */\n  dup3\n    /* \"#utility.yul\":7158:7173   */\n  swap2\n  pop\n    /* \"#utility.yul\":7191:7196   */\n  dup4\n    /* \"#utility.yul\":7182:7196   */\n  swap1\n  pop\n    /* \"#utility.yul\":7205:7917   */\ntag_200:\n    /* \"#utility.yul\":7226:7227   */\n  0x01\n    /* \"#utility.yul\":7216:7224   */\n  dup6\n    /* \"#utility.yul\":7213:7228   */\n  gt\n    /* \"#utility.yul\":7205:7917   */\n  iszero\n  tag_202\n  jumpi\n    /* \"#utility.yul\":7321:7325   */\n  dup1\n    /* \"#utility.yul\":7316:7319   */\n  dup7\n    /* \"#utility.yul\":7312:7326   */\n  div\n    /* \"#utility.yul\":7306:7310   */\n  dup2\n    /* \"#utility.yul\":7303:7327   */\n  gt\n    /* \"#utility.yul\":7300:7350   */\n  iszero\n  tag_203\n  jumpi\n    /* \"#utility.yul\":7330:7348   */\n  tag_204\n  tag_101\n  jump\t// in\ntag_204:\n    /* \"#utility.yul\":7300:7350   */\ntag_203:\n    /* \"#utility.yul\":7380:7381   */\n  0x01\n    /* \"#utility.yul\":7370:7378   */\n  dup6\n    /* \"#utility.yul\":7366:7382   */\n  and\n    /* \"#utility.yul\":7363:7814   */\n  iszero\n  tag_205\n  jumpi\n    /* \"#utility.yul\":7795:7799   */\n  dup1\n    /* \"#utility.yul\":7788:7793   */\n  dup3\n    /* \"#utility.yul\":7784:7800   */\n  mul\n    /* \"#utility.yul\":7775:7800   */\n  swap2\n  pop\n    /* \"#utility.yul\":7363:7814   */\ntag_205:\n    /* \"#utility.yul\":7845:7849   */\n  dup1\n    /* \"#utility.yul\":7839:7843   */\n  dup2\n    /* \"#utility.yul\":7835:7850   */\n  mul\n    /* \"#utility.yul\":7827:7850   */\n  swap1\n  pop\n    /* \"#utility.yul\":7875:7907   */\n  tag_206\n    /* \"#utility.yul\":7898:7906   */\n  dup6\n    /* \"#utility.yul\":7875:7907   */\n  tag_102\n  jump\t// in\ntag_206:\n    /* \"#utility.yul\":7863:7907   */\n  swap5\n  pop\n    /* \"#utility.yul\":7205:7917   */\n  jump(tag_200)\ntag_202:\n    /* \"#utility.yul\":7075:7923   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7929:9002   */\ntag_104:\n    /* \"#utility.yul\":7983:7988   */\n  0x00\n    /* \"#utility.yul\":8174:8182   */\n  dup3\n    /* \"#utility.yul\":8164:8204   */\n  tag_208\n  jumpi\n    /* \"#utility.yul\":8195:8196   */\n  0x01\n    /* \"#utility.yul\":8186:8196   */\n  swap1\n  pop\n    /* \"#utility.yul\":8197:8202   */\n  jump(tag_207)\n    /* \"#utility.yul\":8164:8204   */\ntag_208:\n    /* \"#utility.yul\":8223:8227   */\n  dup2\n    /* \"#utility.yul\":8213:8249   */\n  tag_209\n  jumpi\n    /* \"#utility.yul\":8240:8241   */\n  0x00\n    /* \"#utility.yul\":8231:8241   */\n  swap1\n  pop\n    /* \"#utility.yul\":8242:8247   */\n  jump(tag_207)\n    /* \"#utility.yul\":8213:8249   */\ntag_209:\n    /* \"#utility.yul\":8309:8313   */\n  dup2\n    /* \"#utility.yul\":8357:8358   */\n  0x01\n    /* \"#utility.yul\":8352:8379   */\n  dup2\n  eq\n  tag_211\n  jumpi\n    /* \"#utility.yul\":8393:8394   */\n  0x02\n    /* \"#utility.yul\":8388:8579   */\n  dup2\n  eq\n  tag_212\n  jumpi\n    /* \"#utility.yul\":8302:8579   */\n  jump(tag_210)\n    /* \"#utility.yul\":8352:8379   */\ntag_211:\n    /* \"#utility.yul\":8370:8371   */\n  0x01\n    /* \"#utility.yul\":8361:8371   */\n  swap2\n  pop\n    /* \"#utility.yul\":8372:8377   */\n  pop\n  jump(tag_207)\n    /* \"#utility.yul\":8388:8579   */\ntag_212:\n    /* \"#utility.yul\":8433:8436   */\n  0xff\n    /* \"#utility.yul\":8423:8431   */\n  dup5\n    /* \"#utility.yul\":8420:8437   */\n  gt\n    /* \"#utility.yul\":8417:8460   */\n  iszero\n  tag_213\n  jumpi\n    /* \"#utility.yul\":8440:8458   */\n  tag_214\n  tag_101\n  jump\t// in\ntag_214:\n    /* \"#utility.yul\":8417:8460   */\ntag_213:\n    /* \"#utility.yul\":8489:8497   */\n  dup4\n    /* \"#utility.yul\":8486:8487   */\n  0x02\n    /* \"#utility.yul\":8482:8498   */\n  exp\n    /* \"#utility.yul\":8473:8498   */\n  swap2\n  pop\n    /* \"#utility.yul\":8524:8527   */\n  dup5\n    /* \"#utility.yul\":8517:8522   */\n  dup3\n    /* \"#utility.yul\":8514:8528   */\n  gt\n    /* \"#utility.yul\":8511:8551   */\n  iszero\n  tag_215\n  jumpi\n    /* \"#utility.yul\":8531:8549   */\n  tag_216\n  tag_101\n  jump\t// in\ntag_216:\n    /* \"#utility.yul\":8511:8551   */\ntag_215:\n    /* \"#utility.yul\":8564:8569   */\n  pop\n  jump(tag_207)\n    /* \"#utility.yul\":8302:8579   */\ntag_210:\n  pop\n    /* \"#utility.yul\":8688:8690   */\n  0x20\n    /* \"#utility.yul\":8678:8686   */\n  dup4\n    /* \"#utility.yul\":8675:8691   */\n  lt\n    /* \"#utility.yul\":8669:8672   */\n  0x0133\n    /* \"#utility.yul\":8663:8667   */\n  dup4\n    /* \"#utility.yul\":8660:8673   */\n  lt\n    /* \"#utility.yul\":8656:8692   */\n  and\n    /* \"#utility.yul\":8638:8640   */\n  0x4e\n    /* \"#utility.yul\":8628:8636   */\n  dup5\n    /* \"#utility.yul\":8625:8641   */\n  lt\n    /* \"#utility.yul\":8620:8622   */\n  0x0b\n    /* \"#utility.yul\":8614:8618   */\n  dup5\n    /* \"#utility.yul\":8611:8623   */\n  lt\n    /* \"#utility.yul\":8607:8642   */\n  and\n    /* \"#utility.yul\":8591:8702   */\n  or\n    /* \"#utility.yul\":8588:8834   */\n  iszero\n  tag_217\n  jumpi\n    /* \"#utility.yul\":8744:8752   */\n  dup3\n    /* \"#utility.yul\":8738:8742   */\n  dup3\n    /* \"#utility.yul\":8734:8753   */\n  exp\n    /* \"#utility.yul\":8725:8753   */\n  swap1\n  pop\n    /* \"#utility.yul\":8779:8782   */\n  dup4\n    /* \"#utility.yul\":8772:8777   */\n  dup2\n    /* \"#utility.yul\":8769:8783   */\n  gt\n    /* \"#utility.yul\":8766:8806   */\n  iszero\n  tag_218\n  jumpi\n    /* \"#utility.yul\":8786:8804   */\n  tag_219\n  tag_101\n  jump\t// in\ntag_219:\n    /* \"#utility.yul\":8766:8806   */\ntag_218:\n    /* \"#utility.yul\":8819:8824   */\n  jump(tag_207)\n    /* \"#utility.yul\":8588:8834   */\ntag_217:\n    /* \"#utility.yul\":8859:8901   */\n  tag_220\n    /* \"#utility.yul\":8897:8900   */\n  dup5\n    /* \"#utility.yul\":8887:8895   */\n  dup5\n    /* \"#utility.yul\":8881:8885   */\n  dup5\n    /* \"#utility.yul\":8878:8879   */\n  0x01\n    /* \"#utility.yul\":8859:8901   */\n  tag_103\n  jump\t// in\ntag_220:\n    /* \"#utility.yul\":8844:8901   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":8933:8937   */\n  dup2\n    /* \"#utility.yul\":8928:8931   */\n  dup5\n    /* \"#utility.yul\":8924:8938   */\n  div\n    /* \"#utility.yul\":8917:8922   */\n  dup2\n    /* \"#utility.yul\":8914:8939   */\n  gt\n    /* \"#utility.yul\":8911:8962   */\n  iszero\n  tag_221\n  jumpi\n    /* \"#utility.yul\":8942:8960   */\n  tag_222\n  tag_101\n  jump\t// in\ntag_222:\n    /* \"#utility.yul\":8911:8962   */\ntag_221:\n    /* \"#utility.yul\":8991:8995   */\n  dup2\n    /* \"#utility.yul\":8984:8989   */\n  dup2\n    /* \"#utility.yul\":8980:8996   */\n  mul\n    /* \"#utility.yul\":8971:8996   */\n  swap1\n  pop\n    /* \"#utility.yul\":7929:9002   */\ntag_207:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9008:9094   */\ntag_105:\n    /* \"#utility.yul\":9043:9050   */\n  0x00\n    /* \"#utility.yul\":9083:9087   */\n  0xff\n    /* \"#utility.yul\":9076:9081   */\n  dup3\n    /* \"#utility.yul\":9072:9088   */\n  and\n    /* \"#utility.yul\":9061:9088   */\n  swap1\n  pop\n    /* \"#utility.yul\":9008:9094   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9100:9381   */\ntag_31:\n    /* \"#utility.yul\":9158:9163   */\n  0x00\n    /* \"#utility.yul\":9182:9205   */\n  tag_225\n    /* \"#utility.yul\":9200:9204   */\n  dup3\n    /* \"#utility.yul\":9182:9205   */\n  tag_88\n  jump\t// in\ntag_225:\n    /* \"#utility.yul\":9174:9205   */\n  swap2\n  pop\n    /* \"#utility.yul\":9226:9251   */\n  tag_226\n    /* \"#utility.yul\":9242:9250   */\n  dup4\n    /* \"#utility.yul\":9226:9251   */\n  tag_105\n  jump\t// in\ntag_226:\n    /* \"#utility.yul\":9214:9251   */\n  swap3\n  pop\n    /* \"#utility.yul\":9270:9374   */\n  tag_227\n    /* \"#utility.yul\":9307:9373   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":9297:9305   */\n  dup5\n    /* \"#utility.yul\":9291:9295   */\n  dup5\n    /* \"#utility.yul\":9270:9374   */\n  tag_104\n  jump\t// in\ntag_227:\n    /* \"#utility.yul\":9261:9374   */\n  swap1\n  pop\n    /* \"#utility.yul\":9100:9381   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9387:9797   */\ntag_33:\n    /* \"#utility.yul\":9427:9434   */\n  0x00\n    /* \"#utility.yul\":9450:9470   */\n  tag_229\n    /* \"#utility.yul\":9468:9469   */\n  dup3\n    /* \"#utility.yul\":9450:9470   */\n  tag_88\n  jump\t// in\ntag_229:\n    /* \"#utility.yul\":9445:9470   */\n  swap2\n  pop\n    /* \"#utility.yul\":9484:9504   */\n  tag_230\n    /* \"#utility.yul\":9502:9503   */\n  dup4\n    /* \"#utility.yul\":9484:9504   */\n  tag_88\n  jump\t// in\ntag_230:\n    /* \"#utility.yul\":9479:9504   */\n  swap3\n  pop\n    /* \"#utility.yul\":9539:9540   */\n  dup3\n    /* \"#utility.yul\":9536:9537   */\n  dup3\n    /* \"#utility.yul\":9532:9541   */\n  mul\n    /* \"#utility.yul\":9561:9591   */\n  tag_231\n    /* \"#utility.yul\":9579:9590   */\n  dup2\n    /* \"#utility.yul\":9561:9591   */\n  tag_88\n  jump\t// in\ntag_231:\n    /* \"#utility.yul\":9550:9591   */\n  swap2\n  pop\n    /* \"#utility.yul\":9740:9741   */\n  dup3\n    /* \"#utility.yul\":9731:9738   */\n  dup3\n    /* \"#utility.yul\":9727:9742   */\n  div\n    /* \"#utility.yul\":9724:9725   */\n  dup5\n    /* \"#utility.yul\":9721:9743   */\n  eq\n    /* \"#utility.yul\":9701:9702   */\n  dup4\n    /* \"#utility.yul\":9694:9703   */\n  iszero\n    /* \"#utility.yul\":9674:9757   */\n  or\n    /* \"#utility.yul\":9651:9790   */\n  tag_232\n  jumpi\n    /* \"#utility.yul\":9770:9788   */\n  tag_233\n  tag_101\n  jump\t// in\ntag_233:\n    /* \"#utility.yul\":9651:9790   */\ntag_232:\n    /* \"#utility.yul\":9435:9797   */\n  pop\n    /* \"#utility.yul\":9387:9797   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9803:9880   */\ntag_106:\n    /* \"#utility.yul\":9840:9847   */\n  0x00\n    /* \"#utility.yul\":9869:9874   */\n  dup2\n    /* \"#utility.yul\":9858:9874   */\n  swap1\n  pop\n    /* \"#utility.yul\":9803:9880   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9886:10004   */\ntag_107:\n    /* \"#utility.yul\":9973:9997   */\n  tag_236\n    /* \"#utility.yul\":9991:9996   */\n  dup2\n    /* \"#utility.yul\":9973:9997   */\n  tag_106\n  jump\t// in\ntag_236:\n    /* \"#utility.yul\":9968:9971   */\n  dup3\n    /* \"#utility.yul\":9961:9998   */\n  mstore\n    /* \"#utility.yul\":9886:10004   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10010:10128   */\ntag_108:\n    /* \"#utility.yul\":10097:10121   */\n  tag_238\n    /* \"#utility.yul\":10115:10120   */\n  dup2\n    /* \"#utility.yul\":10097:10121   */\n  tag_88\n  jump\t// in\ntag_238:\n    /* \"#utility.yul\":10092:10095   */\n  dup3\n    /* \"#utility.yul\":10085:10122   */\n  mstore\n    /* \"#utility.yul\":10010:10128   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10134:10798   */\ntag_47:\n    /* \"#utility.yul\":10339:10343   */\n  0x00\n    /* \"#utility.yul\":10377:10380   */\n  0xa0\n    /* \"#utility.yul\":10366:10375   */\n  dup3\n    /* \"#utility.yul\":10362:10381   */\n  add\n    /* \"#utility.yul\":10354:10381   */\n  swap1\n  pop\n    /* \"#utility.yul\":10391:10462   */\n  tag_240\n    /* \"#utility.yul\":10459:10460   */\n  0x00\n    /* \"#utility.yul\":10448:10457   */\n  dup4\n    /* \"#utility.yul\":10444:10461   */\n  add\n    /* \"#utility.yul\":10435:10441   */\n  dup9\n    /* \"#utility.yul\":10391:10462   */\n  tag_107\n  jump\t// in\ntag_240:\n    /* \"#utility.yul\":10472:10544   */\n  tag_241\n    /* \"#utility.yul\":10540:10542   */\n  0x20\n    /* \"#utility.yul\":10529:10538   */\n  dup4\n    /* \"#utility.yul\":10525:10543   */\n  add\n    /* \"#utility.yul\":10516:10522   */\n  dup8\n    /* \"#utility.yul\":10472:10544   */\n  tag_107\n  jump\t// in\ntag_241:\n    /* \"#utility.yul\":10554:10626   */\n  tag_242\n    /* \"#utility.yul\":10622:10624   */\n  0x40\n    /* \"#utility.yul\":10611:10620   */\n  dup4\n    /* \"#utility.yul\":10607:10625   */\n  add\n    /* \"#utility.yul\":10598:10604   */\n  dup7\n    /* \"#utility.yul\":10554:10626   */\n  tag_107\n  jump\t// in\ntag_242:\n    /* \"#utility.yul\":10636:10708   */\n  tag_243\n    /* \"#utility.yul\":10704:10706   */\n  0x60\n    /* \"#utility.yul\":10693:10702   */\n  dup4\n    /* \"#utility.yul\":10689:10707   */\n  add\n    /* \"#utility.yul\":10680:10686   */\n  dup6\n    /* \"#utility.yul\":10636:10708   */\n  tag_108\n  jump\t// in\ntag_243:\n    /* \"#utility.yul\":10718:10791   */\n  tag_244\n    /* \"#utility.yul\":10786:10789   */\n  0x80\n    /* \"#utility.yul\":10775:10784   */\n  dup4\n    /* \"#utility.yul\":10771:10790   */\n  add\n    /* \"#utility.yul\":10762:10768   */\n  dup5\n    /* \"#utility.yul\":10718:10791   */\n  tag_100\n  jump\t// in\ntag_244:\n    /* \"#utility.yul\":10134:10798   */\n  swap7\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10804:10973   */\ntag_109:\n    /* \"#utility.yul\":10888:10899   */\n  0x00\n    /* \"#utility.yul\":10922:10928   */\n  dup3\n    /* \"#utility.yul\":10917:10920   */\n  dup3\n    /* \"#utility.yul\":10910:10929   */\n  mstore\n    /* \"#utility.yul\":10962:10966   */\n  0x20\n    /* \"#utility.yul\":10957:10960   */\n  dup3\n    /* \"#utility.yul\":10953:10967   */\n  add\n    /* \"#utility.yul\":10938:10967   */\n  swap1\n  pop\n    /* \"#utility.yul\":10804:10973   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10979:11118   */\ntag_110:\n    /* \"#utility.yul\":11068:11074   */\n  dup3\n    /* \"#utility.yul\":11063:11066   */\n  dup2\n    /* \"#utility.yul\":11058:11061   */\n  dup4\n    /* \"#utility.yul\":11052:11075   */\n  mcopy\n    /* \"#utility.yul\":11109:11110   */\n  0x00\n    /* \"#utility.yul\":11100:11106   */\n  dup4\n    /* \"#utility.yul\":11095:11098   */\n  dup4\n    /* \"#utility.yul\":11091:11107   */\n  add\n    /* \"#utility.yul\":11084:11111   */\n  mstore\n    /* \"#utility.yul\":10979:11118   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11124:11226   */\ntag_111:\n    /* \"#utility.yul\":11165:11171   */\n  0x00\n    /* \"#utility.yul\":11216:11218   */\n  0x1f\n    /* \"#utility.yul\":11212:11219   */\n  not\n    /* \"#utility.yul\":11207:11209   */\n  0x1f\n    /* \"#utility.yul\":11200:11205   */\n  dup4\n    /* \"#utility.yul\":11196:11210   */\n  add\n    /* \"#utility.yul\":11192:11220   */\n  and\n    /* \"#utility.yul\":11182:11220   */\n  swap1\n  pop\n    /* \"#utility.yul\":11124:11226   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11232:11609   */\ntag_112:\n    /* \"#utility.yul\":11320:11323   */\n  0x00\n    /* \"#utility.yul\":11348:11387   */\n  tag_249\n    /* \"#utility.yul\":11381:11386   */\n  dup3\n    /* \"#utility.yul\":11348:11387   */\n  tag_80\n  jump\t// in\ntag_249:\n    /* \"#utility.yul\":11403:11474   */\n  tag_250\n    /* \"#utility.yul\":11467:11473   */\n  dup2\n    /* \"#utility.yul\":11462:11465   */\n  dup6\n    /* \"#utility.yul\":11403:11474   */\n  tag_109\n  jump\t// in\ntag_250:\n    /* \"#utility.yul\":11396:11474   */\n  swap4\n  pop\n    /* \"#utility.yul\":11483:11548   */\n  tag_251\n    /* \"#utility.yul\":11541:11547   */\n  dup2\n    /* \"#utility.yul\":11536:11539   */\n  dup6\n    /* \"#utility.yul\":11529:11533   */\n  0x20\n    /* \"#utility.yul\":11522:11527   */\n  dup7\n    /* \"#utility.yul\":11518:11534   */\n  add\n    /* \"#utility.yul\":11483:11548   */\n  tag_110\n  jump\t// in\ntag_251:\n    /* \"#utility.yul\":11573:11602   */\n  tag_252\n    /* \"#utility.yul\":11595:11601   */\n  dup2\n    /* \"#utility.yul\":11573:11602   */\n  tag_111\n  jump\t// in\ntag_252:\n    /* \"#utility.yul\":11568:11571   */\n  dup5\n    /* \"#utility.yul\":11564:11603   */\n  add\n    /* \"#utility.yul\":11557:11603   */\n  swap2\n  pop\n    /* \"#utility.yul\":11324:11609   */\n  pop\n    /* \"#utility.yul\":11232:11609   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11615:11928   */\ntag_57:\n    /* \"#utility.yul\":11728:11732   */\n  0x00\n    /* \"#utility.yul\":11766:11768   */\n  0x20\n    /* \"#utility.yul\":11755:11764   */\n  dup3\n    /* \"#utility.yul\":11751:11769   */\n  add\n    /* \"#utility.yul\":11743:11769   */\n  swap1\n  pop\n    /* \"#utility.yul\":11815:11824   */\n  dup2\n    /* \"#utility.yul\":11809:11813   */\n  dup2\n    /* \"#utility.yul\":11805:11825   */\n  sub\n    /* \"#utility.yul\":11801:11802   */\n  0x00\n    /* \"#utility.yul\":11790:11799   */\n  dup4\n    /* \"#utility.yul\":11786:11803   */\n  add\n    /* \"#utility.yul\":11779:11826   */\n  mstore\n    /* \"#utility.yul\":11843:11921   */\n  tag_254\n    /* \"#utility.yul\":11916:11920   */\n  dup2\n    /* \"#utility.yul\":11907:11913   */\n  dup5\n    /* \"#utility.yul\":11843:11921   */\n  tag_112\n  jump\t// in\ntag_254:\n    /* \"#utility.yul\":11835:11921   */\n  swap1\n  pop\n    /* \"#utility.yul\":11615:11928   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11934:12032   */\ntag_113:\n    /* \"#utility.yul\":11985:11991   */\n  0x00\n    /* \"#utility.yul\":12019:12024   */\n  dup2\n    /* \"#utility.yul\":12013:12025   */\n  mload\n    /* \"#utility.yul\":12003:12025   */\n  swap1\n  pop\n    /* \"#utility.yul\":11934:12032   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12038:12154   */\ntag_114:\n    /* \"#utility.yul\":12089:12093   */\n  0x00\n    /* \"#utility.yul\":12112:12115   */\n  dup2\n    /* \"#utility.yul\":12104:12115   */\n  swap1\n  pop\n    /* \"#utility.yul\":12142:12146   */\n  0x20\n    /* \"#utility.yul\":12137:12140   */\n  dup3\n    /* \"#utility.yul\":12133:12147   */\n  add\n    /* \"#utility.yul\":12125:12147   */\n  swap1\n  pop\n    /* \"#utility.yul\":12038:12154   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12160:12314   */\ntag_115:\n    /* \"#utility.yul\":12203:12214   */\n  0x00\n    /* \"#utility.yul\":12239:12268   */\n  tag_258\n    /* \"#utility.yul\":12263:12266   */\n  dup3\n    /* \"#utility.yul\":12257:12267   */\n  mload\n    /* \"#utility.yul\":12239:12268   */\n  tag_106\n  jump\t// in\ntag_258:\n    /* \"#utility.yul\":12302:12307   */\n  dup1\n    /* \"#utility.yul\":12278:12307   */\n  swap2\n  pop\n    /* \"#utility.yul\":12215:12314   */\n  pop\n    /* \"#utility.yul\":12160:12314   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12320:12914   */\ntag_59:\n    /* \"#utility.yul\":12404:12409   */\n  0x00\n    /* \"#utility.yul\":12435:12473   */\n  tag_260\n    /* \"#utility.yul\":12467:12472   */\n  dup3\n    /* \"#utility.yul\":12435:12473   */\n  tag_113\n  jump\t// in\ntag_260:\n    /* \"#utility.yul\":12498:12503   */\n  dup3\n    /* \"#utility.yul\":12525:12565   */\n  tag_261\n    /* \"#utility.yul\":12559:12564   */\n  dup5\n    /* \"#utility.yul\":12525:12565   */\n  tag_114\n  jump\t// in\ntag_261:\n    /* \"#utility.yul\":12513:12565   */\n  swap1\n  pop\n    /* \"#utility.yul\":12584:12619   */\n  tag_262\n    /* \"#utility.yul\":12610:12618   */\n  dup2\n    /* \"#utility.yul\":12584:12619   */\n  tag_115\n  jump\t// in\ntag_262:\n    /* \"#utility.yul\":12575:12619   */\n  swap3\n  pop\n    /* \"#utility.yul\":12643:12645   */\n  0x20\n    /* \"#utility.yul\":12635:12641   */\n  dup3\n    /* \"#utility.yul\":12632:12646   */\n  lt\n    /* \"#utility.yul\":12629:12907   */\n  iszero\n  tag_263\n  jumpi\n    /* \"#utility.yul\":12714:12883   */\n  tag_264\n    /* \"#utility.yul\":12799:12865   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":12769:12775   */\n  dup4\n    /* \"#utility.yul\":12765:12767   */\n  0x20\n    /* \"#utility.yul\":12761:12776   */\n  sub\n    /* \"#utility.yul\":12758:12759   */\n  0x08\n    /* \"#utility.yul\":12754:12777   */\n  mul\n    /* \"#utility.yul\":12714:12883   */\n  tag_86\n  jump\t// in\ntag_264:\n    /* \"#utility.yul\":12691:12696   */\n  dup4\n    /* \"#utility.yul\":12670:12897   */\n  and\n    /* \"#utility.yul\":12661:12897   */\n  swap3\n  pop\n    /* \"#utility.yul\":12629:12907   */\ntag_263:\n    /* \"#utility.yul\":12410:12914   */\n  pop\n  pop\n    /* \"#utility.yul\":12320:12914   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12920:13111   */\ntag_64:\n    /* \"#utility.yul\":12960:12963   */\n  0x00\n    /* \"#utility.yul\":12979:12999   */\n  tag_266\n    /* \"#utility.yul\":12997:12998   */\n  dup3\n    /* \"#utility.yul\":12979:12999   */\n  tag_88\n  jump\t// in\ntag_266:\n    /* \"#utility.yul\":12974:12999   */\n  swap2\n  pop\n    /* \"#utility.yul\":13013:13033   */\n  tag_267\n    /* \"#utility.yul\":13031:13032   */\n  dup4\n    /* \"#utility.yul\":13013:13033   */\n  tag_88\n  jump\t// in\ntag_267:\n    /* \"#utility.yul\":13008:13033   */\n  swap3\n  pop\n    /* \"#utility.yul\":13056:13057   */\n  dup3\n    /* \"#utility.yul\":13053:13054   */\n  dup3\n    /* \"#utility.yul\":13049:13058   */\n  add\n    /* \"#utility.yul\":13042:13058   */\n  swap1\n  pop\n    /* \"#utility.yul\":13077:13080   */\n  dup1\n    /* \"#utility.yul\":13074:13075   */\n  dup3\n    /* \"#utility.yul\":13071:13081   */\n  gt\n    /* \"#utility.yul\":13068:13104   */\n  iszero\n  tag_268\n  jumpi\n    /* \"#utility.yul\":13084:13102   */\n  tag_269\n  tag_101\n  jump\t// in\ntag_269:\n    /* \"#utility.yul\":13068:13104   */\ntag_268:\n    /* \"#utility.yul\":12920:13111   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13117:13559   */\ntag_68:\n    /* \"#utility.yul\":13266:13270   */\n  0x00\n    /* \"#utility.yul\":13304:13306   */\n  0x60\n    /* \"#utility.yul\":13293:13302   */\n  dup3\n    /* \"#utility.yul\":13289:13307   */\n  add\n    /* \"#utility.yul\":13281:13307   */\n  swap1\n  pop\n    /* \"#utility.yul\":13317:13388   */\n  tag_271\n    /* \"#utility.yul\":13385:13386   */\n  0x00\n    /* \"#utility.yul\":13374:13383   */\n  dup4\n    /* \"#utility.yul\":13370:13387   */\n  add\n    /* \"#utility.yul\":13361:13367   */\n  dup7\n    /* \"#utility.yul\":13317:13388   */\n  tag_100\n  jump\t// in\ntag_271:\n    /* \"#utility.yul\":13398:13470   */\n  tag_272\n    /* \"#utility.yul\":13466:13468   */\n  0x20\n    /* \"#utility.yul\":13455:13464   */\n  dup4\n    /* \"#utility.yul\":13451:13469   */\n  add\n    /* \"#utility.yul\":13442:13448   */\n  dup6\n    /* \"#utility.yul\":13398:13470   */\n  tag_108\n  jump\t// in\ntag_272:\n    /* \"#utility.yul\":13480:13552   */\n  tag_273\n    /* \"#utility.yul\":13548:13550   */\n  0x40\n    /* \"#utility.yul\":13537:13546   */\n  dup4\n    /* \"#utility.yul\":13533:13551   */\n  add\n    /* \"#utility.yul\":13524:13530   */\n  dup5\n    /* \"#utility.yul\":13480:13552   */\n  tag_108\n  jump\t// in\ntag_273:\n    /* \"#utility.yul\":13117:13559   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13565:13787   */\ntag_72:\n    /* \"#utility.yul\":13658:13662   */\n  0x00\n    /* \"#utility.yul\":13696:13698   */\n  0x20\n    /* \"#utility.yul\":13685:13694   */\n  dup3\n    /* \"#utility.yul\":13681:13699   */\n  add\n    /* \"#utility.yul\":13673:13699   */\n  swap1\n  pop\n    /* \"#utility.yul\":13709:13780   */\n  tag_275\n    /* \"#utility.yul\":13777:13778   */\n  0x00\n    /* \"#utility.yul\":13766:13775   */\n  dup4\n    /* \"#utility.yul\":13762:13779   */\n  add\n    /* \"#utility.yul\":13753:13759   */\n  dup5\n    /* \"#utility.yul\":13709:13780   */\n  tag_108\n  jump\t// in\ntag_275:\n    /* \"#utility.yul\":13565:13787   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"Clarence_dolar_flattened.sol\":79675:80039  contract Clarence_dolar is ERC20, Ownable, ERC20Permit {... */\ntag_35:\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  mload(0xe0)\n  mload(0x0100)\n  mload(0x0120)\n  mload(0x0140)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x6a27fd8b4e034345f821626e478d5e1624295ad016c351a1e0a3d60e930e4e52\")\n  0x00\n  assignImmutable(\"0x94a6815ac3f39ee0f691137327eba74e351a039ac093f36725d81460ae04f412\")\n  0x00\n  assignImmutable(\"0x957b8855a729b67dc028ca49cb97b10aca21a5ff5ddcb5f61d4444c005a9b1c2\")\n  0x00\n  assignImmutable(\"0xd7540fe9b6cfec114ef69b9a5e37f0df0cc41a7a00237e8b74bf5a92c0da8102\")\n  0x00\n  assignImmutable(\"0xa19d718480110222d22b6d2951f2fd7e402bb541199804c801e8efc2019fa5ca\")\n  0x00\n  assignImmutable(\"0x8e6edc2e6718e67f653228e7ef9c7cb13217a05d4dce88c9b22917701f7f0736\")\n  0x00\n  assignImmutable(\"0xccfc0c959b119ee28d407ea161eaeb170333879869a337b808d1b575d1b25cde\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"Clarence_dolar_flattened.sol\":79675:80039  contract Clarence_dolar is ERC20, Ownable, ERC20Permit {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x84b0196e\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x313ce567\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3644e515\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Clarence_dolar_flattened.sol\":12966:13055  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Clarence_dolar_flattened.sol\":15185:15371  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Clarence_dolar_flattened.sol\":14036:14133  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Clarence_dolar_flattened.sol\":15931:16175  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Clarence_dolar_flattened.sol\":13894:13976  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Clarence_dolar_flattened.sol\":79395:79507  function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {... */\n    tag_8:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Clarence_dolar_flattened.sol\":79944:80037  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_9:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      stop\n        /* \"Clarence_dolar_flattened.sol\":14191:14307  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_10:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Clarence_dolar_flattened.sol\":24305:24406  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      stop\n        /* \"Clarence_dolar_flattened.sol\":79145:79288  function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {... */\n    tag_12:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Clarence_dolar_flattened.sol\":73973:74530  function eip712Domain()... */\n    tag_13:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_66\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Clarence_dolar_flattened.sol\":23650:23735  function owner() public view virtual returns (address) {... */\n    tag_14:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Clarence_dolar_flattened.sol\":13168:13261  function symbol() public view virtual returns (string memory) {... */\n    tag_15:\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Clarence_dolar_flattened.sol\":14502:14680  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_16:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Clarence_dolar_flattened.sol\":78419:79091  function permit(... */\n    tag_17:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n    tag_79:\n      stop\n        /* \"Clarence_dolar_flattened.sol\":14738:14878  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_18:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      tag_86\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Clarence_dolar_flattened.sol\":24555:24770  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_19:\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n    tag_88:\n      stop\n        /* \"Clarence_dolar_flattened.sol\":12966:13055  function name() public view virtual returns (string memory) {... */\n    tag_24:\n        /* \"Clarence_dolar_flattened.sol\":13011:13024  string memory */\n      0x60\n        /* \"Clarence_dolar_flattened.sol\":13043:13048  _name */\n      0x03\n        /* \"Clarence_dolar_flattened.sol\":13036:13048  return _name */\n      dup1\n      sload\n      tag_92\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_94\n      swap1\n      tag_93\n      jump\t// in\n    tag_94:\n      dup1\n      iszero\n      tag_95\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_96\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_95)\n    tag_96:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_97:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_97\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_95:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"Clarence_dolar_flattened.sol\":12966:13055  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"Clarence_dolar_flattened.sol\":15185:15371  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_30:\n        /* \"Clarence_dolar_flattened.sol\":15258:15262  bool */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":15274:15287  address owner */\n      dup1\n        /* \"Clarence_dolar_flattened.sol\":15290:15302  _msgSender() */\n      tag_99\n        /* \"Clarence_dolar_flattened.sol\":15290:15300  _msgSender */\n      tag_100\n        /* \"Clarence_dolar_flattened.sol\":15290:15302  _msgSender() */\n      jump\t// in\n    tag_99:\n        /* \"Clarence_dolar_flattened.sol\":15274:15302  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"Clarence_dolar_flattened.sol\":15312:15343  _approve(owner, spender, value) */\n      tag_101\n        /* \"Clarence_dolar_flattened.sol\":15321:15326  owner */\n      dup2\n        /* \"Clarence_dolar_flattened.sol\":15328:15335  spender */\n      dup6\n        /* \"Clarence_dolar_flattened.sol\":15337:15342  value */\n      dup6\n        /* \"Clarence_dolar_flattened.sol\":15312:15320  _approve */\n      tag_102\n        /* \"Clarence_dolar_flattened.sol\":15312:15343  _approve(owner, spender, value) */\n      jump\t// in\n    tag_101:\n        /* \"Clarence_dolar_flattened.sol\":15360:15364  true */\n      0x01\n        /* \"Clarence_dolar_flattened.sol\":15353:15364  return true */\n      swap2\n      pop\n      pop\n        /* \"Clarence_dolar_flattened.sol\":15185:15371  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Clarence_dolar_flattened.sol\":14036:14133  function totalSupply() public view virtual returns (uint256) {... */\n    tag_34:\n        /* \"Clarence_dolar_flattened.sol\":14088:14095  uint256 */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":14114:14126  _totalSupply */\n      sload(0x02)\n        /* \"Clarence_dolar_flattened.sol\":14107:14126  return _totalSupply */\n      swap1\n      pop\n        /* \"Clarence_dolar_flattened.sol\":14036:14133  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Clarence_dolar_flattened.sol\":15931:16175  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_40:\n        /* \"Clarence_dolar_flattened.sol\":16018:16022  bool */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":16034:16049  address spender */\n      dup1\n        /* \"Clarence_dolar_flattened.sol\":16052:16064  _msgSender() */\n      tag_105\n        /* \"Clarence_dolar_flattened.sol\":16052:16062  _msgSender */\n      tag_100\n        /* \"Clarence_dolar_flattened.sol\":16052:16064  _msgSender() */\n      jump\t// in\n    tag_105:\n        /* \"Clarence_dolar_flattened.sol\":16034:16064  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"Clarence_dolar_flattened.sol\":16074:16111  _spendAllowance(from, spender, value) */\n      tag_106\n        /* \"Clarence_dolar_flattened.sol\":16090:16094  from */\n      dup6\n        /* \"Clarence_dolar_flattened.sol\":16096:16103  spender */\n      dup3\n        /* \"Clarence_dolar_flattened.sol\":16105:16110  value */\n      dup6\n        /* \"Clarence_dolar_flattened.sol\":16074:16089  _spendAllowance */\n      tag_107\n        /* \"Clarence_dolar_flattened.sol\":16074:16111  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_106:\n        /* \"Clarence_dolar_flattened.sol\":16121:16147  _transfer(from, to, value) */\n      tag_108\n        /* \"Clarence_dolar_flattened.sol\":16131:16135  from */\n      dup6\n        /* \"Clarence_dolar_flattened.sol\":16137:16139  to */\n      dup6\n        /* \"Clarence_dolar_flattened.sol\":16141:16146  value */\n      dup6\n        /* \"Clarence_dolar_flattened.sol\":16121:16130  _transfer */\n      tag_109\n        /* \"Clarence_dolar_flattened.sol\":16121:16147  _transfer(from, to, value) */\n      jump\t// in\n    tag_108:\n        /* \"Clarence_dolar_flattened.sol\":16164:16168  true */\n      0x01\n        /* \"Clarence_dolar_flattened.sol\":16157:16168  return true */\n      swap2\n      pop\n      pop\n        /* \"Clarence_dolar_flattened.sol\":15931:16175  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Clarence_dolar_flattened.sol\":13894:13976  function decimals() public view virtual returns (uint8) {... */\n    tag_43:\n        /* \"Clarence_dolar_flattened.sol\":13943:13948  uint8 */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":13967:13969  18 */\n      0x12\n        /* \"Clarence_dolar_flattened.sol\":13960:13969  return 18 */\n      swap1\n      pop\n        /* \"Clarence_dolar_flattened.sol\":13894:13976  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"Clarence_dolar_flattened.sol\":79395:79507  function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {... */\n    tag_47:\n        /* \"Clarence_dolar_flattened.sol\":79454:79461  bytes32 */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":79480:79500  _domainSeparatorV4() */\n      tag_112\n        /* \"Clarence_dolar_flattened.sol\":79480:79498  _domainSeparatorV4 */\n      tag_113\n        /* \"Clarence_dolar_flattened.sol\":79480:79500  _domainSeparatorV4() */\n      jump\t// in\n    tag_112:\n        /* \"Clarence_dolar_flattened.sol\":79473:79500  return _domainSeparatorV4() */\n      swap1\n      pop\n        /* \"Clarence_dolar_flattened.sol\":79395:79507  function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"Clarence_dolar_flattened.sol\":79944:80037  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_52:\n        /* \"Clarence_dolar_flattened.sol\":23543:23556  _checkOwner() */\n      tag_115\n        /* \"Clarence_dolar_flattened.sol\":23543:23554  _checkOwner */\n      tag_116\n        /* \"Clarence_dolar_flattened.sol\":23543:23556  _checkOwner() */\n      jump\t// in\n    tag_115:\n        /* \"Clarence_dolar_flattened.sol\":80013:80030  _mint(to, amount) */\n      tag_118\n        /* \"Clarence_dolar_flattened.sol\":80019:80021  to */\n      dup3\n        /* \"Clarence_dolar_flattened.sol\":80023:80029  amount */\n      dup3\n        /* \"Clarence_dolar_flattened.sol\":80013:80018  _mint */\n      tag_119\n        /* \"Clarence_dolar_flattened.sol\":80013:80030  _mint(to, amount) */\n      jump\t// in\n    tag_118:\n        /* \"Clarence_dolar_flattened.sol\":79944:80037  function mint(address to, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Clarence_dolar_flattened.sol\":14191:14307  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_56:\n        /* \"Clarence_dolar_flattened.sol\":14256:14263  uint256 */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":14282:14291  _balances */\n      dup1\n        /* \"Clarence_dolar_flattened.sol\":14282:14300  _balances[account] */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":14292:14299  account */\n      dup4\n        /* \"Clarence_dolar_flattened.sol\":14282:14300  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Clarence_dolar_flattened.sol\":14275:14300  return _balances[account] */\n      swap1\n      pop\n        /* \"Clarence_dolar_flattened.sol\":14191:14307  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Clarence_dolar_flattened.sol\":24305:24406  function renounceOwnership() public virtual onlyOwner {... */\n    tag_59:\n        /* \"Clarence_dolar_flattened.sol\":23543:23556  _checkOwner() */\n      tag_122\n        /* \"Clarence_dolar_flattened.sol\":23543:23554  _checkOwner */\n      tag_116\n        /* \"Clarence_dolar_flattened.sol\":23543:23556  _checkOwner() */\n      jump\t// in\n    tag_122:\n        /* \"Clarence_dolar_flattened.sol\":24369:24399  _transferOwnership(address(0)) */\n      tag_124\n        /* \"Clarence_dolar_flattened.sol\":24396:24397  0 */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":24369:24387  _transferOwnership */\n      tag_125\n        /* \"Clarence_dolar_flattened.sol\":24369:24399  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_124:\n        /* \"Clarence_dolar_flattened.sol\":24305:24406  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"Clarence_dolar_flattened.sol\":79145:79288  function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {... */\n    tag_62:\n        /* \"Clarence_dolar_flattened.sol\":79236:79243  uint256 */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":79262:79281  super.nonces(owner) */\n      tag_127\n        /* \"Clarence_dolar_flattened.sol\":79275:79280  owner */\n      dup3\n        /* \"Clarence_dolar_flattened.sol\":79262:79274  super.nonces */\n      tag_128\n        /* \"Clarence_dolar_flattened.sol\":79262:79281  super.nonces(owner) */\n      jump\t// in\n    tag_127:\n        /* \"Clarence_dolar_flattened.sol\":79255:79281  return super.nonces(owner) */\n      swap1\n      pop\n        /* \"Clarence_dolar_flattened.sol\":79145:79288  function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Clarence_dolar_flattened.sol\":73973:74530  function eip712Domain()... */\n    tag_65:\n        /* \"Clarence_dolar_flattened.sol\":74071:74084  bytes1 fields */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":74098:74116  string memory name */\n      0x60\n        /* \"Clarence_dolar_flattened.sol\":74130:74151  string memory version */\n      dup1\n        /* \"Clarence_dolar_flattened.sol\":74165:74180  uint256 chainId */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":74194:74219  address verifyingContract */\n      dup1\n        /* \"Clarence_dolar_flattened.sol\":74233:74245  bytes32 salt */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":74259:74286  uint256[] memory extensions */\n      0x60\n        /* \"Clarence_dolar_flattened.sol\":74362:74375  _EIP712Name() */\n      tag_130\n        /* \"Clarence_dolar_flattened.sol\":74362:74373  _EIP712Name */\n      tag_131\n        /* \"Clarence_dolar_flattened.sol\":74362:74375  _EIP712Name() */\n      jump\t// in\n    tag_130:\n        /* \"Clarence_dolar_flattened.sol\":74389:74405  _EIP712Version() */\n      tag_132\n        /* \"Clarence_dolar_flattened.sol\":74389:74403  _EIP712Version */\n      tag_133\n        /* \"Clarence_dolar_flattened.sol\":74389:74405  _EIP712Version() */\n      jump\t// in\n    tag_132:\n        /* \"Clarence_dolar_flattened.sol\":74419:74432  block.chainid */\n      chainid\n        /* \"Clarence_dolar_flattened.sol\":74454:74458  this */\n      address\n        /* \"Clarence_dolar_flattened.sol\":74481:74482  0 */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":74473:74483  bytes32(0) */\n      dup1\n      shl\n        /* \"Clarence_dolar_flattened.sol\":74511:74512  0 */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":74497:74513  new uint256[](0) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_134\n      jumpi\n      tag_135\n      tag_136\n      jump\t// in\n    tag_135:\n    tag_134:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_137\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_137:\n      pop\n        /* \"Clarence_dolar_flattened.sol\":74311:74523  return (... */\n      0x0f00000000000000000000000000000000000000000000000000000000000000\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n        /* \"Clarence_dolar_flattened.sol\":73973:74530  function eip712Domain()... */\n      swap1\n      swap2\n      swap3\n      swap4\n      swap5\n      swap6\n      swap7\n      jump\t// out\n        /* \"Clarence_dolar_flattened.sol\":23650:23735  function owner() public view virtual returns (address) {... */\n    tag_69:\n        /* \"Clarence_dolar_flattened.sol\":23696:23703  address */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":23722:23728  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Clarence_dolar_flattened.sol\":23715:23728  return _owner */\n      swap1\n      pop\n        /* \"Clarence_dolar_flattened.sol\":23650:23735  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Clarence_dolar_flattened.sol\":13168:13261  function symbol() public view virtual returns (string memory) {... */\n    tag_73:\n        /* \"Clarence_dolar_flattened.sol\":13215:13228  string memory */\n      0x60\n        /* \"Clarence_dolar_flattened.sol\":13247:13254  _symbol */\n      0x04\n        /* \"Clarence_dolar_flattened.sol\":13240:13254  return _symbol */\n      dup1\n      sload\n      tag_140\n      swap1\n      tag_93\n      jump\t// in\n    tag_140:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_141\n      swap1\n      tag_93\n      jump\t// in\n    tag_141:\n      dup1\n      iszero\n      tag_142\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_143\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_142)\n    tag_143:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_144:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_144\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_142:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"Clarence_dolar_flattened.sol\":13168:13261  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"Clarence_dolar_flattened.sol\":14502:14680  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_77:\n        /* \"Clarence_dolar_flattened.sol\":14571:14575  bool */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":14587:14600  address owner */\n      dup1\n        /* \"Clarence_dolar_flattened.sol\":14603:14615  _msgSender() */\n      tag_146\n        /* \"Clarence_dolar_flattened.sol\":14603:14613  _msgSender */\n      tag_100\n        /* \"Clarence_dolar_flattened.sol\":14603:14615  _msgSender() */\n      jump\t// in\n    tag_146:\n        /* \"Clarence_dolar_flattened.sol\":14587:14615  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"Clarence_dolar_flattened.sol\":14625:14652  _transfer(owner, to, value) */\n      tag_147\n        /* \"Clarence_dolar_flattened.sol\":14635:14640  owner */\n      dup2\n        /* \"Clarence_dolar_flattened.sol\":14642:14644  to */\n      dup6\n        /* \"Clarence_dolar_flattened.sol\":14646:14651  value */\n      dup6\n        /* \"Clarence_dolar_flattened.sol\":14625:14634  _transfer */\n      tag_109\n        /* \"Clarence_dolar_flattened.sol\":14625:14652  _transfer(owner, to, value) */\n      jump\t// in\n    tag_147:\n        /* \"Clarence_dolar_flattened.sol\":14669:14673  true */\n      0x01\n        /* \"Clarence_dolar_flattened.sol\":14662:14673  return true */\n      swap2\n      pop\n      pop\n        /* \"Clarence_dolar_flattened.sol\":14502:14680  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Clarence_dolar_flattened.sol\":78419:79091  function permit(... */\n    tag_82:\n        /* \"Clarence_dolar_flattened.sol\":78640:78648  deadline */\n      dup4\n        /* \"Clarence_dolar_flattened.sol\":78622:78637  block.timestamp */\n      timestamp\n        /* \"Clarence_dolar_flattened.sol\":78622:78648  block.timestamp > deadline */\n      gt\n        /* \"Clarence_dolar_flattened.sol\":78618:78715  if (block.timestamp > deadline) {... */\n      iszero\n      tag_149\n      jumpi\n        /* \"Clarence_dolar_flattened.sol\":78695:78703  deadline */\n      dup4\n        /* \"Clarence_dolar_flattened.sol\":78671:78704  ERC2612ExpiredSignature(deadline) */\n      mload(0x40)\n      0x6279130200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_150\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Clarence_dolar_flattened.sol\":78618:78715  if (block.timestamp > deadline) {... */\n    tag_149:\n        /* \"Clarence_dolar_flattened.sol\":78725:78743  bytes32 structHash */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":77761:77856  keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\") */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"Clarence_dolar_flattened.sol\":78784:78789  owner */\n      dup9\n        /* \"Clarence_dolar_flattened.sol\":78791:78798  spender */\n      dup9\n        /* \"Clarence_dolar_flattened.sol\":78800:78805  value */\n      dup9\n        /* \"Clarence_dolar_flattened.sol\":78807:78823  _useNonce(owner) */\n      tag_151\n        /* \"Clarence_dolar_flattened.sol\":78817:78822  owner */\n      dup13\n        /* \"Clarence_dolar_flattened.sol\":78807:78816  _useNonce */\n      tag_152\n        /* \"Clarence_dolar_flattened.sol\":78807:78823  _useNonce(owner) */\n      jump\t// in\n    tag_151:\n        /* \"Clarence_dolar_flattened.sol\":78825:78833  deadline */\n      dup10\n        /* \"Clarence_dolar_flattened.sol\":78756:78834  abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline) */\n      add(0x20, mload(0x40))\n      tag_153\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"Clarence_dolar_flattened.sol\":78746:78835  keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Clarence_dolar_flattened.sol\":78725:78835  bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)) */\n      swap1\n      pop\n        /* \"Clarence_dolar_flattened.sol\":78846:78858  bytes32 hash */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":78861:78889  _hashTypedDataV4(structHash) */\n      tag_155\n        /* \"Clarence_dolar_flattened.sol\":78878:78888  structHash */\n      dup3\n        /* \"Clarence_dolar_flattened.sol\":78861:78877  _hashTypedDataV4 */\n      tag_156\n        /* \"Clarence_dolar_flattened.sol\":78861:78889  _hashTypedDataV4(structHash) */\n      jump\t// in\n    tag_155:\n        /* \"Clarence_dolar_flattened.sol\":78846:78889  bytes32 hash = _hashTypedDataV4(structHash) */\n      swap1\n      pop\n        /* \"Clarence_dolar_flattened.sol\":78900:78914  address signer */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":78917:78945  ECDSA.recover(hash, v, r, s) */\n      tag_157\n        /* \"Clarence_dolar_flattened.sol\":78931:78935  hash */\n      dup3\n        /* \"Clarence_dolar_flattened.sol\":78937:78938  v */\n      dup8\n        /* \"Clarence_dolar_flattened.sol\":78940:78941  r */\n      dup8\n        /* \"Clarence_dolar_flattened.sol\":78943:78944  s */\n      dup8\n        /* \"Clarence_dolar_flattened.sol\":78917:78930  ECDSA.recover */\n      tag_158\n        /* \"Clarence_dolar_flattened.sol\":78917:78945  ECDSA.recover(hash, v, r, s) */\n      jump\t// in\n    tag_157:\n        /* \"Clarence_dolar_flattened.sol\":78900:78945  address signer = ECDSA.recover(hash, v, r, s) */\n      swap1\n      pop\n        /* \"Clarence_dolar_flattened.sol\":78969:78974  owner */\n      dup10\n        /* \"Clarence_dolar_flattened.sol\":78959:78974  signer != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Clarence_dolar_flattened.sol\":78959:78965  signer */\n      dup2\n        /* \"Clarence_dolar_flattened.sol\":78959:78974  signer != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Clarence_dolar_flattened.sol\":78955:79043  if (signer != owner) {... */\n      tag_159\n      jumpi\n        /* \"Clarence_dolar_flattened.sol\":79018:79024  signer */\n      dup1\n        /* \"Clarence_dolar_flattened.sol\":79026:79031  owner */\n      dup11\n        /* \"Clarence_dolar_flattened.sol\":78997:79032  ERC2612InvalidSigner(signer, owner) */\n      mload(0x40)\n      0x4b800e4600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_160\n      swap3\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Clarence_dolar_flattened.sol\":78955:79043  if (signer != owner) {... */\n    tag_159:\n        /* \"Clarence_dolar_flattened.sol\":79053:79084  _approve(owner, spender, value) */\n      tag_162\n        /* \"Clarence_dolar_flattened.sol\":79062:79067  owner */\n      dup11\n        /* \"Clarence_dolar_flattened.sol\":79069:79076  spender */\n      dup11\n        /* \"Clarence_dolar_flattened.sol\":79078:79083  value */\n      dup11\n        /* \"Clarence_dolar_flattened.sol\":79053:79061  _approve */\n      tag_102\n        /* \"Clarence_dolar_flattened.sol\":79053:79084  _approve(owner, spender, value) */\n      jump\t// in\n    tag_162:\n        /* \"Clarence_dolar_flattened.sol\":78608:79091  {... */\n      pop\n      pop\n      pop\n        /* \"Clarence_dolar_flattened.sol\":78419:79091  function permit(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Clarence_dolar_flattened.sol\":14738:14878  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_86:\n        /* \"Clarence_dolar_flattened.sol\":14818:14825  uint256 */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":14844:14855  _allowances */\n      0x01\n        /* \"Clarence_dolar_flattened.sol\":14844:14862  _allowances[owner] */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":14856:14861  owner */\n      dup5\n        /* \"Clarence_dolar_flattened.sol\":14844:14862  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Clarence_dolar_flattened.sol\":14844:14871  _allowances[owner][spender] */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":14863:14870  spender */\n      dup4\n        /* \"Clarence_dolar_flattened.sol\":14844:14871  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Clarence_dolar_flattened.sol\":14837:14871  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"Clarence_dolar_flattened.sol\":14738:14878  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Clarence_dolar_flattened.sol\":24555:24770  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_90:\n        /* \"Clarence_dolar_flattened.sol\":23543:23556  _checkOwner() */\n      tag_165\n        /* \"Clarence_dolar_flattened.sol\":23543:23554  _checkOwner */\n      tag_116\n        /* \"Clarence_dolar_flattened.sol\":23543:23556  _checkOwner() */\n      jump\t// in\n    tag_165:\n        /* \"Clarence_dolar_flattened.sol\":24659:24660  0 */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":24639:24661  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Clarence_dolar_flattened.sol\":24639:24647  newOwner */\n      dup2\n        /* \"Clarence_dolar_flattened.sol\":24639:24661  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Clarence_dolar_flattened.sol\":24635:24726  if (newOwner == address(0)) {... */\n      tag_167\n      jumpi\n        /* \"Clarence_dolar_flattened.sol\":24712:24713  0 */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":24684:24715  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Clarence_dolar_flattened.sol\":24635:24726  if (newOwner == address(0)) {... */\n    tag_167:\n        /* \"Clarence_dolar_flattened.sol\":24735:24763  _transferOwnership(newOwner) */\n      tag_169\n        /* \"Clarence_dolar_flattened.sol\":24754:24762  newOwner */\n      dup2\n        /* \"Clarence_dolar_flattened.sol\":24735:24753  _transferOwnership */\n      tag_125\n        /* \"Clarence_dolar_flattened.sol\":24735:24763  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_169:\n        /* \"Clarence_dolar_flattened.sol\":24555:24770  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Clarence_dolar_flattened.sol\":4206:4302  function _msgSender() internal view virtual returns (address) {... */\n    tag_100:\n        /* \"Clarence_dolar_flattened.sol\":4259:4266  address */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":4285:4295  msg.sender */\n      caller\n        /* \"Clarence_dolar_flattened.sol\":4278:4295  return msg.sender */\n      swap1\n      pop\n        /* \"Clarence_dolar_flattened.sol\":4206:4302  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Clarence_dolar_flattened.sol\":19881:20009  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_102:\n        /* \"Clarence_dolar_flattened.sol\":19965:20002  _approve(owner, spender, value, true) */\n      tag_172\n        /* \"Clarence_dolar_flattened.sol\":19974:19979  owner */\n      dup4\n        /* \"Clarence_dolar_flattened.sol\":19981:19988  spender */\n      dup4\n        /* \"Clarence_dolar_flattened.sol\":19990:19995  value */\n      dup4\n        /* \"Clarence_dolar_flattened.sol\":19997:20001  true */\n      0x01\n        /* \"Clarence_dolar_flattened.sol\":19965:19973  _approve */\n      tag_173\n        /* \"Clarence_dolar_flattened.sol\":19965:20002  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_172:\n        /* \"Clarence_dolar_flattened.sol\":19881:20009  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Clarence_dolar_flattened.sol\":21555:22032  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_107:\n        /* \"Clarence_dolar_flattened.sol\":21654:21678  uint256 currentAllowance */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":21681:21706  allowance(owner, spender) */\n      tag_175\n        /* \"Clarence_dolar_flattened.sol\":21691:21696  owner */\n      dup5\n        /* \"Clarence_dolar_flattened.sol\":21698:21705  spender */\n      dup5\n        /* \"Clarence_dolar_flattened.sol\":21681:21690  allowance */\n      tag_86\n        /* \"Clarence_dolar_flattened.sol\":21681:21706  allowance(owner, spender) */\n      jump\t// in\n    tag_175:\n        /* \"Clarence_dolar_flattened.sol\":21654:21706  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"Clarence_dolar_flattened.sol\":21740:21757  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"Clarence_dolar_flattened.sol\":21720:21736  currentAllowance */\n      dup2\n        /* \"Clarence_dolar_flattened.sol\":21720:21757  currentAllowance != type(uint256).max */\n      eq\n        /* \"Clarence_dolar_flattened.sol\":21716:22026  if (currentAllowance != type(uint256).max) {... */\n      tag_176\n      jumpi\n        /* \"Clarence_dolar_flattened.sol\":21796:21801  value */\n      dup2\n        /* \"Clarence_dolar_flattened.sol\":21777:21793  currentAllowance */\n      dup2\n        /* \"Clarence_dolar_flattened.sol\":21777:21801  currentAllowance < value */\n      lt\n        /* \"Clarence_dolar_flattened.sol\":21773:21903  if (currentAllowance < value) {... */\n      iszero\n      tag_177\n      jumpi\n        /* \"Clarence_dolar_flattened.sol\":21855:21862  spender */\n      dup3\n        /* \"Clarence_dolar_flattened.sol\":21864:21880  currentAllowance */\n      dup2\n        /* \"Clarence_dolar_flattened.sol\":21882:21887  value */\n      dup4\n        /* \"Clarence_dolar_flattened.sol\":21828:21888  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Clarence_dolar_flattened.sol\":21773:21903  if (currentAllowance < value) {... */\n    tag_177:\n        /* \"Clarence_dolar_flattened.sol\":21944:22001  _approve(owner, spender, currentAllowance - value, false) */\n      tag_180\n        /* \"Clarence_dolar_flattened.sol\":21953:21958  owner */\n      dup5\n        /* \"Clarence_dolar_flattened.sol\":21960:21967  spender */\n      dup5\n        /* \"Clarence_dolar_flattened.sol\":21988:21993  value */\n      dup5\n        /* \"Clarence_dolar_flattened.sol\":21969:21985  currentAllowance */\n      dup5\n        /* \"Clarence_dolar_flattened.sol\":21969:21993  currentAllowance - value */\n      sub\n        /* \"Clarence_dolar_flattened.sol\":21995:22000  false */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":21944:21952  _approve */\n      tag_173\n        /* \"Clarence_dolar_flattened.sol\":21944:22001  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_180:\n        /* \"Clarence_dolar_flattened.sol\":21716:22026  if (currentAllowance != type(uint256).max) {... */\n    tag_176:\n        /* \"Clarence_dolar_flattened.sol\":21644:22032  {... */\n      pop\n        /* \"Clarence_dolar_flattened.sol\":21555:22032  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Clarence_dolar_flattened.sol\":16548:16848  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_109:\n        /* \"Clarence_dolar_flattened.sol\":16647:16648  0 */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":16631:16649  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Clarence_dolar_flattened.sol\":16631:16635  from */\n      dup4\n        /* \"Clarence_dolar_flattened.sol\":16631:16649  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Clarence_dolar_flattened.sol\":16627:16713  if (from == address(0)) {... */\n      tag_182\n      jumpi\n        /* \"Clarence_dolar_flattened.sol\":16699:16700  0 */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":16672:16702  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_183\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Clarence_dolar_flattened.sol\":16627:16713  if (from == address(0)) {... */\n    tag_182:\n        /* \"Clarence_dolar_flattened.sol\":16740:16741  0 */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":16726:16742  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Clarence_dolar_flattened.sol\":16726:16728  to */\n      dup3\n        /* \"Clarence_dolar_flattened.sol\":16726:16742  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Clarence_dolar_flattened.sol\":16722:16808  if (to == address(0)) {... */\n      tag_184\n      jumpi\n        /* \"Clarence_dolar_flattened.sol\":16794:16795  0 */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":16765:16797  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Clarence_dolar_flattened.sol\":16722:16808  if (to == address(0)) {... */\n    tag_184:\n        /* \"Clarence_dolar_flattened.sol\":16817:16841  _update(from, to, value) */\n      tag_186\n        /* \"Clarence_dolar_flattened.sol\":16825:16829  from */\n      dup4\n        /* \"Clarence_dolar_flattened.sol\":16831:16833  to */\n      dup4\n        /* \"Clarence_dolar_flattened.sol\":16835:16840  value */\n      dup4\n        /* \"Clarence_dolar_flattened.sol\":16817:16824  _update */\n      tag_187\n        /* \"Clarence_dolar_flattened.sol\":16817:16841  _update(from, to, value) */\n      jump\t// in\n    tag_186:\n        /* \"Clarence_dolar_flattened.sol\":16548:16848  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Clarence_dolar_flattened.sol\":72674:72936  function _domainSeparatorV4() internal view returns (bytes32) {... */\n    tag_113:\n        /* \"Clarence_dolar_flattened.sol\":72727:72734  bytes32 */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":72767:72778  _cachedThis */\n      immutable(\"0xa19d718480110222d22b6d2951f2fd7e402bb541199804c801e8efc2019fa5ca\")\n        /* \"Clarence_dolar_flattened.sol\":72750:72778  address(this) == _cachedThis */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Clarence_dolar_flattened.sol\":72758:72762  this */\n      address\n        /* \"Clarence_dolar_flattened.sol\":72750:72778  address(this) == _cachedThis */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Clarence_dolar_flattened.sol\":72750:72813  address(this) == _cachedThis && block.chainid == _cachedChainId */\n      dup1\n      iszero\n      tag_189\n      jumpi\n      pop\n        /* \"Clarence_dolar_flattened.sol\":72799:72813  _cachedChainId */\n      immutable(\"0x8e6edc2e6718e67f653228e7ef9c7cb13217a05d4dce88c9b22917701f7f0736\")\n        /* \"Clarence_dolar_flattened.sol\":72782:72795  block.chainid */\n      chainid\n        /* \"Clarence_dolar_flattened.sol\":72782:72813  block.chainid == _cachedChainId */\n      eq\n        /* \"Clarence_dolar_flattened.sol\":72750:72813  address(this) == _cachedThis && block.chainid == _cachedChainId */\n    tag_189:\n        /* \"Clarence_dolar_flattened.sol\":72746:72930  if (address(this) == _cachedThis && block.chainid == _cachedChainId) {... */\n      iszero\n      tag_190\n      jumpi\n        /* \"Clarence_dolar_flattened.sol\":72836:72858  _cachedDomainSeparator */\n      immutable(\"0xccfc0c959b119ee28d407ea161eaeb170333879869a337b808d1b575d1b25cde\")\n        /* \"Clarence_dolar_flattened.sol\":72829:72858  return _cachedDomainSeparator */\n      swap1\n      pop\n      jump(tag_188)\n        /* \"Clarence_dolar_flattened.sol\":72746:72930  if (address(this) == _cachedThis && block.chainid == _cachedChainId) {... */\n    tag_190:\n        /* \"Clarence_dolar_flattened.sol\":72896:72919  _buildDomainSeparator() */\n      tag_192\n        /* \"Clarence_dolar_flattened.sol\":72896:72917  _buildDomainSeparator */\n      tag_193\n        /* \"Clarence_dolar_flattened.sol\":72896:72919  _buildDomainSeparator() */\n      jump\t// in\n    tag_192:\n        /* \"Clarence_dolar_flattened.sol\":72889:72919  return _buildDomainSeparator() */\n      swap1\n      pop\n        /* \"Clarence_dolar_flattened.sol\":72674:72936  function _domainSeparatorV4() internal view returns (bytes32) {... */\n    tag_188:\n      swap1\n      jump\t// out\n        /* \"Clarence_dolar_flattened.sol\":23808:23970  function _checkOwner() internal view virtual {... */\n    tag_116:\n        /* \"Clarence_dolar_flattened.sol\":23878:23890  _msgSender() */\n      tag_195\n        /* \"Clarence_dolar_flattened.sol\":23878:23888  _msgSender */\n      tag_100\n        /* \"Clarence_dolar_flattened.sol\":23878:23890  _msgSender() */\n      jump\t// in\n    tag_195:\n        /* \"Clarence_dolar_flattened.sol\":23867:23890  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Clarence_dolar_flattened.sol\":23867:23874  owner() */\n      tag_196\n        /* \"Clarence_dolar_flattened.sol\":23867:23872  owner */\n      tag_69\n        /* \"Clarence_dolar_flattened.sol\":23867:23874  owner() */\n      jump\t// in\n    tag_196:\n        /* \"Clarence_dolar_flattened.sol\":23867:23890  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Clarence_dolar_flattened.sol\":23863:23964  if (owner() != _msgSender()) {... */\n      tag_197\n      jumpi\n        /* \"Clarence_dolar_flattened.sol\":23940:23952  _msgSender() */\n      tag_198\n        /* \"Clarence_dolar_flattened.sol\":23940:23950  _msgSender */\n      tag_100\n        /* \"Clarence_dolar_flattened.sol\":23940:23952  _msgSender() */\n      jump\t// in\n    tag_198:\n        /* \"Clarence_dolar_flattened.sol\":23913:23953  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_199\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Clarence_dolar_flattened.sol\":23863:23964  if (owner() != _msgSender()) {... */\n    tag_197:\n        /* \"Clarence_dolar_flattened.sol\":23808:23970  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"Clarence_dolar_flattened.sol\":18613:18821  function _mint(address account, uint256 value) internal {... */\n    tag_119:\n        /* \"Clarence_dolar_flattened.sol\":18702:18703  0 */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":18683:18704  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Clarence_dolar_flattened.sol\":18683:18690  account */\n      dup3\n        /* \"Clarence_dolar_flattened.sol\":18683:18704  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Clarence_dolar_flattened.sol\":18679:18770  if (account == address(0)) {... */\n      tag_201\n      jumpi\n        /* \"Clarence_dolar_flattened.sol\":18756:18757  0 */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":18727:18759  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Clarence_dolar_flattened.sol\":18679:18770  if (account == address(0)) {... */\n    tag_201:\n        /* \"Clarence_dolar_flattened.sol\":18779:18814  _update(address(0), account, value) */\n      tag_203\n        /* \"Clarence_dolar_flattened.sol\":18795:18796  0 */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":18799:18806  account */\n      dup4\n        /* \"Clarence_dolar_flattened.sol\":18808:18813  value */\n      dup4\n        /* \"Clarence_dolar_flattened.sol\":18779:18786  _update */\n      tag_187\n        /* \"Clarence_dolar_flattened.sol\":18779:18814  _update(address(0), account, value) */\n      jump\t// in\n    tag_203:\n        /* \"Clarence_dolar_flattened.sol\":18613:18821  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Clarence_dolar_flattened.sol\":24924:25111  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_125:\n        /* \"Clarence_dolar_flattened.sol\":24997:25013  address oldOwner */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":25016:25022  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Clarence_dolar_flattened.sol\":24997:25022  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"Clarence_dolar_flattened.sol\":25041:25049  newOwner */\n      dup2\n        /* \"Clarence_dolar_flattened.sol\":25032:25038  _owner */\n      0x05\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":25032:25049  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Clarence_dolar_flattened.sol\":25095:25103  newOwner */\n      dup2\n        /* \"Clarence_dolar_flattened.sol\":25064:25104  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Clarence_dolar_flattened.sol\":25085:25093  oldOwner */\n      dup2\n        /* \"Clarence_dolar_flattened.sol\":25064:25104  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Clarence_dolar_flattened.sol\":24987:25111  {... */\n      pop\n        /* \"Clarence_dolar_flattened.sol\":24924:25111  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"Clarence_dolar_flattened.sol\":75999:76106  function nonces(address owner) public view virtual returns (uint256) {... */\n    tag_128:\n        /* \"Clarence_dolar_flattened.sol\":76059:76066  uint256 */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":76085:76092  _nonces */\n      0x08\n        /* \"Clarence_dolar_flattened.sol\":76085:76099  _nonces[owner] */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":76093:76098  owner */\n      dup4\n        /* \"Clarence_dolar_flattened.sol\":76085:76099  _nonces[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Clarence_dolar_flattened.sol\":76078:76099  return _nonces[owner] */\n      swap1\n      pop\n        /* \"Clarence_dolar_flattened.sol\":75999:76106  function nonces(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Clarence_dolar_flattened.sol\":74850:74976  function _EIP712Name() internal view returns (string memory) {... */\n    tag_131:\n        /* \"Clarence_dolar_flattened.sol\":74896:74909  string memory */\n      0x60\n        /* \"Clarence_dolar_flattened.sol\":74928:74969  _name.toStringWithFallback(_nameFallback) */\n      tag_207\n        /* \"Clarence_dolar_flattened.sol\":74955:74968  _nameFallback */\n      0x06\n        /* \"Clarence_dolar_flattened.sol\":74928:74933  _name */\n      immutable(\"0x94a6815ac3f39ee0f691137327eba74e351a039ac093f36725d81460ae04f412\")\n        /* \"Clarence_dolar_flattened.sol\":74928:74954  _name.toStringWithFallback */\n      tag_208\n      swap1\n        /* \"Clarence_dolar_flattened.sol\":74928:74969  _name.toStringWithFallback(_nameFallback) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_207:\n        /* \"Clarence_dolar_flattened.sol\":74921:74969  return _name.toStringWithFallback(_nameFallback) */\n      swap1\n      pop\n        /* \"Clarence_dolar_flattened.sol\":74850:74976  function _EIP712Name() internal view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"Clarence_dolar_flattened.sol\":75302:75437  function _EIP712Version() internal view returns (string memory) {... */\n    tag_133:\n        /* \"Clarence_dolar_flattened.sol\":75351:75364  string memory */\n      0x60\n        /* \"Clarence_dolar_flattened.sol\":75383:75430  _version.toStringWithFallback(_versionFallback) */\n      tag_210\n        /* \"Clarence_dolar_flattened.sol\":75413:75429  _versionFallback */\n      0x07\n        /* \"Clarence_dolar_flattened.sol\":75383:75391  _version */\n      immutable(\"0x6a27fd8b4e034345f821626e478d5e1624295ad016c351a1e0a3d60e930e4e52\")\n        /* \"Clarence_dolar_flattened.sol\":75383:75412  _version.toStringWithFallback */\n      tag_208\n      swap1\n        /* \"Clarence_dolar_flattened.sol\":75383:75430  _version.toStringWithFallback(_versionFallback) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_210:\n        /* \"Clarence_dolar_flattened.sol\":75376:75430  return _version.toStringWithFallback(_versionFallback) */\n      swap1\n      pop\n        /* \"Clarence_dolar_flattened.sol\":75302:75437  function _EIP712Version() internal view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"Clarence_dolar_flattened.sol\":76220:76615  function _useNonce(address owner) internal virtual returns (uint256) {... */\n    tag_152:\n        /* \"Clarence_dolar_flattened.sol\":76280:76287  uint256 */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":76582:76589  _nonces */\n      0x08\n        /* \"Clarence_dolar_flattened.sol\":76582:76596  _nonces[owner] */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":76590:76595  owner */\n      dup4\n        /* \"Clarence_dolar_flattened.sol\":76582:76596  _nonces[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":76582:76598  _nonces[owner]++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      sstore\n        /* \"Clarence_dolar_flattened.sol\":76575:76598  return _nonces[owner]++ */\n      swap1\n      pop\n        /* \"Clarence_dolar_flattened.sol\":76220:76615  function _useNonce(address owner) internal virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Clarence_dolar_flattened.sol\":73746:73922  function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {... */\n    tag_156:\n        /* \"Clarence_dolar_flattened.sol\":73823:73830  bytes32 */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":73849:73915  MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash) */\n      tag_213\n        /* \"Clarence_dolar_flattened.sol\":73882:73902  _domainSeparatorV4() */\n      tag_214\n        /* \"Clarence_dolar_flattened.sol\":73882:73900  _domainSeparatorV4 */\n      tag_113\n        /* \"Clarence_dolar_flattened.sol\":73882:73902  _domainSeparatorV4() */\n      jump\t// in\n    tag_214:\n        /* \"Clarence_dolar_flattened.sol\":73904:73914  structHash */\n      dup4\n        /* \"Clarence_dolar_flattened.sol\":73849:73881  MessageHashUtils.toTypedDataHash */\n      tag_215\n        /* \"Clarence_dolar_flattened.sol\":73849:73915  MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash) */\n      jump\t// in\n    tag_213:\n        /* \"Clarence_dolar_flattened.sol\":73842:73915  return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash) */\n      swap1\n      pop\n        /* \"Clarence_dolar_flattened.sol\":73746:73922  function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Clarence_dolar_flattened.sol\":35797:36057  function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {... */\n    tag_158:\n        /* \"Clarence_dolar_flattened.sol\":35882:35889  address */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":35902:35919  address recovered */\n      dup1\n        /* \"Clarence_dolar_flattened.sol\":35921:35939  RecoverError error */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":35941:35957  bytes32 errorArg */\n      dup1\n        /* \"Clarence_dolar_flattened.sol\":35961:35986  tryRecover(hash, v, r, s) */\n      tag_217\n        /* \"Clarence_dolar_flattened.sol\":35972:35976  hash */\n      dup9\n        /* \"Clarence_dolar_flattened.sol\":35978:35979  v */\n      dup9\n        /* \"Clarence_dolar_flattened.sol\":35981:35982  r */\n      dup9\n        /* \"Clarence_dolar_flattened.sol\":35984:35985  s */\n      dup9\n        /* \"Clarence_dolar_flattened.sol\":35961:35971  tryRecover */\n      tag_218\n        /* \"Clarence_dolar_flattened.sol\":35961:35986  tryRecover(hash, v, r, s) */\n      jump\t// in\n    tag_217:\n        /* \"Clarence_dolar_flattened.sol\":35901:35986  (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"Clarence_dolar_flattened.sol\":35996:36024  _throwError(error, errorArg) */\n      tag_219\n        /* \"Clarence_dolar_flattened.sol\":36008:36013  error */\n      dup3\n        /* \"Clarence_dolar_flattened.sol\":36015:36023  errorArg */\n      dup3\n        /* \"Clarence_dolar_flattened.sol\":35996:36007  _throwError */\n      tag_220\n        /* \"Clarence_dolar_flattened.sol\":35996:36024  _throwError(error, errorArg) */\n      jump\t// in\n    tag_219:\n        /* \"Clarence_dolar_flattened.sol\":36041:36050  recovered */\n      dup3\n        /* \"Clarence_dolar_flattened.sol\":36034:36050  return recovered */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"Clarence_dolar_flattened.sol\":35797:36057  function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Clarence_dolar_flattened.sol\":20841:21273  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_173:\n        /* \"Clarence_dolar_flattened.sol\":20970:20971  0 */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":20953:20972  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Clarence_dolar_flattened.sol\":20953:20958  owner */\n      dup5\n        /* \"Clarence_dolar_flattened.sol\":20953:20972  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Clarence_dolar_flattened.sol\":20949:21038  if (owner == address(0)) {... */\n      tag_222\n      jumpi\n        /* \"Clarence_dolar_flattened.sol\":21024:21025  0 */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":20995:21027  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_223\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_223:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Clarence_dolar_flattened.sol\":20949:21038  if (owner == address(0)) {... */\n    tag_222:\n        /* \"Clarence_dolar_flattened.sol\":21070:21071  0 */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":21051:21072  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Clarence_dolar_flattened.sol\":21051:21058  spender */\n      dup4\n        /* \"Clarence_dolar_flattened.sol\":21051:21072  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Clarence_dolar_flattened.sol\":21047:21137  if (spender == address(0)) {... */\n      tag_224\n      jumpi\n        /* \"Clarence_dolar_flattened.sol\":21123:21124  0 */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":21095:21126  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_225\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_225:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Clarence_dolar_flattened.sol\":21047:21137  if (spender == address(0)) {... */\n    tag_224:\n        /* \"Clarence_dolar_flattened.sol\":21176:21181  value */\n      dup2\n        /* \"Clarence_dolar_flattened.sol\":21146:21157  _allowances */\n      0x01\n        /* \"Clarence_dolar_flattened.sol\":21146:21164  _allowances[owner] */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":21158:21163  owner */\n      dup7\n        /* \"Clarence_dolar_flattened.sol\":21146:21164  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Clarence_dolar_flattened.sol\":21146:21173  _allowances[owner][spender] */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":21165:21172  spender */\n      dup6\n        /* \"Clarence_dolar_flattened.sol\":21146:21173  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Clarence_dolar_flattened.sol\":21146:21181  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Clarence_dolar_flattened.sol\":21195:21204  emitEvent */\n      dup1\n        /* \"Clarence_dolar_flattened.sol\":21191:21267  if (emitEvent) {... */\n      iszero\n      tag_226\n      jumpi\n        /* \"Clarence_dolar_flattened.sol\":21241:21248  spender */\n      dup3\n        /* \"Clarence_dolar_flattened.sol\":21225:21256  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Clarence_dolar_flattened.sol\":21234:21239  owner */\n      dup5\n        /* \"Clarence_dolar_flattened.sol\":21225:21256  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"Clarence_dolar_flattened.sol\":21250:21255  value */\n      dup5\n        /* \"Clarence_dolar_flattened.sol\":21225:21256  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_227\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_227:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Clarence_dolar_flattened.sol\":21191:21267  if (emitEvent) {... */\n    tag_226:\n        /* \"Clarence_dolar_flattened.sol\":20841:21273  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Clarence_dolar_flattened.sol\":17163:18270  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_187:\n        /* \"Clarence_dolar_flattened.sol\":17268:17269  0 */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":17252:17270  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Clarence_dolar_flattened.sol\":17252:17256  from */\n      dup4\n        /* \"Clarence_dolar_flattened.sol\":17252:17270  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Clarence_dolar_flattened.sol\":17248:17788  if (from == address(0)) {... */\n      tag_229\n      jumpi\n        /* \"Clarence_dolar_flattened.sol\":17404:17409  value */\n      dup1\n        /* \"Clarence_dolar_flattened.sol\":17388:17400  _totalSupply */\n      0x02\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":17388:17409  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_230\n      swap2\n      swap1\n      tag_231\n      jump\t// in\n    tag_230:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Clarence_dolar_flattened.sol\":17248:17788  if (from == address(0)) {... */\n      jump(tag_232)\n    tag_229:\n        /* \"Clarence_dolar_flattened.sol\":17440:17459  uint256 fromBalance */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":17462:17471  _balances */\n      dup1\n        /* \"Clarence_dolar_flattened.sol\":17462:17477  _balances[from] */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":17472:17476  from */\n      dup6\n        /* \"Clarence_dolar_flattened.sol\":17462:17477  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Clarence_dolar_flattened.sol\":17440:17477  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"Clarence_dolar_flattened.sol\":17509:17514  value */\n      dup2\n        /* \"Clarence_dolar_flattened.sol\":17495:17506  fromBalance */\n      dup2\n        /* \"Clarence_dolar_flattened.sol\":17495:17514  fromBalance < value */\n      lt\n        /* \"Clarence_dolar_flattened.sol\":17491:17606  if (fromBalance < value) {... */\n      iszero\n      tag_233\n      jumpi\n        /* \"Clarence_dolar_flattened.sol\":17566:17570  from */\n      dup4\n        /* \"Clarence_dolar_flattened.sol\":17572:17583  fromBalance */\n      dup2\n        /* \"Clarence_dolar_flattened.sol\":17585:17590  value */\n      dup4\n        /* \"Clarence_dolar_flattened.sol\":17541:17591  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_234\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_234:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Clarence_dolar_flattened.sol\":17491:17606  if (fromBalance < value) {... */\n    tag_233:\n        /* \"Clarence_dolar_flattened.sol\":17758:17763  value */\n      dup2\n        /* \"Clarence_dolar_flattened.sol\":17744:17755  fromBalance */\n      dup2\n        /* \"Clarence_dolar_flattened.sol\":17744:17763  fromBalance - value */\n      sub\n        /* \"Clarence_dolar_flattened.sol\":17726:17735  _balances */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":17726:17741  _balances[from] */\n      dup1\n        /* \"Clarence_dolar_flattened.sol\":17736:17740  from */\n      dup7\n        /* \"Clarence_dolar_flattened.sol\":17726:17741  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Clarence_dolar_flattened.sol\":17726:17763  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Clarence_dolar_flattened.sol\":17426:17788  {... */\n      pop\n        /* \"Clarence_dolar_flattened.sol\":17248:17788  if (from == address(0)) {... */\n    tag_232:\n        /* \"Clarence_dolar_flattened.sol\":17816:17817  0 */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":17802:17818  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Clarence_dolar_flattened.sol\":17802:17804  to */\n      dup3\n        /* \"Clarence_dolar_flattened.sol\":17802:17818  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Clarence_dolar_flattened.sol\":17798:18223  if (to == address(0)) {... */\n      tag_235\n      jumpi\n        /* \"Clarence_dolar_flattened.sol\":17981:17986  value */\n      dup1\n        /* \"Clarence_dolar_flattened.sol\":17965:17977  _totalSupply */\n      0x02\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":17965:17986  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Clarence_dolar_flattened.sol\":17798:18223  if (to == address(0)) {... */\n      jump(tag_236)\n    tag_235:\n        /* \"Clarence_dolar_flattened.sol\":18193:18198  value */\n      dup1\n        /* \"Clarence_dolar_flattened.sol\":18176:18185  _balances */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":18176:18189  _balances[to] */\n      dup1\n        /* \"Clarence_dolar_flattened.sol\":18186:18188  to */\n      dup5\n        /* \"Clarence_dolar_flattened.sol\":18176:18189  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":18176:18198  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Clarence_dolar_flattened.sol\":17798:18223  if (to == address(0)) {... */\n    tag_236:\n        /* \"Clarence_dolar_flattened.sol\":18253:18255  to */\n      dup2\n        /* \"Clarence_dolar_flattened.sol\":18238:18263  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Clarence_dolar_flattened.sol\":18247:18251  from */\n      dup4\n        /* \"Clarence_dolar_flattened.sol\":18238:18263  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"Clarence_dolar_flattened.sol\":18257:18262  value */\n      dup4\n        /* \"Clarence_dolar_flattened.sol\":18238:18263  Transfer(from, to, value) */\n      mload(0x40)\n      tag_237\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_237:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Clarence_dolar_flattened.sol\":17163:18270  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Clarence_dolar_flattened.sol\":72942:73121  function _buildDomainSeparator() private view returns (bytes32) {... */\n    tag_193:\n        /* \"Clarence_dolar_flattened.sol\":72997:73004  bytes32 */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":70908:71003  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n      0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n        /* \"Clarence_dolar_flattened.sol\":73055:73066  _hashedName */\n      immutable(\"0xd7540fe9b6cfec114ef69b9a5e37f0df0cc41a7a00237e8b74bf5a92c0da8102\")\n        /* \"Clarence_dolar_flattened.sol\":73068:73082  _hashedVersion */\n      immutable(\"0x957b8855a729b67dc028ca49cb97b10aca21a5ff5ddcb5f61d4444c005a9b1c2\")\n        /* \"Clarence_dolar_flattened.sol\":73084:73097  block.chainid */\n      chainid\n        /* \"Clarence_dolar_flattened.sol\":73107:73111  this */\n      address\n        /* \"Clarence_dolar_flattened.sol\":73033:73113  abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)) */\n      add(0x20, mload(0x40))\n      tag_239\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_240\n      jump\t// in\n    tag_239:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"Clarence_dolar_flattened.sol\":73023:73114  keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Clarence_dolar_flattened.sol\":73016:73114  return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n      swap1\n      pop\n        /* \"Clarence_dolar_flattened.sol\":72942:73121  function _buildDomainSeparator() private view returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"Clarence_dolar_flattened.sol\":67278:67545  function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {... */\n    tag_208:\n        /* \"Clarence_dolar_flattened.sol\":67372:67385  string memory */\n      0x60\n        /* \"Clarence_dolar_flattened.sol\":65283:65349  0x00000000000000000000000000000000000000000000000000000000000000FF */\n      0xff\n        /* \"Clarence_dolar_flattened.sol\":67430:67447  FALLBACK_SENTINEL */\n      0x00\n      shl\n        /* \"Clarence_dolar_flattened.sol\":67420:67425  value */\n      dup4\n        /* \"Clarence_dolar_flattened.sol\":67401:67447  ShortString.unwrap(value) != FALLBACK_SENTINEL */\n      eq\n        /* \"Clarence_dolar_flattened.sol\":67397:67539  if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {... */\n      tag_242\n      jumpi\n        /* \"Clarence_dolar_flattened.sol\":67470:67485  toString(value) */\n      tag_243\n        /* \"Clarence_dolar_flattened.sol\":67479:67484  value */\n      dup4\n        /* \"Clarence_dolar_flattened.sol\":67470:67478  toString */\n      tag_244\n        /* \"Clarence_dolar_flattened.sol\":67470:67485  toString(value) */\n      jump\t// in\n    tag_243:\n        /* \"Clarence_dolar_flattened.sol\":67463:67485  return toString(value) */\n      swap1\n      pop\n      jump(tag_241)\n        /* \"Clarence_dolar_flattened.sol\":67397:67539  if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {... */\n    tag_242:\n        /* \"Clarence_dolar_flattened.sol\":67523:67528  store */\n      dup2\n        /* \"Clarence_dolar_flattened.sol\":67516:67528  return store */\n      dup1\n      sload\n      tag_246\n      swap1\n      tag_93\n      jump\t// in\n    tag_246:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_247\n      swap1\n      tag_93\n      jump\t// in\n    tag_247:\n      dup1\n      iszero\n      tag_248\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_249\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_248)\n    tag_249:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_250:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_250\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_248:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"Clarence_dolar_flattened.sol\":67278:67545  function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {... */\n    tag_241:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Clarence_dolar_flattened.sol\":59552:59953  function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {... */\n    tag_215:\n        /* \"Clarence_dolar_flattened.sol\":59645:59659  bytes32 digest */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":59754:59758  0x40 */\n      0x40\n        /* \"Clarence_dolar_flattened.sol\":59748:59759  mload(0x40) */\n      mload\n        /* \"Clarence_dolar_flattened.sol\":59784:59794  hex\"19_01\" */\n      0x1901000000000000000000000000000000000000000000000000000000000000\n        /* \"Clarence_dolar_flattened.sol\":59779:59782  ptr */\n      dup2\n        /* \"Clarence_dolar_flattened.sol\":59772:59795  mstore(ptr, hex\"19_01\") */\n      mstore\n        /* \"Clarence_dolar_flattened.sol\":59831:59846  domainSeparator */\n      dup4\n        /* \"Clarence_dolar_flattened.sol\":59824:59828  0x02 */\n      0x02\n        /* \"Clarence_dolar_flattened.sol\":59819:59822  ptr */\n      dup3\n        /* \"Clarence_dolar_flattened.sol\":59815:59829  add(ptr, 0x02) */\n      add\n        /* \"Clarence_dolar_flattened.sol\":59808:59847  mstore(add(ptr, 0x02), domainSeparator) */\n      mstore\n        /* \"Clarence_dolar_flattened.sol\":59883:59893  structHash */\n      dup3\n        /* \"Clarence_dolar_flattened.sol\":59876:59880  0x22 */\n      0x22\n        /* \"Clarence_dolar_flattened.sol\":59871:59874  ptr */\n      dup3\n        /* \"Clarence_dolar_flattened.sol\":59867:59881  add(ptr, 0x22) */\n      add\n        /* \"Clarence_dolar_flattened.sol\":59860:59894  mstore(add(ptr, 0x22), structHash) */\n      mstore\n        /* \"Clarence_dolar_flattened.sol\":59932:59936  0x42 */\n      0x42\n        /* \"Clarence_dolar_flattened.sol\":59927:59930  ptr */\n      dup2\n        /* \"Clarence_dolar_flattened.sol\":59917:59937  keccak256(ptr, 0x42) */\n      keccak256\n        /* \"Clarence_dolar_flattened.sol\":59907:59937  digest := keccak256(ptr, 0x42) */\n      swap2\n      pop\n        /* \"Clarence_dolar_flattened.sol\":59723:59947  {... */\n      pop\n        /* \"Clarence_dolar_flattened.sol\":59552:59953  function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Clarence_dolar_flattened.sol\":34134:35664  function tryRecover(... */\n    tag_218:\n        /* \"Clarence_dolar_flattened.sol\":34260:34267  address */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":34269:34281  RecoverError */\n      dup1\n        /* \"Clarence_dolar_flattened.sol\":34283:34290  bytes32 */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":35193:35259  0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0\n        /* \"Clarence_dolar_flattened.sol\":35188:35189  s */\n      dup5\n        /* \"Clarence_dolar_flattened.sol\":35180:35190  uint256(s) */\n      0x00\n      shr\n        /* \"Clarence_dolar_flattened.sol\":35180:35259  uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      gt\n        /* \"Clarence_dolar_flattened.sol\":35176:35340  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n      iszero\n      tag_253\n      jumpi\n        /* \"Clarence_dolar_flattened.sol\":35291:35292  0 */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":35295:35325  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"Clarence_dolar_flattened.sol\":35327:35328  s */\n      dup6\n        /* \"Clarence_dolar_flattened.sol\":35275:35329  return (address(0), RecoverError.InvalidSignatureS, s) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n      jump(tag_252)\n        /* \"Clarence_dolar_flattened.sol\":35176:35340  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n    tag_253:\n        /* \"Clarence_dolar_flattened.sol\":35434:35448  address signer */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":35451:35475  ecrecover(hash, v, r, s) */\n      0x01\n        /* \"Clarence_dolar_flattened.sol\":35461:35465  hash */\n      dup9\n        /* \"Clarence_dolar_flattened.sol\":35467:35468  v */\n      dup9\n        /* \"Clarence_dolar_flattened.sol\":35470:35471  r */\n      dup9\n        /* \"Clarence_dolar_flattened.sol\":35473:35474  s */\n      dup9\n        /* \"Clarence_dolar_flattened.sol\":35451:35475  ecrecover(hash, v, r, s) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      tag_254\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_255\n      jump\t// in\n    tag_254:\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_257\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_257:\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"Clarence_dolar_flattened.sol\":35434:35475  address signer = ecrecover(hash, v, r, s) */\n      swap1\n      pop\n        /* \"Clarence_dolar_flattened.sol\":35507:35508  0 */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":35489:35509  signer == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Clarence_dolar_flattened.sol\":35489:35495  signer */\n      dup2\n        /* \"Clarence_dolar_flattened.sol\":35489:35509  signer == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Clarence_dolar_flattened.sol\":35485:35598  if (signer == address(0)) {... */\n      tag_258\n      jumpi\n        /* \"Clarence_dolar_flattened.sol\":35541:35542  0 */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":35545:35574  RecoverError.InvalidSignature */\n      0x01\n        /* \"Clarence_dolar_flattened.sol\":35584:35585  0 */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":35576:35586  bytes32(0) */\n      dup1\n      shl\n        /* \"Clarence_dolar_flattened.sol\":35525:35587  return (address(0), RecoverError.InvalidSignature, bytes32(0)) */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      pop\n      jump(tag_252)\n        /* \"Clarence_dolar_flattened.sol\":35485:35598  if (signer == address(0)) {... */\n    tag_258:\n        /* \"Clarence_dolar_flattened.sol\":35616:35622  signer */\n      dup1\n        /* \"Clarence_dolar_flattened.sol\":35624:35644  RecoverError.NoError */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":35654:35655  0 */\n      dup1\n        /* \"Clarence_dolar_flattened.sol\":35646:35656  bytes32(0) */\n      0x00\n      shl\n        /* \"Clarence_dolar_flattened.sol\":35608:35657  return (signer, RecoverError.NoError, bytes32(0)) */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      pop\n        /* \"Clarence_dolar_flattened.sol\":34134:35664  function tryRecover(... */\n    tag_252:\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Clarence_dolar_flattened.sol\":36190:36722  function _throwError(RecoverError error, bytes32 errorArg) private pure {... */\n    tag_220:\n        /* \"Clarence_dolar_flattened.sol\":36285:36305  RecoverError.NoError */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":36276:36305  error == RecoverError.NoError */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_260\n      jumpi\n      tag_261\n      tag_262\n      jump\t// in\n    tag_261:\n    tag_260:\n        /* \"Clarence_dolar_flattened.sol\":36276:36281  error */\n      dup3\n        /* \"Clarence_dolar_flattened.sol\":36276:36305  error == RecoverError.NoError */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_263\n      jumpi\n      tag_264\n      tag_262\n      jump\t// in\n    tag_264:\n    tag_263:\n      sub\n        /* \"Clarence_dolar_flattened.sol\":36272:36716  if (error == RecoverError.NoError) {... */\n      iszero\n        /* \"Clarence_dolar_flattened.sol\":36321:36328  return; */\n      tag_259\n        /* \"Clarence_dolar_flattened.sol\":36272:36716  if (error == RecoverError.NoError) {... */\n      jumpi\n        /* \"Clarence_dolar_flattened.sol\":36381:36410  RecoverError.InvalidSignature */\n      0x01\n        /* \"Clarence_dolar_flattened.sol\":36372:36410  error == RecoverError.InvalidSignature */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_267\n      jumpi\n      tag_268\n      tag_262\n      jump\t// in\n    tag_268:\n    tag_267:\n        /* \"Clarence_dolar_flattened.sol\":36372:36377  error */\n      dup3\n        /* \"Clarence_dolar_flattened.sol\":36372:36410  error == RecoverError.InvalidSignature */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_269\n      jumpi\n      tag_270\n      tag_262\n      jump\t// in\n    tag_270:\n    tag_269:\n      sub\n        /* \"Clarence_dolar_flattened.sol\":36368:36716  if (error == RecoverError.InvalidSignature) {... */\n      tag_271\n      jumpi\n        /* \"Clarence_dolar_flattened.sol\":36433:36456  ECDSAInvalidSignature() */\n      mload(0x40)\n      0xf645eedf00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Clarence_dolar_flattened.sol\":36368:36716  if (error == RecoverError.InvalidSignature) {... */\n    tag_271:\n        /* \"Clarence_dolar_flattened.sol\":36486:36521  RecoverError.InvalidSignatureLength */\n      0x02\n        /* \"Clarence_dolar_flattened.sol\":36477:36521  error == RecoverError.InvalidSignatureLength */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_273\n      jumpi\n      tag_274\n      tag_262\n      jump\t// in\n    tag_274:\n    tag_273:\n        /* \"Clarence_dolar_flattened.sol\":36477:36482  error */\n      dup3\n        /* \"Clarence_dolar_flattened.sol\":36477:36521  error == RecoverError.InvalidSignatureLength */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_275\n      jumpi\n      tag_276\n      tag_262\n      jump\t// in\n    tag_276:\n    tag_275:\n      sub\n        /* \"Clarence_dolar_flattened.sol\":36473:36716  if (error == RecoverError.InvalidSignatureLength) {... */\n      tag_277\n      jumpi\n        /* \"Clarence_dolar_flattened.sol\":36580:36588  errorArg */\n      dup1\n        /* \"Clarence_dolar_flattened.sol\":36572:36589  uint256(errorArg) */\n      0x00\n      shr\n        /* \"Clarence_dolar_flattened.sol\":36544:36590  ECDSAInvalidSignatureLength(uint256(errorArg)) */\n      mload(0x40)\n      0xfce698f700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_278:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Clarence_dolar_flattened.sol\":36473:36716  if (error == RecoverError.InvalidSignatureLength) {... */\n    tag_277:\n        /* \"Clarence_dolar_flattened.sol\":36620:36650  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"Clarence_dolar_flattened.sol\":36611:36650  error == RecoverError.InvalidSignatureS */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_280\n      jumpi\n      tag_281\n      tag_262\n      jump\t// in\n    tag_281:\n    tag_280:\n        /* \"Clarence_dolar_flattened.sol\":36611:36616  error */\n      dup3\n        /* \"Clarence_dolar_flattened.sol\":36611:36650  error == RecoverError.InvalidSignatureS */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_282\n      jumpi\n      tag_283\n      tag_262\n      jump\t// in\n    tag_283:\n    tag_282:\n      sub\n        /* \"Clarence_dolar_flattened.sol\":36607:36716  if (error == RecoverError.InvalidSignatureS) {... */\n      tag_284\n      jumpi\n        /* \"Clarence_dolar_flattened.sol\":36696:36704  errorArg */\n      dup1\n        /* \"Clarence_dolar_flattened.sol\":36673:36705  ECDSAInvalidSignatureS(errorArg) */\n      mload(0x40)\n      0xd78bce0c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_285\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_285:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Clarence_dolar_flattened.sol\":36607:36716  if (error == RecoverError.InvalidSignatureS) {... */\n    tag_284:\n        /* \"Clarence_dolar_flattened.sol\":36190:36722  function _throwError(RecoverError error, bytes32 errorArg) private pure {... */\n    tag_259:\n      pop\n      pop\n      jump\t// out\n        /* \"Clarence_dolar_flattened.sol\":65971:66376  function toString(ShortString sstr) internal pure returns (string memory) {... */\n    tag_244:\n        /* \"Clarence_dolar_flattened.sol\":66030:66043  string memory */\n      0x60\n        /* \"Clarence_dolar_flattened.sol\":66055:66066  uint256 len */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":66069:66085  byteLength(sstr) */\n      tag_287\n        /* \"Clarence_dolar_flattened.sol\":66080:66084  sstr */\n      dup4\n        /* \"Clarence_dolar_flattened.sol\":66069:66079  byteLength */\n      tag_288\n        /* \"Clarence_dolar_flattened.sol\":66069:66085  byteLength(sstr) */\n      jump\t// in\n    tag_287:\n        /* \"Clarence_dolar_flattened.sol\":66055:66085  uint256 len = byteLength(sstr) */\n      swap1\n      pop\n        /* \"Clarence_dolar_flattened.sol\":66173:66190  string memory str */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":66204:66206  32 */\n      0x20\n        /* \"Clarence_dolar_flattened.sol\":66193:66207  new string(32) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_289\n      jumpi\n      tag_290\n      tag_136\n      jump\t// in\n    tag_290:\n    tag_289:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_291\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_291:\n      pop\n        /* \"Clarence_dolar_flattened.sol\":66173:66207  string memory str = new string(32) */\n      swap1\n      pop\n        /* \"Clarence_dolar_flattened.sol\":66295:66298  len */\n      dup2\n        /* \"Clarence_dolar_flattened.sol\":66290:66293  str */\n      dup2\n        /* \"Clarence_dolar_flattened.sol\":66283:66299  mstore(str, len) */\n      mstore\n        /* \"Clarence_dolar_flattened.sol\":66335:66339  sstr */\n      dup4\n        /* \"Clarence_dolar_flattened.sol\":66328:66332  0x20 */\n      0x20\n        /* \"Clarence_dolar_flattened.sol\":66323:66326  str */\n      dup3\n        /* \"Clarence_dolar_flattened.sol\":66319:66333  add(str, 0x20) */\n      add\n        /* \"Clarence_dolar_flattened.sol\":66312:66340  mstore(add(str, 0x20), sstr) */\n      mstore\n        /* \"Clarence_dolar_flattened.sol\":66366:66369  str */\n      dup1\n        /* \"Clarence_dolar_flattened.sol\":66359:66369  return str */\n      swap3\n      pop\n      pop\n      pop\n        /* \"Clarence_dolar_flattened.sol\":65971:66376  function toString(ShortString sstr) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Clarence_dolar_flattened.sol\":66448:66693  function byteLength(ShortString sstr) internal pure returns (uint256) {... */\n    tag_288:\n        /* \"Clarence_dolar_flattened.sol\":66509:66516  uint256 */\n      0x00\n        /* \"Clarence_dolar_flattened.sol\":66528:66542  uint256 result */\n      dup1\n        /* \"Clarence_dolar_flattened.sol\":66581:66585  0xFF */\n      0xff\n        /* \"Clarence_dolar_flattened.sol\":66572:66576  sstr */\n      dup4\n        /* \"Clarence_dolar_flattened.sol\":66545:66578  uint256(ShortString.unwrap(sstr)) */\n      0x00\n      shr\n        /* \"Clarence_dolar_flattened.sol\":66545:66585  uint256(ShortString.unwrap(sstr)) & 0xFF */\n      and\n        /* \"Clarence_dolar_flattened.sol\":66528:66585  uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF */\n      swap1\n      pop\n        /* \"Clarence_dolar_flattened.sol\":66608:66610  31 */\n      0x1f\n        /* \"Clarence_dolar_flattened.sol\":66599:66605  result */\n      dup2\n        /* \"Clarence_dolar_flattened.sol\":66599:66610  result > 31 */\n      gt\n        /* \"Clarence_dolar_flattened.sol\":66595:66664  if (result > 31) {... */\n      iszero\n      tag_293\n      jumpi\n        /* \"Clarence_dolar_flattened.sol\":66633:66653  InvalidShortString() */\n      mload(0x40)\n      0xb3512b0c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Clarence_dolar_flattened.sol\":66595:66664  if (result > 31) {... */\n    tag_293:\n        /* \"Clarence_dolar_flattened.sol\":66680:66686  result */\n      dup1\n        /* \"Clarence_dolar_flattened.sol\":66673:66686  return result */\n      swap2\n      pop\n      pop\n        /* \"Clarence_dolar_flattened.sol\":66448:66693  function byteLength(ShortString sstr) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_294:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_295:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_296:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_297:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_298:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_338\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_294\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":711:782   */\n      tag_339\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_295\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_340\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_296\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":881:910   */\n      tag_341\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_297\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_26:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_343\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_298\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_300:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_302:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_303:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_349\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_302\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_304:\n        /* \"#utility.yul\":1876:1900   */\n      tag_351\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_303\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_352\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_352:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_305:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_354\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_304\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_306:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_307:\n        /* \"#utility.yul\":2232:2256   */\n      tag_357\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_306\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_358\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_358:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_308:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_360\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_307\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_29:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_362\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_363\n      tag_300\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":2525:2644   */\n    tag_362:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_364\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_305\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_365\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_308\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_309:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_310:\n        /* \"#utility.yul\":3089:3110   */\n      tag_368\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_309\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_32:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_370\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_310\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_311:\n        /* \"#utility.yul\":3426:3450   */\n      tag_372\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_306\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_36:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_374\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_311\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_39:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      dup1\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_376\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_377\n      tag_300\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":3801:3920   */\n    tag_376:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_378\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_305\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_379\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_305\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_380\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_308\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4402   */\n    tag_312:\n        /* \"#utility.yul\":4351:4358   */\n      0x00\n        /* \"#utility.yul\":4391:4395   */\n      0xff\n        /* \"#utility.yul\":4384:4389   */\n      dup3\n        /* \"#utility.yul\":4380:4396   */\n      and\n        /* \"#utility.yul\":4369:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4408:4520   */\n    tag_313:\n        /* \"#utility.yul\":4491:4513   */\n      tag_383\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4491:4513   */\n      tag_312\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":4486:4489   */\n      dup3\n        /* \"#utility.yul\":4479:4514   */\n      mstore\n        /* \"#utility.yul\":4408:4520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4740   */\n    tag_45:\n        /* \"#utility.yul\":4615:4619   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4642:4651   */\n      dup3\n        /* \"#utility.yul\":4638:4656   */\n      add\n        /* \"#utility.yul\":4630:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4733   */\n      tag_385\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4719:4728   */\n      dup4\n        /* \"#utility.yul\":4715:4732   */\n      add\n        /* \"#utility.yul\":4706:4712   */\n      dup5\n        /* \"#utility.yul\":4666:4733   */\n      tag_313\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":4526:4740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:4823   */\n    tag_314:\n        /* \"#utility.yul\":4783:4790   */\n      0x00\n        /* \"#utility.yul\":4812:4817   */\n      dup2\n        /* \"#utility.yul\":4801:4817   */\n      swap1\n      pop\n        /* \"#utility.yul\":4746:4823   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4829:4947   */\n    tag_315:\n        /* \"#utility.yul\":4916:4940   */\n      tag_388\n        /* \"#utility.yul\":4934:4939   */\n      dup2\n        /* \"#utility.yul\":4916:4940   */\n      tag_314\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":4911:4914   */\n      dup3\n        /* \"#utility.yul\":4904:4941   */\n      mstore\n        /* \"#utility.yul\":4829:4947   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4953:5175   */\n    tag_49:\n        /* \"#utility.yul\":5046:5050   */\n      0x00\n        /* \"#utility.yul\":5084:5086   */\n      0x20\n        /* \"#utility.yul\":5073:5082   */\n      dup3\n        /* \"#utility.yul\":5069:5087   */\n      add\n        /* \"#utility.yul\":5061:5087   */\n      swap1\n      pop\n        /* \"#utility.yul\":5097:5168   */\n      tag_390\n        /* \"#utility.yul\":5165:5166   */\n      0x00\n        /* \"#utility.yul\":5154:5163   */\n      dup4\n        /* \"#utility.yul\":5150:5167   */\n      add\n        /* \"#utility.yul\":5141:5147   */\n      dup5\n        /* \"#utility.yul\":5097:5168   */\n      tag_315\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":4953:5175   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5181:5510   */\n    tag_55:\n        /* \"#utility.yul\":5240:5246   */\n      0x00\n        /* \"#utility.yul\":5289:5291   */\n      0x20\n        /* \"#utility.yul\":5277:5286   */\n      dup3\n        /* \"#utility.yul\":5268:5275   */\n      dup5\n        /* \"#utility.yul\":5264:5287   */\n      sub\n        /* \"#utility.yul\":5260:5292   */\n      slt\n        /* \"#utility.yul\":5257:5376   */\n      iszero\n      tag_392\n      jumpi\n        /* \"#utility.yul\":5295:5374   */\n      tag_393\n      tag_300\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":5257:5376   */\n    tag_392:\n        /* \"#utility.yul\":5415:5416   */\n      0x00\n        /* \"#utility.yul\":5440:5493   */\n      tag_394\n        /* \"#utility.yul\":5485:5492   */\n      dup5\n        /* \"#utility.yul\":5476:5482   */\n      dup3\n        /* \"#utility.yul\":5465:5474   */\n      dup6\n        /* \"#utility.yul\":5461:5483   */\n      add\n        /* \"#utility.yul\":5440:5493   */\n      tag_305\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":5430:5493   */\n      swap2\n      pop\n        /* \"#utility.yul\":5386:5503   */\n      pop\n        /* \"#utility.yul\":5181:5510   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5516:5665   */\n    tag_316:\n        /* \"#utility.yul\":5552:5559   */\n      0x00\n        /* \"#utility.yul\":5592:5658   */\n      0xff00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5585:5590   */\n      dup3\n        /* \"#utility.yul\":5581:5659   */\n      and\n        /* \"#utility.yul\":5570:5659   */\n      swap1\n      pop\n        /* \"#utility.yul\":5516:5665   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5671:5786   */\n    tag_317:\n        /* \"#utility.yul\":5756:5779   */\n      tag_397\n        /* \"#utility.yul\":5773:5778   */\n      dup2\n        /* \"#utility.yul\":5756:5779   */\n      tag_316\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":5751:5754   */\n      dup3\n        /* \"#utility.yul\":5744:5780   */\n      mstore\n        /* \"#utility.yul\":5671:5786   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5792:5910   */\n    tag_318:\n        /* \"#utility.yul\":5879:5903   */\n      tag_399\n        /* \"#utility.yul\":5897:5902   */\n      dup2\n        /* \"#utility.yul\":5879:5903   */\n      tag_303\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":5874:5877   */\n      dup3\n        /* \"#utility.yul\":5867:5904   */\n      mstore\n        /* \"#utility.yul\":5792:5910   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5916:6030   */\n    tag_319:\n        /* \"#utility.yul\":5983:5989   */\n      0x00\n        /* \"#utility.yul\":6017:6022   */\n      dup2\n        /* \"#utility.yul\":6011:6023   */\n      mload\n        /* \"#utility.yul\":6001:6023   */\n      swap1\n      pop\n        /* \"#utility.yul\":5916:6030   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6036:6220   */\n    tag_320:\n        /* \"#utility.yul\":6135:6146   */\n      0x00\n        /* \"#utility.yul\":6169:6175   */\n      dup3\n        /* \"#utility.yul\":6164:6167   */\n      dup3\n        /* \"#utility.yul\":6157:6176   */\n      mstore\n        /* \"#utility.yul\":6209:6213   */\n      0x20\n        /* \"#utility.yul\":6204:6207   */\n      dup3\n        /* \"#utility.yul\":6200:6214   */\n      add\n        /* \"#utility.yul\":6185:6214   */\n      swap1\n      pop\n        /* \"#utility.yul\":6036:6220   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6226:6358   */\n    tag_321:\n        /* \"#utility.yul\":6293:6297   */\n      0x00\n        /* \"#utility.yul\":6316:6319   */\n      dup2\n        /* \"#utility.yul\":6308:6319   */\n      swap1\n      pop\n        /* \"#utility.yul\":6346:6350   */\n      0x20\n        /* \"#utility.yul\":6341:6344   */\n      dup3\n        /* \"#utility.yul\":6337:6351   */\n      add\n        /* \"#utility.yul\":6329:6351   */\n      swap1\n      pop\n        /* \"#utility.yul\":6226:6358   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6364:6472   */\n    tag_322:\n        /* \"#utility.yul\":6441:6465   */\n      tag_404\n        /* \"#utility.yul\":6459:6464   */\n      dup2\n        /* \"#utility.yul\":6441:6465   */\n      tag_306\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":6436:6439   */\n      dup3\n        /* \"#utility.yul\":6429:6466   */\n      mstore\n        /* \"#utility.yul\":6364:6472   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6478:6657   */\n    tag_323:\n        /* \"#utility.yul\":6547:6557   */\n      0x00\n        /* \"#utility.yul\":6568:6614   */\n      tag_406\n        /* \"#utility.yul\":6610:6613   */\n      dup4\n        /* \"#utility.yul\":6602:6608   */\n      dup4\n        /* \"#utility.yul\":6568:6614   */\n      tag_322\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":6646:6650   */\n      0x20\n        /* \"#utility.yul\":6641:6644   */\n      dup4\n        /* \"#utility.yul\":6637:6651   */\n      add\n        /* \"#utility.yul\":6623:6651   */\n      swap1\n      pop\n        /* \"#utility.yul\":6478:6657   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6663:6776   */\n    tag_324:\n        /* \"#utility.yul\":6733:6737   */\n      0x00\n        /* \"#utility.yul\":6765:6769   */\n      0x20\n        /* \"#utility.yul\":6760:6763   */\n      dup3\n        /* \"#utility.yul\":6756:6770   */\n      add\n        /* \"#utility.yul\":6748:6770   */\n      swap1\n      pop\n        /* \"#utility.yul\":6663:6776   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6812:7544   */\n    tag_325:\n        /* \"#utility.yul\":6931:6934   */\n      0x00\n        /* \"#utility.yul\":6960:7014   */\n      tag_409\n        /* \"#utility.yul\":7008:7013   */\n      dup3\n        /* \"#utility.yul\":6960:7014   */\n      tag_319\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":7030:7116   */\n      tag_410\n        /* \"#utility.yul\":7109:7115   */\n      dup2\n        /* \"#utility.yul\":7104:7107   */\n      dup6\n        /* \"#utility.yul\":7030:7116   */\n      tag_320\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":7023:7116   */\n      swap4\n      pop\n        /* \"#utility.yul\":7140:7196   */\n      tag_411\n        /* \"#utility.yul\":7190:7195   */\n      dup4\n        /* \"#utility.yul\":7140:7196   */\n      tag_321\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":7219:7226   */\n      dup1\n        /* \"#utility.yul\":7250:7251   */\n      0x00\n        /* \"#utility.yul\":7235:7519   */\n    tag_412:\n        /* \"#utility.yul\":7260:7266   */\n      dup4\n        /* \"#utility.yul\":7257:7258   */\n      dup2\n        /* \"#utility.yul\":7254:7267   */\n      lt\n        /* \"#utility.yul\":7235:7519   */\n      iszero\n      tag_414\n      jumpi\n        /* \"#utility.yul\":7336:7342   */\n      dup2\n        /* \"#utility.yul\":7330:7343   */\n      mload\n        /* \"#utility.yul\":7363:7426   */\n      tag_415\n        /* \"#utility.yul\":7422:7425   */\n      dup9\n        /* \"#utility.yul\":7407:7420   */\n      dup3\n        /* \"#utility.yul\":7363:7426   */\n      tag_323\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":7356:7426   */\n      swap8\n      pop\n        /* \"#utility.yul\":7449:7509   */\n      tag_416\n        /* \"#utility.yul\":7502:7508   */\n      dup4\n        /* \"#utility.yul\":7449:7509   */\n      tag_324\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":7439:7509   */\n      swap3\n      pop\n        /* \"#utility.yul\":7295:7519   */\n      pop\n        /* \"#utility.yul\":7282:7283   */\n      0x01\n        /* \"#utility.yul\":7279:7280   */\n      dup2\n        /* \"#utility.yul\":7275:7284   */\n      add\n        /* \"#utility.yul\":7270:7284   */\n      swap1\n      pop\n        /* \"#utility.yul\":7235:7519   */\n      jump(tag_412)\n    tag_414:\n        /* \"#utility.yul\":7239:7253   */\n      pop\n        /* \"#utility.yul\":7535:7538   */\n      dup6\n        /* \"#utility.yul\":7528:7538   */\n      swap4\n      pop\n        /* \"#utility.yul\":6936:7544   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":6812:7544   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7550:8765   */\n    tag_67:\n        /* \"#utility.yul\":7899:7903   */\n      0x00\n        /* \"#utility.yul\":7937:7940   */\n      0xe0\n        /* \"#utility.yul\":7926:7935   */\n      dup3\n        /* \"#utility.yul\":7922:7941   */\n      add\n        /* \"#utility.yul\":7914:7941   */\n      swap1\n      pop\n        /* \"#utility.yul\":7951:8020   */\n      tag_418\n        /* \"#utility.yul\":8017:8018   */\n      0x00\n        /* \"#utility.yul\":8006:8015   */\n      dup4\n        /* \"#utility.yul\":8002:8019   */\n      add\n        /* \"#utility.yul\":7993:7999   */\n      dup11\n        /* \"#utility.yul\":7951:8020   */\n      tag_317\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":8067:8076   */\n      dup2\n        /* \"#utility.yul\":8061:8065   */\n      dup2\n        /* \"#utility.yul\":8057:8077   */\n      sub\n        /* \"#utility.yul\":8052:8054   */\n      0x20\n        /* \"#utility.yul\":8041:8050   */\n      dup4\n        /* \"#utility.yul\":8037:8055   */\n      add\n        /* \"#utility.yul\":8030:8078   */\n      mstore\n        /* \"#utility.yul\":8095:8173   */\n      tag_419\n        /* \"#utility.yul\":8168:8172   */\n      dup2\n        /* \"#utility.yul\":8159:8165   */\n      dup10\n        /* \"#utility.yul\":8095:8173   */\n      tag_298\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":8087:8173   */\n      swap1\n      pop\n        /* \"#utility.yul\":8220:8229   */\n      dup2\n        /* \"#utility.yul\":8214:8218   */\n      dup2\n        /* \"#utility.yul\":8210:8230   */\n      sub\n        /* \"#utility.yul\":8205:8207   */\n      0x40\n        /* \"#utility.yul\":8194:8203   */\n      dup4\n        /* \"#utility.yul\":8190:8208   */\n      add\n        /* \"#utility.yul\":8183:8231   */\n      mstore\n        /* \"#utility.yul\":8248:8326   */\n      tag_420\n        /* \"#utility.yul\":8321:8325   */\n      dup2\n        /* \"#utility.yul\":8312:8318   */\n      dup9\n        /* \"#utility.yul\":8248:8326   */\n      tag_298\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":8240:8326   */\n      swap1\n      pop\n        /* \"#utility.yul\":8336:8408   */\n      tag_421\n        /* \"#utility.yul\":8404:8406   */\n      0x60\n        /* \"#utility.yul\":8393:8402   */\n      dup4\n        /* \"#utility.yul\":8389:8407   */\n      add\n        /* \"#utility.yul\":8380:8386   */\n      dup8\n        /* \"#utility.yul\":8336:8408   */\n      tag_311\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":8418:8491   */\n      tag_422\n        /* \"#utility.yul\":8486:8489   */\n      0x80\n        /* \"#utility.yul\":8475:8484   */\n      dup4\n        /* \"#utility.yul\":8471:8490   */\n      add\n        /* \"#utility.yul\":8462:8468   */\n      dup7\n        /* \"#utility.yul\":8418:8491   */\n      tag_318\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":8501:8574   */\n      tag_423\n        /* \"#utility.yul\":8569:8572   */\n      0xa0\n        /* \"#utility.yul\":8558:8567   */\n      dup4\n        /* \"#utility.yul\":8554:8573   */\n      add\n        /* \"#utility.yul\":8545:8551   */\n      dup6\n        /* \"#utility.yul\":8501:8574   */\n      tag_315\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":8622:8631   */\n      dup2\n        /* \"#utility.yul\":8616:8620   */\n      dup2\n        /* \"#utility.yul\":8612:8632   */\n      sub\n        /* \"#utility.yul\":8606:8609   */\n      0xc0\n        /* \"#utility.yul\":8595:8604   */\n      dup4\n        /* \"#utility.yul\":8591:8610   */\n      add\n        /* \"#utility.yul\":8584:8633   */\n      mstore\n        /* \"#utility.yul\":8650:8758   */\n      tag_424\n        /* \"#utility.yul\":8753:8757   */\n      dup2\n        /* \"#utility.yul\":8744:8750   */\n      dup5\n        /* \"#utility.yul\":8650:8758   */\n      tag_325\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":8642:8758   */\n      swap1\n      pop\n        /* \"#utility.yul\":7550:8765   */\n      swap9\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8771:8993   */\n    tag_71:\n        /* \"#utility.yul\":8864:8868   */\n      0x00\n        /* \"#utility.yul\":8902:8904   */\n      0x20\n        /* \"#utility.yul\":8891:8900   */\n      dup3\n        /* \"#utility.yul\":8887:8905   */\n      add\n        /* \"#utility.yul\":8879:8905   */\n      swap1\n      pop\n        /* \"#utility.yul\":8915:8986   */\n      tag_426\n        /* \"#utility.yul\":8983:8984   */\n      0x00\n        /* \"#utility.yul\":8972:8981   */\n      dup4\n        /* \"#utility.yul\":8968:8985   */\n      add\n        /* \"#utility.yul\":8959:8965   */\n      dup5\n        /* \"#utility.yul\":8915:8986   */\n      tag_318\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":8771:8993   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8999:9117   */\n    tag_326:\n        /* \"#utility.yul\":9070:9092   */\n      tag_428\n        /* \"#utility.yul\":9086:9091   */\n      dup2\n        /* \"#utility.yul\":9070:9092   */\n      tag_312\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":9063:9068   */\n      dup2\n        /* \"#utility.yul\":9060:9093   */\n      eq\n        /* \"#utility.yul\":9050:9111   */\n      tag_429\n      jumpi\n        /* \"#utility.yul\":9107:9108   */\n      0x00\n        /* \"#utility.yul\":9104:9105   */\n      dup1\n        /* \"#utility.yul\":9097:9109   */\n      revert\n        /* \"#utility.yul\":9050:9111   */\n    tag_429:\n        /* \"#utility.yul\":8999:9117   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9123:9258   */\n    tag_327:\n        /* \"#utility.yul\":9167:9172   */\n      0x00\n        /* \"#utility.yul\":9205:9211   */\n      dup2\n        /* \"#utility.yul\":9192:9212   */\n      calldataload\n        /* \"#utility.yul\":9183:9212   */\n      swap1\n      pop\n        /* \"#utility.yul\":9221:9252   */\n      tag_431\n        /* \"#utility.yul\":9246:9251   */\n      dup2\n        /* \"#utility.yul\":9221:9252   */\n      tag_326\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":9123:9258   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9264:9386   */\n    tag_328:\n        /* \"#utility.yul\":9337:9361   */\n      tag_433\n        /* \"#utility.yul\":9355:9360   */\n      dup2\n        /* \"#utility.yul\":9337:9361   */\n      tag_314\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":9330:9335   */\n      dup2\n        /* \"#utility.yul\":9327:9362   */\n      eq\n        /* \"#utility.yul\":9317:9380   */\n      tag_434\n      jumpi\n        /* \"#utility.yul\":9376:9377   */\n      0x00\n        /* \"#utility.yul\":9373:9374   */\n      dup1\n        /* \"#utility.yul\":9366:9378   */\n      revert\n        /* \"#utility.yul\":9317:9380   */\n    tag_434:\n        /* \"#utility.yul\":9264:9386   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9392:9531   */\n    tag_329:\n        /* \"#utility.yul\":9438:9443   */\n      0x00\n        /* \"#utility.yul\":9476:9482   */\n      dup2\n        /* \"#utility.yul\":9463:9483   */\n      calldataload\n        /* \"#utility.yul\":9454:9483   */\n      swap1\n      pop\n        /* \"#utility.yul\":9492:9525   */\n      tag_436\n        /* \"#utility.yul\":9519:9524   */\n      dup2\n        /* \"#utility.yul\":9492:9525   */\n      tag_328\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":9392:9531   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9537:10736   */\n    tag_81:\n        /* \"#utility.yul\":9648:9654   */\n      0x00\n        /* \"#utility.yul\":9656:9662   */\n      dup1\n        /* \"#utility.yul\":9664:9670   */\n      0x00\n        /* \"#utility.yul\":9672:9678   */\n      dup1\n        /* \"#utility.yul\":9680:9686   */\n      0x00\n        /* \"#utility.yul\":9688:9694   */\n      dup1\n        /* \"#utility.yul\":9696:9702   */\n      0x00\n        /* \"#utility.yul\":9745:9748   */\n      0xe0\n        /* \"#utility.yul\":9733:9742   */\n      dup9\n        /* \"#utility.yul\":9724:9731   */\n      dup11\n        /* \"#utility.yul\":9720:9743   */\n      sub\n        /* \"#utility.yul\":9716:9749   */\n      slt\n        /* \"#utility.yul\":9713:9833   */\n      iszero\n      tag_438\n      jumpi\n        /* \"#utility.yul\":9752:9831   */\n      tag_439\n      tag_300\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":9713:9833   */\n    tag_438:\n        /* \"#utility.yul\":9872:9873   */\n      0x00\n        /* \"#utility.yul\":9897:9950   */\n      tag_440\n        /* \"#utility.yul\":9942:9949   */\n      dup11\n        /* \"#utility.yul\":9933:9939   */\n      dup3\n        /* \"#utility.yul\":9922:9931   */\n      dup12\n        /* \"#utility.yul\":9918:9940   */\n      add\n        /* \"#utility.yul\":9897:9950   */\n      tag_305\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":9887:9950   */\n      swap8\n      pop\n        /* \"#utility.yul\":9843:9960   */\n      pop\n        /* \"#utility.yul\":9999:10001   */\n      0x20\n        /* \"#utility.yul\":10025:10078   */\n      tag_441\n        /* \"#utility.yul\":10070:10077   */\n      dup11\n        /* \"#utility.yul\":10061:10067   */\n      dup3\n        /* \"#utility.yul\":10050:10059   */\n      dup12\n        /* \"#utility.yul\":10046:10068   */\n      add\n        /* \"#utility.yul\":10025:10078   */\n      tag_305\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":10015:10078   */\n      swap7\n      pop\n        /* \"#utility.yul\":9970:10088   */\n      pop\n        /* \"#utility.yul\":10127:10129   */\n      0x40\n        /* \"#utility.yul\":10153:10206   */\n      tag_442\n        /* \"#utility.yul\":10198:10205   */\n      dup11\n        /* \"#utility.yul\":10189:10195   */\n      dup3\n        /* \"#utility.yul\":10178:10187   */\n      dup12\n        /* \"#utility.yul\":10174:10196   */\n      add\n        /* \"#utility.yul\":10153:10206   */\n      tag_308\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":10143:10206   */\n      swap6\n      pop\n        /* \"#utility.yul\":10098:10216   */\n      pop\n        /* \"#utility.yul\":10255:10257   */\n      0x60\n        /* \"#utility.yul\":10281:10334   */\n      tag_443\n        /* \"#utility.yul\":10326:10333   */\n      dup11\n        /* \"#utility.yul\":10317:10323   */\n      dup3\n        /* \"#utility.yul\":10306:10315   */\n      dup12\n        /* \"#utility.yul\":10302:10324   */\n      add\n        /* \"#utility.yul\":10281:10334   */\n      tag_308\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":10271:10334   */\n      swap5\n      pop\n        /* \"#utility.yul\":10226:10344   */\n      pop\n        /* \"#utility.yul\":10383:10386   */\n      0x80\n        /* \"#utility.yul\":10410:10461   */\n      tag_444\n        /* \"#utility.yul\":10453:10460   */\n      dup11\n        /* \"#utility.yul\":10444:10450   */\n      dup3\n        /* \"#utility.yul\":10433:10442   */\n      dup12\n        /* \"#utility.yul\":10429:10451   */\n      add\n        /* \"#utility.yul\":10410:10461   */\n      tag_327\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":10400:10461   */\n      swap4\n      pop\n        /* \"#utility.yul\":10354:10471   */\n      pop\n        /* \"#utility.yul\":10510:10513   */\n      0xa0\n        /* \"#utility.yul\":10537:10590   */\n      tag_445\n        /* \"#utility.yul\":10582:10589   */\n      dup11\n        /* \"#utility.yul\":10573:10579   */\n      dup3\n        /* \"#utility.yul\":10562:10571   */\n      dup12\n        /* \"#utility.yul\":10558:10580   */\n      add\n        /* \"#utility.yul\":10537:10590   */\n      tag_329\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":10527:10590   */\n      swap3\n      pop\n        /* \"#utility.yul\":10481:10600   */\n      pop\n        /* \"#utility.yul\":10639:10642   */\n      0xc0\n        /* \"#utility.yul\":10666:10719   */\n      tag_446\n        /* \"#utility.yul\":10711:10718   */\n      dup11\n        /* \"#utility.yul\":10702:10708   */\n      dup3\n        /* \"#utility.yul\":10691:10700   */\n      dup12\n        /* \"#utility.yul\":10687:10709   */\n      add\n        /* \"#utility.yul\":10666:10719   */\n      tag_329\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":10656:10719   */\n      swap2\n      pop\n        /* \"#utility.yul\":10610:10729   */\n      pop\n        /* \"#utility.yul\":9537:10736   */\n      swap3\n      swap6\n      swap9\n      swap2\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10742:11216   */\n    tag_85:\n        /* \"#utility.yul\":10810:10816   */\n      0x00\n        /* \"#utility.yul\":10818:10824   */\n      dup1\n        /* \"#utility.yul\":10867:10869   */\n      0x40\n        /* \"#utility.yul\":10855:10864   */\n      dup4\n        /* \"#utility.yul\":10846:10853   */\n      dup6\n        /* \"#utility.yul\":10842:10865   */\n      sub\n        /* \"#utility.yul\":10838:10870   */\n      slt\n        /* \"#utility.yul\":10835:10954   */\n      iszero\n      tag_448\n      jumpi\n        /* \"#utility.yul\":10873:10952   */\n      tag_449\n      tag_300\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":10835:10954   */\n    tag_448:\n        /* \"#utility.yul\":10993:10994   */\n      0x00\n        /* \"#utility.yul\":11018:11071   */\n      tag_450\n        /* \"#utility.yul\":11063:11070   */\n      dup6\n        /* \"#utility.yul\":11054:11060   */\n      dup3\n        /* \"#utility.yul\":11043:11052   */\n      dup7\n        /* \"#utility.yul\":11039:11061   */\n      add\n        /* \"#utility.yul\":11018:11071   */\n      tag_305\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":11008:11071   */\n      swap3\n      pop\n        /* \"#utility.yul\":10964:11081   */\n      pop\n        /* \"#utility.yul\":11120:11122   */\n      0x20\n        /* \"#utility.yul\":11146:11199   */\n      tag_451\n        /* \"#utility.yul\":11191:11198   */\n      dup6\n        /* \"#utility.yul\":11182:11188   */\n      dup3\n        /* \"#utility.yul\":11171:11180   */\n      dup7\n        /* \"#utility.yul\":11167:11189   */\n      add\n        /* \"#utility.yul\":11146:11199   */\n      tag_305\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":11136:11199   */\n      swap2\n      pop\n        /* \"#utility.yul\":11091:11209   */\n      pop\n        /* \"#utility.yul\":10742:11216   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11222:11402   */\n    tag_330:\n        /* \"#utility.yul\":11270:11347   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11267:11268   */\n      0x00\n        /* \"#utility.yul\":11260:11348   */\n      mstore\n        /* \"#utility.yul\":11367:11371   */\n      0x22\n        /* \"#utility.yul\":11364:11365   */\n      0x04\n        /* \"#utility.yul\":11357:11372   */\n      mstore\n        /* \"#utility.yul\":11391:11395   */\n      0x24\n        /* \"#utility.yul\":11388:11389   */\n      0x00\n        /* \"#utility.yul\":11381:11396   */\n      revert\n        /* \"#utility.yul\":11408:11728   */\n    tag_93:\n        /* \"#utility.yul\":11452:11458   */\n      0x00\n        /* \"#utility.yul\":11489:11490   */\n      0x02\n        /* \"#utility.yul\":11483:11487   */\n      dup3\n        /* \"#utility.yul\":11479:11491   */\n      div\n        /* \"#utility.yul\":11469:11491   */\n      swap1\n      pop\n        /* \"#utility.yul\":11536:11537   */\n      0x01\n        /* \"#utility.yul\":11530:11534   */\n      dup3\n        /* \"#utility.yul\":11526:11538   */\n      and\n        /* \"#utility.yul\":11557:11575   */\n      dup1\n        /* \"#utility.yul\":11547:11628   */\n      tag_454\n      jumpi\n        /* \"#utility.yul\":11613:11617   */\n      0x7f\n        /* \"#utility.yul\":11605:11611   */\n      dup3\n        /* \"#utility.yul\":11601:11618   */\n      and\n        /* \"#utility.yul\":11591:11618   */\n      swap2\n      pop\n        /* \"#utility.yul\":11547:11628   */\n    tag_454:\n        /* \"#utility.yul\":11675:11677   */\n      0x20\n        /* \"#utility.yul\":11667:11673   */\n      dup3\n        /* \"#utility.yul\":11664:11678   */\n      lt\n        /* \"#utility.yul\":11644:11662   */\n      dup2\n        /* \"#utility.yul\":11641:11679   */\n      sub\n        /* \"#utility.yul\":11638:11722   */\n      tag_455\n      jumpi\n        /* \"#utility.yul\":11694:11712   */\n      tag_456\n      tag_330\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":11638:11722   */\n    tag_455:\n        /* \"#utility.yul\":11459:11728   */\n      pop\n        /* \"#utility.yul\":11408:11728   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11734:11914   */\n    tag_136:\n        /* \"#utility.yul\":11782:11859   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11779:11780   */\n      0x00\n        /* \"#utility.yul\":11772:11860   */\n      mstore\n        /* \"#utility.yul\":11879:11883   */\n      0x41\n        /* \"#utility.yul\":11876:11877   */\n      0x04\n        /* \"#utility.yul\":11869:11884   */\n      mstore\n        /* \"#utility.yul\":11903:11907   */\n      0x24\n        /* \"#utility.yul\":11900:11901   */\n      0x00\n        /* \"#utility.yul\":11893:11908   */\n      revert\n        /* \"#utility.yul\":11920:12695   */\n    tag_154:\n        /* \"#utility.yul\":12153:12157   */\n      0x00\n        /* \"#utility.yul\":12191:12194   */\n      0xc0\n        /* \"#utility.yul\":12180:12189   */\n      dup3\n        /* \"#utility.yul\":12176:12195   */\n      add\n        /* \"#utility.yul\":12168:12195   */\n      swap1\n      pop\n        /* \"#utility.yul\":12205:12276   */\n      tag_459\n        /* \"#utility.yul\":12273:12274   */\n      0x00\n        /* \"#utility.yul\":12262:12271   */\n      dup4\n        /* \"#utility.yul\":12258:12275   */\n      add\n        /* \"#utility.yul\":12249:12255   */\n      dup10\n        /* \"#utility.yul\":12205:12276   */\n      tag_315\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":12286:12358   */\n      tag_460\n        /* \"#utility.yul\":12354:12356   */\n      0x20\n        /* \"#utility.yul\":12343:12352   */\n      dup4\n        /* \"#utility.yul\":12339:12357   */\n      add\n        /* \"#utility.yul\":12330:12336   */\n      dup9\n        /* \"#utility.yul\":12286:12358   */\n      tag_318\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":12368:12440   */\n      tag_461\n        /* \"#utility.yul\":12436:12438   */\n      0x40\n        /* \"#utility.yul\":12425:12434   */\n      dup4\n        /* \"#utility.yul\":12421:12439   */\n      add\n        /* \"#utility.yul\":12412:12418   */\n      dup8\n        /* \"#utility.yul\":12368:12440   */\n      tag_318\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":12450:12522   */\n      tag_462\n        /* \"#utility.yul\":12518:12520   */\n      0x60\n        /* \"#utility.yul\":12507:12516   */\n      dup4\n        /* \"#utility.yul\":12503:12521   */\n      add\n        /* \"#utility.yul\":12494:12500   */\n      dup7\n        /* \"#utility.yul\":12450:12522   */\n      tag_311\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":12532:12605   */\n      tag_463\n        /* \"#utility.yul\":12600:12603   */\n      0x80\n        /* \"#utility.yul\":12589:12598   */\n      dup4\n        /* \"#utility.yul\":12585:12604   */\n      add\n        /* \"#utility.yul\":12576:12582   */\n      dup6\n        /* \"#utility.yul\":12532:12605   */\n      tag_311\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":12615:12688   */\n      tag_464\n        /* \"#utility.yul\":12683:12686   */\n      0xa0\n        /* \"#utility.yul\":12672:12681   */\n      dup4\n        /* \"#utility.yul\":12668:12687   */\n      add\n        /* \"#utility.yul\":12659:12665   */\n      dup5\n        /* \"#utility.yul\":12615:12688   */\n      tag_311\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":11920:12695   */\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12701:13033   */\n    tag_161:\n        /* \"#utility.yul\":12822:12826   */\n      0x00\n        /* \"#utility.yul\":12860:12862   */\n      0x40\n        /* \"#utility.yul\":12849:12858   */\n      dup3\n        /* \"#utility.yul\":12845:12863   */\n      add\n        /* \"#utility.yul\":12837:12863   */\n      swap1\n      pop\n        /* \"#utility.yul\":12873:12944   */\n      tag_466\n        /* \"#utility.yul\":12941:12942   */\n      0x00\n        /* \"#utility.yul\":12930:12939   */\n      dup4\n        /* \"#utility.yul\":12926:12943   */\n      add\n        /* \"#utility.yul\":12917:12923   */\n      dup6\n        /* \"#utility.yul\":12873:12944   */\n      tag_318\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":12954:13026   */\n      tag_467\n        /* \"#utility.yul\":13022:13024   */\n      0x20\n        /* \"#utility.yul\":13011:13020   */\n      dup4\n        /* \"#utility.yul\":13007:13025   */\n      add\n        /* \"#utility.yul\":12998:13004   */\n      dup5\n        /* \"#utility.yul\":12954:13026   */\n      tag_318\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":12701:13033   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13039:13481   */\n    tag_179:\n        /* \"#utility.yul\":13188:13192   */\n      0x00\n        /* \"#utility.yul\":13226:13228   */\n      0x60\n        /* \"#utility.yul\":13215:13224   */\n      dup3\n        /* \"#utility.yul\":13211:13229   */\n      add\n        /* \"#utility.yul\":13203:13229   */\n      swap1\n      pop\n        /* \"#utility.yul\":13239:13310   */\n      tag_469\n        /* \"#utility.yul\":13307:13308   */\n      0x00\n        /* \"#utility.yul\":13296:13305   */\n      dup4\n        /* \"#utility.yul\":13292:13309   */\n      add\n        /* \"#utility.yul\":13283:13289   */\n      dup7\n        /* \"#utility.yul\":13239:13310   */\n      tag_318\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":13320:13392   */\n      tag_470\n        /* \"#utility.yul\":13388:13390   */\n      0x20\n        /* \"#utility.yul\":13377:13386   */\n      dup4\n        /* \"#utility.yul\":13373:13391   */\n      add\n        /* \"#utility.yul\":13364:13370   */\n      dup6\n        /* \"#utility.yul\":13320:13392   */\n      tag_311\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":13402:13474   */\n      tag_471\n        /* \"#utility.yul\":13470:13472   */\n      0x40\n        /* \"#utility.yul\":13459:13468   */\n      dup4\n        /* \"#utility.yul\":13455:13473   */\n      add\n        /* \"#utility.yul\":13446:13452   */\n      dup5\n        /* \"#utility.yul\":13402:13474   */\n      tag_311\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":13039:13481   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13487:13667   */\n    tag_331:\n        /* \"#utility.yul\":13535:13612   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13532:13533   */\n      0x00\n        /* \"#utility.yul\":13525:13613   */\n      mstore\n        /* \"#utility.yul\":13632:13636   */\n      0x11\n        /* \"#utility.yul\":13629:13630   */\n      0x04\n        /* \"#utility.yul\":13622:13637   */\n      mstore\n        /* \"#utility.yul\":13656:13660   */\n      0x24\n        /* \"#utility.yul\":13653:13654   */\n      0x00\n        /* \"#utility.yul\":13646:13661   */\n      revert\n        /* \"#utility.yul\":13673:13864   */\n    tag_231:\n        /* \"#utility.yul\":13713:13716   */\n      0x00\n        /* \"#utility.yul\":13732:13752   */\n      tag_474\n        /* \"#utility.yul\":13750:13751   */\n      dup3\n        /* \"#utility.yul\":13732:13752   */\n      tag_306\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":13727:13752   */\n      swap2\n      pop\n        /* \"#utility.yul\":13766:13786   */\n      tag_475\n        /* \"#utility.yul\":13784:13785   */\n      dup4\n        /* \"#utility.yul\":13766:13786   */\n      tag_306\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":13761:13786   */\n      swap3\n      pop\n        /* \"#utility.yul\":13809:13810   */\n      dup3\n        /* \"#utility.yul\":13806:13807   */\n      dup3\n        /* \"#utility.yul\":13802:13811   */\n      add\n        /* \"#utility.yul\":13795:13811   */\n      swap1\n      pop\n        /* \"#utility.yul\":13830:13833   */\n      dup1\n        /* \"#utility.yul\":13827:13828   */\n      dup3\n        /* \"#utility.yul\":13824:13834   */\n      gt\n        /* \"#utility.yul\":13821:13857   */\n      iszero\n      tag_476\n      jumpi\n        /* \"#utility.yul\":13837:13855   */\n      tag_477\n      tag_331\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":13821:13857   */\n    tag_476:\n        /* \"#utility.yul\":13673:13864   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13870:14534   */\n    tag_240:\n        /* \"#utility.yul\":14075:14079   */\n      0x00\n        /* \"#utility.yul\":14113:14116   */\n      0xa0\n        /* \"#utility.yul\":14102:14111   */\n      dup3\n        /* \"#utility.yul\":14098:14117   */\n      add\n        /* \"#utility.yul\":14090:14117   */\n      swap1\n      pop\n        /* \"#utility.yul\":14127:14198   */\n      tag_479\n        /* \"#utility.yul\":14195:14196   */\n      0x00\n        /* \"#utility.yul\":14184:14193   */\n      dup4\n        /* \"#utility.yul\":14180:14197   */\n      add\n        /* \"#utility.yul\":14171:14177   */\n      dup9\n        /* \"#utility.yul\":14127:14198   */\n      tag_315\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":14208:14280   */\n      tag_480\n        /* \"#utility.yul\":14276:14278   */\n      0x20\n        /* \"#utility.yul\":14265:14274   */\n      dup4\n        /* \"#utility.yul\":14261:14279   */\n      add\n        /* \"#utility.yul\":14252:14258   */\n      dup8\n        /* \"#utility.yul\":14208:14280   */\n      tag_315\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":14290:14362   */\n      tag_481\n        /* \"#utility.yul\":14358:14360   */\n      0x40\n        /* \"#utility.yul\":14347:14356   */\n      dup4\n        /* \"#utility.yul\":14343:14361   */\n      add\n        /* \"#utility.yul\":14334:14340   */\n      dup7\n        /* \"#utility.yul\":14290:14362   */\n      tag_315\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":14372:14444   */\n      tag_482\n        /* \"#utility.yul\":14440:14442   */\n      0x60\n        /* \"#utility.yul\":14429:14438   */\n      dup4\n        /* \"#utility.yul\":14425:14443   */\n      add\n        /* \"#utility.yul\":14416:14422   */\n      dup6\n        /* \"#utility.yul\":14372:14444   */\n      tag_311\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":14454:14527   */\n      tag_483\n        /* \"#utility.yul\":14522:14525   */\n      0x80\n        /* \"#utility.yul\":14511:14520   */\n      dup4\n        /* \"#utility.yul\":14507:14526   */\n      add\n        /* \"#utility.yul\":14498:14504   */\n      dup5\n        /* \"#utility.yul\":14454:14527   */\n      tag_318\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":13870:14534   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14540:15085   */\n    tag_255:\n        /* \"#utility.yul\":14713:14717   */\n      0x00\n        /* \"#utility.yul\":14751:14754   */\n      0x80\n        /* \"#utility.yul\":14740:14749   */\n      dup3\n        /* \"#utility.yul\":14736:14755   */\n      add\n        /* \"#utility.yul\":14728:14755   */\n      swap1\n      pop\n        /* \"#utility.yul\":14765:14836   */\n      tag_485\n        /* \"#utility.yul\":14833:14834   */\n      0x00\n        /* \"#utility.yul\":14822:14831   */\n      dup4\n        /* \"#utility.yul\":14818:14835   */\n      add\n        /* \"#utility.yul\":14809:14815   */\n      dup8\n        /* \"#utility.yul\":14765:14836   */\n      tag_315\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":14846:14914   */\n      tag_486\n        /* \"#utility.yul\":14910:14912   */\n      0x20\n        /* \"#utility.yul\":14899:14908   */\n      dup4\n        /* \"#utility.yul\":14895:14913   */\n      add\n        /* \"#utility.yul\":14886:14892   */\n      dup7\n        /* \"#utility.yul\":14846:14914   */\n      tag_313\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":14924:14996   */\n      tag_487\n        /* \"#utility.yul\":14992:14994   */\n      0x40\n        /* \"#utility.yul\":14981:14990   */\n      dup4\n        /* \"#utility.yul\":14977:14995   */\n      add\n        /* \"#utility.yul\":14968:14974   */\n      dup6\n        /* \"#utility.yul\":14924:14996   */\n      tag_315\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":15006:15078   */\n      tag_488\n        /* \"#utility.yul\":15074:15076   */\n      0x60\n        /* \"#utility.yul\":15063:15072   */\n      dup4\n        /* \"#utility.yul\":15059:15077   */\n      add\n        /* \"#utility.yul\":15050:15056   */\n      dup5\n        /* \"#utility.yul\":15006:15078   */\n      tag_315\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":14540:15085   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15091:15271   */\n    tag_262:\n        /* \"#utility.yul\":15139:15216   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15136:15137   */\n      0x00\n        /* \"#utility.yul\":15129:15217   */\n      mstore\n        /* \"#utility.yul\":15236:15240   */\n      0x21\n        /* \"#utility.yul\":15233:15234   */\n      0x04\n        /* \"#utility.yul\":15226:15241   */\n      mstore\n        /* \"#utility.yul\":15260:15264   */\n      0x24\n        /* \"#utility.yul\":15257:15258   */\n      0x00\n        /* \"#utility.yul\":15250:15265   */\n      revert\n\n    auxdata: 0xa26469706673582212206de2e20912dca0d813af96bcecfbb007a1153c71d7f757426bd99304dea4325764736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_308": {
									"entryPoint": null,
									"id": 308,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_3212": {
									"entryPoint": null,
									"id": 3212,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_3447": {
									"entryPoint": null,
									"id": 3447,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_3587": {
									"entryPoint": null,
									"id": 3587,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_819": {
									"entryPoint": null,
									"id": 819,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_buildDomainSeparator_3259": {
									"entryPoint": 933,
									"id": 3259,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_mint_611": {
									"entryPoint": 1031,
									"id": 611,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_915": {
									"entryPoint": 661,
									"id": 915,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_578": {
									"entryPoint": 1274,
									"id": 578,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_335": {
									"entryPoint": 1023,
									"id": 335,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getStringSlot_2862": {
									"entryPoint": 1265,
									"id": 2862,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toShortStringWithFallback_3040": {
									"entryPoint": 856,
									"id": 3040,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toShortString_2942": {
									"entryPoint": 1164,
									"id": 2942,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1885,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 1905,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2725,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 3273,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3430,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3288,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2740,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3716,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 3303,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3486,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3769,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_bytes_memory_ptr": {
									"entryPoint": 3528,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 2096,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 3518,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1948,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3384,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3665,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 2822,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 3125,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 2904,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3199,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2381,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1846,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 3264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1815,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2222,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3113,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2347,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32": {
									"entryPoint": 3563,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2518,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3400,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 2114,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2048,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2491,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2231,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2463,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2765,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 2003,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1958,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2273,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"read_from_memoryt_bytes32": {
									"entryPoint": 3543,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1811,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3414,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 2129,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 2810,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2451,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2323,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 2141,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2282,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1863,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2319,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13790:1",
										"nodeType": "YulBlock",
										"src": "0:13790:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "379:81:1",
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nativeSrc": "389:65:1",
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:1",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nativeSrc": "400:54:1",
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:1",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:1",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nativeSrc": "511:51:1",
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nativeSrc": "521:35:1",
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nativeSrc": "532:24:1",
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:1",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:1",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nativeSrc": "611:79:1",
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:1",
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:1",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:1",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nativeSrc": "670:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nativeSrc": "670:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nativeSrc": "641:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nativeSrc": "631:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nativeSrc": "624:43:1",
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nativeSrc": "621:63:1",
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:1",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nativeSrc": "759:80:1",
													"nodeType": "YulBlock",
													"src": "759:80:1",
													"statements": [
														{
															"nativeSrc": "769:22:1",
															"nodeType": "YulAssignment",
															"src": "769:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:1"
																},
																"nativeSrc": "778:13:1",
																"nodeType": "YulFunctionCall",
																"src": "778:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:1"
																},
																"nativeSrc": "800:33:1",
																"nodeType": "YulFunctionCall",
																"src": "800:33:1"
															},
															"nativeSrc": "800:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:1",
														"nodeType": "YulTypedName",
														"src": "737:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:1",
														"nodeType": "YulTypedName",
														"src": "745:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:1",
														"nodeType": "YulTypedName",
														"src": "753:5:1",
														"type": ""
													}
												],
												"src": "696:143:1"
											},
											{
												"body": {
													"nativeSrc": "922:274:1",
													"nodeType": "YulBlock",
													"src": "922:274:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:1",
																"nodeType": "YulBlock",
																"src": "968:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:1"
																			},
																			"nativeSrc": "970:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:1"
																		},
																		"nativeSrc": "970:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:1"
																		},
																		"nativeSrc": "939:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:1",
																		"nodeType": "YulLiteral",
																		"src": "964:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:1"
																},
																"nativeSrc": "935:32:1",
																"nodeType": "YulFunctionCall",
																"src": "935:32:1"
															},
															"nativeSrc": "932:119:1",
															"nodeType": "YulIf",
															"src": "932:119:1"
														},
														{
															"nativeSrc": "1061:128:1",
															"nodeType": "YulBlock",
															"src": "1061:128:1",
															"statements": [
																{
																	"nativeSrc": "1076:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:1",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:1"
																				},
																				"nativeSrc": "1147:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:1",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:1"
																		},
																		"nativeSrc": "1115:64:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:1",
														"nodeType": "YulTypedName",
														"src": "892:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:1",
														"nodeType": "YulTypedName",
														"src": "903:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:1",
														"nodeType": "YulTypedName",
														"src": "915:6:1",
														"type": ""
													}
												],
												"src": "845:351:1"
											},
											{
												"body": {
													"nativeSrc": "1261:40:1",
													"nodeType": "YulBlock",
													"src": "1261:40:1",
													"statements": [
														{
															"nativeSrc": "1272:22:1",
															"nodeType": "YulAssignment",
															"src": "1272:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1288:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1288:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1282:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1282:5:1"
																},
																"nativeSrc": "1282:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1282:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1272:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1202:99:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1244:5:1",
														"nodeType": "YulTypedName",
														"src": "1244:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1254:6:1",
														"nodeType": "YulTypedName",
														"src": "1254:6:1",
														"type": ""
													}
												],
												"src": "1202:99:1"
											},
											{
												"body": {
													"nativeSrc": "1335:152:1",
													"nodeType": "YulBlock",
													"src": "1335:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1352:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1352:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1355:77:1",
																		"nodeType": "YulLiteral",
																		"src": "1355:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1345:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1345:6:1"
																},
																"nativeSrc": "1345:88:1",
																"nodeType": "YulFunctionCall",
																"src": "1345:88:1"
															},
															"nativeSrc": "1345:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "1345:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1449:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1449:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1452:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1452:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1442:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:1"
																},
																"nativeSrc": "1442:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1442:15:1"
															},
															"nativeSrc": "1442:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1442:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1473:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1473:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1476:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1476:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1466:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1466:6:1"
																},
																"nativeSrc": "1466:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1466:15:1"
															},
															"nativeSrc": "1466:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1466:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1307:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1307:180:1"
											},
											{
												"body": {
													"nativeSrc": "1521:152:1",
													"nodeType": "YulBlock",
													"src": "1521:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1538:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1538:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1541:77:1",
																		"nodeType": "YulLiteral",
																		"src": "1541:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1531:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:1"
																},
																"nativeSrc": "1531:88:1",
																"nodeType": "YulFunctionCall",
																"src": "1531:88:1"
															},
															"nativeSrc": "1531:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "1531:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1635:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1635:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1638:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1638:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1628:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1628:6:1"
																},
																"nativeSrc": "1628:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1628:15:1"
															},
															"nativeSrc": "1628:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1628:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1662:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:1"
																},
																"nativeSrc": "1652:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1652:15:1"
															},
															"nativeSrc": "1652:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1652:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1493:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1493:180:1"
											},
											{
												"body": {
													"nativeSrc": "1730:269:1",
													"nodeType": "YulBlock",
													"src": "1730:269:1",
													"statements": [
														{
															"nativeSrc": "1740:22:1",
															"nodeType": "YulAssignment",
															"src": "1740:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1754:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1754:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1760:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1760:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1750:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1750:3:1"
																},
																"nativeSrc": "1750:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1750:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1740:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1740:6:1"
																}
															]
														},
														{
															"nativeSrc": "1771:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1771:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1801:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1801:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1807:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1807:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1797:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1797:3:1"
																},
																"nativeSrc": "1797:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1797:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1775:18:1",
																	"nodeType": "YulTypedName",
																	"src": "1775:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1848:51:1",
																"nodeType": "YulBlock",
																"src": "1848:51:1",
																"statements": [
																	{
																		"nativeSrc": "1862:27:1",
																		"nodeType": "YulAssignment",
																		"src": "1862:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1876:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "1876:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1884:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1884:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1872:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1872:3:1"
																			},
																			"nativeSrc": "1872:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1872:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1862:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1862:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1828:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "1828:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1821:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1821:6:1"
																},
																"nativeSrc": "1821:26:1",
																"nodeType": "YulFunctionCall",
																"src": "1821:26:1"
															},
															"nativeSrc": "1818:81:1",
															"nodeType": "YulIf",
															"src": "1818:81:1"
														},
														{
															"body": {
																"nativeSrc": "1951:42:1",
																"nodeType": "YulBlock",
																"src": "1951:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "1965:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "1965:16:1"
																			},
																			"nativeSrc": "1965:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1965:18:1"
																		},
																		"nativeSrc": "1965:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1965:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1915:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "1915:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1938:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1938:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1946:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1946:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1935:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1935:2:1"
																		},
																		"nativeSrc": "1935:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1935:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1912:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1912:2:1"
																},
																"nativeSrc": "1912:38:1",
																"nodeType": "YulFunctionCall",
																"src": "1912:38:1"
															},
															"nativeSrc": "1909:84:1",
															"nodeType": "YulIf",
															"src": "1909:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1679:320:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1714:4:1",
														"nodeType": "YulTypedName",
														"src": "1714:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1723:6:1",
														"nodeType": "YulTypedName",
														"src": "1723:6:1",
														"type": ""
													}
												],
												"src": "1679:320:1"
											},
											{
												"body": {
													"nativeSrc": "2059:87:1",
													"nodeType": "YulBlock",
													"src": "2059:87:1",
													"statements": [
														{
															"nativeSrc": "2069:11:1",
															"nodeType": "YulAssignment",
															"src": "2069:11:1",
															"value": {
																"name": "ptr",
																"nativeSrc": "2077:3:1",
																"nodeType": "YulIdentifier",
																"src": "2077:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2069:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2069:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2097:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2097:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2100:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2100:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2090:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:1"
																},
																"nativeSrc": "2090:14:1",
																"nodeType": "YulFunctionCall",
																"src": "2090:14:1"
															},
															"nativeSrc": "2090:14:1",
															"nodeType": "YulExpressionStatement",
															"src": "2090:14:1"
														},
														{
															"nativeSrc": "2113:26:1",
															"nodeType": "YulAssignment",
															"src": "2113:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2131:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2131:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2134:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2134:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2121:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "2121:9:1"
																},
																"nativeSrc": "2121:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2121:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2113:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2113:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2005:141:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2046:3:1",
														"nodeType": "YulTypedName",
														"src": "2046:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2054:4:1",
														"nodeType": "YulTypedName",
														"src": "2054:4:1",
														"type": ""
													}
												],
												"src": "2005:141:1"
											},
											{
												"body": {
													"nativeSrc": "2196:49:1",
													"nodeType": "YulBlock",
													"src": "2196:49:1",
													"statements": [
														{
															"nativeSrc": "2206:33:1",
															"nodeType": "YulAssignment",
															"src": "2206:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2224:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2224:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2231:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2231:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2220:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2220:3:1"
																		},
																		"nativeSrc": "2220:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2220:14:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2236:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2216:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2216:3:1"
																},
																"nativeSrc": "2216:23:1",
																"nodeType": "YulFunctionCall",
																"src": "2216:23:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2206:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2206:6:1"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2152:93:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2179:5:1",
														"nodeType": "YulTypedName",
														"src": "2179:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2189:6:1",
														"nodeType": "YulTypedName",
														"src": "2189:6:1",
														"type": ""
													}
												],
												"src": "2152:93:1"
											},
											{
												"body": {
													"nativeSrc": "2304:54:1",
													"nodeType": "YulBlock",
													"src": "2304:54:1",
													"statements": [
														{
															"nativeSrc": "2314:37:1",
															"nodeType": "YulAssignment",
															"src": "2314:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2339:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2339:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2345:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2345:5:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2335:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2335:3:1"
																},
																"nativeSrc": "2335:16:1",
																"nodeType": "YulFunctionCall",
																"src": "2335:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2314:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "2314:8:1"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2251:107:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2279:4:1",
														"nodeType": "YulTypedName",
														"src": "2279:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2285:5:1",
														"nodeType": "YulTypedName",
														"src": "2285:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2295:8:1",
														"nodeType": "YulTypedName",
														"src": "2295:8:1",
														"type": ""
													}
												],
												"src": "2251:107:1"
											},
											{
												"body": {
													"nativeSrc": "2440:317:1",
													"nodeType": "YulBlock",
													"src": "2440:317:1",
													"statements": [
														{
															"nativeSrc": "2450:35:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2450:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2471:10:1",
																		"nodeType": "YulIdentifier",
																		"src": "2471:10:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2483:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2483:1:1",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2467:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2467:3:1"
																},
																"nativeSrc": "2467:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2467:18:1"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2454:9:1",
																	"nodeType": "YulTypedName",
																	"src": "2454:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2494:109:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2494:109:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2525:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2525:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2536:66:1",
																		"nodeType": "YulLiteral",
																		"src": "2536:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2506:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2506:18:1"
																},
																"nativeSrc": "2506:97:1",
																"nodeType": "YulFunctionCall",
																"src": "2506:97:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2498:4:1",
																	"nodeType": "YulTypedName",
																	"src": "2498:4:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2612:51:1",
															"nodeType": "YulAssignment",
															"src": "2612:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2643:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2643:9:1"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2654:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "2654:8:1"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2624:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2624:18:1"
																},
																"nativeSrc": "2624:39:1",
																"nodeType": "YulFunctionCall",
																"src": "2624:39:1"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2612:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "2612:8:1"
																}
															]
														},
														{
															"nativeSrc": "2672:30:1",
															"nodeType": "YulAssignment",
															"src": "2672:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2685:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2685:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2696:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "2696:4:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2692:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2692:3:1"
																		},
																		"nativeSrc": "2692:9:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2692:9:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2681:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2681:3:1"
																},
																"nativeSrc": "2681:21:1",
																"nodeType": "YulFunctionCall",
																"src": "2681:21:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2672:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2672:5:1"
																}
															]
														},
														{
															"nativeSrc": "2711:40:1",
															"nodeType": "YulAssignment",
															"src": "2711:40:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2724:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2724:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2735:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "2735:8:1"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2745:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "2745:4:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2731:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:1"
																		},
																		"nativeSrc": "2731:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:19:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2721:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2721:2:1"
																},
																"nativeSrc": "2721:30:1",
																"nodeType": "YulFunctionCall",
																"src": "2721:30:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2711:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2711:6:1"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2364:393:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2401:5:1",
														"nodeType": "YulTypedName",
														"src": "2401:5:1",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2408:10:1",
														"nodeType": "YulTypedName",
														"src": "2408:10:1",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2420:8:1",
														"nodeType": "YulTypedName",
														"src": "2420:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2433:6:1",
														"nodeType": "YulTypedName",
														"src": "2433:6:1",
														"type": ""
													}
												],
												"src": "2364:393:1"
											},
											{
												"body": {
													"nativeSrc": "2808:32:1",
													"nodeType": "YulBlock",
													"src": "2808:32:1",
													"statements": [
														{
															"nativeSrc": "2818:16:1",
															"nodeType": "YulAssignment",
															"src": "2818:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "2829:5:1",
																"nodeType": "YulIdentifier",
																"src": "2829:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2818:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "2818:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2763:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2790:5:1",
														"nodeType": "YulTypedName",
														"src": "2790:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2800:7:1",
														"nodeType": "YulTypedName",
														"src": "2800:7:1",
														"type": ""
													}
												],
												"src": "2763:77:1"
											},
											{
												"body": {
													"nativeSrc": "2878:28:1",
													"nodeType": "YulBlock",
													"src": "2878:28:1",
													"statements": [
														{
															"nativeSrc": "2888:12:1",
															"nodeType": "YulAssignment",
															"src": "2888:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "2895:5:1",
																"nodeType": "YulIdentifier",
																"src": "2895:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2888:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2888:3:1"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2846:60:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2864:5:1",
														"nodeType": "YulTypedName",
														"src": "2864:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2874:3:1",
														"nodeType": "YulTypedName",
														"src": "2874:3:1",
														"type": ""
													}
												],
												"src": "2846:60:1"
											},
											{
												"body": {
													"nativeSrc": "2972:82:1",
													"nodeType": "YulBlock",
													"src": "2972:82:1",
													"statements": [
														{
															"nativeSrc": "2982:66:1",
															"nodeType": "YulAssignment",
															"src": "2982:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3040:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "3040:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3022:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "3022:17:1"
																				},
																				"nativeSrc": "3022:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3022:24:1"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3013:8:1",
																			"nodeType": "YulIdentifier",
																			"src": "3013:8:1"
																		},
																		"nativeSrc": "3013:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3013:34:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2995:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "2995:17:1"
																},
																"nativeSrc": "2995:53:1",
																"nodeType": "YulFunctionCall",
																"src": "2995:53:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2982:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "2982:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "2912:142:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2952:5:1",
														"nodeType": "YulTypedName",
														"src": "2952:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2962:9:1",
														"nodeType": "YulTypedName",
														"src": "2962:9:1",
														"type": ""
													}
												],
												"src": "2912:142:1"
											},
											{
												"body": {
													"nativeSrc": "3107:28:1",
													"nodeType": "YulBlock",
													"src": "3107:28:1",
													"statements": [
														{
															"nativeSrc": "3117:12:1",
															"nodeType": "YulAssignment",
															"src": "3117:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "3124:5:1",
																"nodeType": "YulIdentifier",
																"src": "3124:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3117:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3117:3:1"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3060:75:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3093:5:1",
														"nodeType": "YulTypedName",
														"src": "3093:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3103:3:1",
														"nodeType": "YulTypedName",
														"src": "3103:3:1",
														"type": ""
													}
												],
												"src": "3060:75:1"
											},
											{
												"body": {
													"nativeSrc": "3217:193:1",
													"nodeType": "YulBlock",
													"src": "3217:193:1",
													"statements": [
														{
															"nativeSrc": "3227:63:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3227:63:1",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3282:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "3282:7:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3251:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "3251:30:1"
																},
																"nativeSrc": "3251:39:1",
																"nodeType": "YulFunctionCall",
																"src": "3251:39:1"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3231:16:1",
																	"nodeType": "YulTypedName",
																	"src": "3231:16:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3306:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3306:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3346:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "3346:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3340:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "3340:5:1"
																				},
																				"nativeSrc": "3340:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3340:11:1"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3353:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3353:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3385:16:1",
																						"nodeType": "YulIdentifier",
																						"src": "3385:16:1"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3361:23:1",
																					"nodeType": "YulIdentifier",
																					"src": "3361:23:1"
																				},
																				"nativeSrc": "3361:41:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3361:41:1"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3312:27:1",
																			"nodeType": "YulIdentifier",
																			"src": "3312:27:1"
																		},
																		"nativeSrc": "3312:91:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3312:91:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3299:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3299:6:1"
																},
																"nativeSrc": "3299:105:1",
																"nodeType": "YulFunctionCall",
																"src": "3299:105:1"
															},
															"nativeSrc": "3299:105:1",
															"nodeType": "YulExpressionStatement",
															"src": "3299:105:1"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3141:269:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3194:4:1",
														"nodeType": "YulTypedName",
														"src": "3194:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3200:6:1",
														"nodeType": "YulTypedName",
														"src": "3200:6:1",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3208:7:1",
														"nodeType": "YulTypedName",
														"src": "3208:7:1",
														"type": ""
													}
												],
												"src": "3141:269:1"
											},
											{
												"body": {
													"nativeSrc": "3465:24:1",
													"nodeType": "YulBlock",
													"src": "3465:24:1",
													"statements": [
														{
															"nativeSrc": "3475:8:1",
															"nodeType": "YulAssignment",
															"src": "3475:8:1",
															"value": {
																"kind": "number",
																"nativeSrc": "3482:1:1",
																"nodeType": "YulLiteral",
																"src": "3482:1:1",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3475:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3475:3:1"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3416:73:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3461:3:1",
														"nodeType": "YulTypedName",
														"src": "3461:3:1",
														"type": ""
													}
												],
												"src": "3416:73:1"
											},
											{
												"body": {
													"nativeSrc": "3548:136:1",
													"nodeType": "YulBlock",
													"src": "3548:136:1",
													"statements": [
														{
															"nativeSrc": "3558:46:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3558:46:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3572:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "3572:30:1"
																},
																"nativeSrc": "3572:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3572:32:1"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3562:6:1",
																	"nodeType": "YulTypedName",
																	"src": "3562:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3657:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3657:4:1"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3663:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3663:6:1"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3671:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3671:6:1"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3613:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "3613:43:1"
																},
																"nativeSrc": "3613:65:1",
																"nodeType": "YulFunctionCall",
																"src": "3613:65:1"
															},
															"nativeSrc": "3613:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "3613:65:1"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3495:189:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3534:4:1",
														"nodeType": "YulTypedName",
														"src": "3534:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3540:6:1",
														"nodeType": "YulTypedName",
														"src": "3540:6:1",
														"type": ""
													}
												],
												"src": "3495:189:1"
											},
											{
												"body": {
													"nativeSrc": "3740:136:1",
													"nodeType": "YulBlock",
													"src": "3740:136:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3807:63:1",
																"nodeType": "YulBlock",
																"src": "3807:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3851:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "3851:5:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3858:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3858:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3821:29:1",
																				"nodeType": "YulIdentifier",
																				"src": "3821:29:1"
																			},
																			"nativeSrc": "3821:39:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3821:39:1"
																		},
																		"nativeSrc": "3821:39:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3821:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3760:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3760:5:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3767:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3767:3:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3757:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3757:2:1"
																},
																"nativeSrc": "3757:14:1",
																"nodeType": "YulFunctionCall",
																"src": "3757:14:1"
															},
															"nativeSrc": "3750:120:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3772:26:1",
																"nodeType": "YulBlock",
																"src": "3772:26:1",
																"statements": [
																	{
																		"nativeSrc": "3774:22:1",
																		"nodeType": "YulAssignment",
																		"src": "3774:22:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3787:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "3787:5:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3794:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3794:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3783:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3783:3:1"
																			},
																			"nativeSrc": "3783:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3783:13:1"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3774:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3774:5:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3754:2:1",
																"nodeType": "YulBlock",
																"src": "3754:2:1",
																"statements": []
															},
															"src": "3750:120:1"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3690:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3728:5:1",
														"nodeType": "YulTypedName",
														"src": "3728:5:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3735:3:1",
														"nodeType": "YulTypedName",
														"src": "3735:3:1",
														"type": ""
													}
												],
												"src": "3690:186:1"
											},
											{
												"body": {
													"nativeSrc": "3961:464:1",
													"nodeType": "YulBlock",
													"src": "3961:464:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3987:431:1",
																"nodeType": "YulBlock",
																"src": "3987:431:1",
																"statements": [
																	{
																		"nativeSrc": "4001:54:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4001:54:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4049:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "4049:5:1"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4017:31:1",
																				"nodeType": "YulIdentifier",
																				"src": "4017:31:1"
																			},
																			"nativeSrc": "4017:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4017:38:1"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4005:8:1",
																				"nodeType": "YulTypedName",
																				"src": "4005:8:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4068:63:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4068:63:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4091:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "4091:8:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4119:10:1",
																							"nodeType": "YulIdentifier",
																							"src": "4119:10:1"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4101:17:1",
																						"nodeType": "YulIdentifier",
																						"src": "4101:17:1"
																					},
																					"nativeSrc": "4101:29:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4101:29:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4087:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "4087:3:1"
																			},
																			"nativeSrc": "4087:44:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4087:44:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4072:11:1",
																				"nodeType": "YulTypedName",
																				"src": "4072:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4288:27:1",
																			"nodeType": "YulBlock",
																			"src": "4288:27:1",
																			"statements": [
																				{
																					"nativeSrc": "4290:23:1",
																					"nodeType": "YulAssignment",
																					"src": "4290:23:1",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4305:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "4305:8:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4290:11:1",
																							"nodeType": "YulIdentifier",
																							"src": "4290:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4272:10:1",
																					"nodeType": "YulIdentifier",
																					"src": "4272:10:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4284:2:1",
																					"nodeType": "YulLiteral",
																					"src": "4284:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4269:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "4269:2:1"
																			},
																			"nativeSrc": "4269:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4269:18:1"
																		},
																		"nativeSrc": "4266:49:1",
																		"nodeType": "YulIf",
																		"src": "4266:49:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4357:11:1",
																					"nodeType": "YulIdentifier",
																					"src": "4357:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4374:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "4374:8:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4402:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "4402:3:1"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4384:17:1",
																								"nodeType": "YulIdentifier",
																								"src": "4384:17:1"
																							},
																							"nativeSrc": "4384:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "4384:22:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4370:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "4370:3:1"
																					},
																					"nativeSrc": "4370:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4370:37:1"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4328:28:1",
																				"nodeType": "YulIdentifier",
																				"src": "4328:28:1"
																			},
																			"nativeSrc": "4328:80:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4328:80:1"
																		},
																		"nativeSrc": "4328:80:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4328:80:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "3978:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3978:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3983:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3983:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3975:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3975:2:1"
																},
																"nativeSrc": "3975:11:1",
																"nodeType": "YulFunctionCall",
																"src": "3975:11:1"
															},
															"nativeSrc": "3972:446:1",
															"nodeType": "YulIf",
															"src": "3972:446:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "3882:543:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "3937:5:1",
														"nodeType": "YulTypedName",
														"src": "3937:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3944:3:1",
														"nodeType": "YulTypedName",
														"src": "3944:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "3949:10:1",
														"nodeType": "YulTypedName",
														"src": "3949:10:1",
														"type": ""
													}
												],
												"src": "3882:543:1"
											},
											{
												"body": {
													"nativeSrc": "4494:54:1",
													"nodeType": "YulBlock",
													"src": "4494:54:1",
													"statements": [
														{
															"nativeSrc": "4504:37:1",
															"nodeType": "YulAssignment",
															"src": "4504:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4529:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4529:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4535:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4535:5:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4525:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4525:3:1"
																},
																"nativeSrc": "4525:16:1",
																"nodeType": "YulFunctionCall",
																"src": "4525:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4504:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "4504:8:1"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4431:117:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4469:4:1",
														"nodeType": "YulTypedName",
														"src": "4469:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4475:5:1",
														"nodeType": "YulTypedName",
														"src": "4475:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4485:8:1",
														"nodeType": "YulTypedName",
														"src": "4485:8:1",
														"type": ""
													}
												],
												"src": "4431:117:1"
											},
											{
												"body": {
													"nativeSrc": "4605:118:1",
													"nodeType": "YulBlock",
													"src": "4605:118:1",
													"statements": [
														{
															"nativeSrc": "4615:68:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4615:68:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4664:1:1",
																						"nodeType": "YulLiteral",
																						"src": "4664:1:1",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4667:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "4667:5:1"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4660:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4660:3:1"
																				},
																				"nativeSrc": "4660:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4660:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4679:1:1",
																						"nodeType": "YulLiteral",
																						"src": "4679:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4675:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4675:3:1"
																				},
																				"nativeSrc": "4675:6:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4675:6:1"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4631:28:1",
																			"nodeType": "YulIdentifier",
																			"src": "4631:28:1"
																		},
																		"nativeSrc": "4631:51:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4631:51:1"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4627:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4627:3:1"
																},
																"nativeSrc": "4627:56:1",
																"nodeType": "YulFunctionCall",
																"src": "4627:56:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4619:4:1",
																	"nodeType": "YulTypedName",
																	"src": "4619:4:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4692:25:1",
															"nodeType": "YulAssignment",
															"src": "4692:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4706:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4706:4:1"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4712:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4712:4:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4702:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4702:3:1"
																},
																"nativeSrc": "4702:15:1",
																"nodeType": "YulFunctionCall",
																"src": "4702:15:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4692:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4692:6:1"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4554:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4582:4:1",
														"nodeType": "YulTypedName",
														"src": "4582:4:1",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4588:5:1",
														"nodeType": "YulTypedName",
														"src": "4588:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4598:6:1",
														"nodeType": "YulTypedName",
														"src": "4598:6:1",
														"type": ""
													}
												],
												"src": "4554:169:1"
											},
											{
												"body": {
													"nativeSrc": "4809:214:1",
													"nodeType": "YulBlock",
													"src": "4809:214:1",
													"statements": [
														{
															"nativeSrc": "4942:37:1",
															"nodeType": "YulAssignment",
															"src": "4942:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4969:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4969:4:1"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "4975:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4975:3:1"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "4950:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "4950:18:1"
																},
																"nativeSrc": "4950:29:1",
																"nodeType": "YulFunctionCall",
																"src": "4950:29:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4942:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4942:4:1"
																}
															]
														},
														{
															"nativeSrc": "4988:29:1",
															"nodeType": "YulAssignment",
															"src": "4988:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4999:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4999:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5009:1:1",
																				"nodeType": "YulLiteral",
																				"src": "5009:1:1",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5012:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "5012:3:1"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5005:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5005:3:1"
																		},
																		"nativeSrc": "5005:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4996:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4996:2:1"
																},
																"nativeSrc": "4996:21:1",
																"nodeType": "YulFunctionCall",
																"src": "4996:21:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "4988:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4988:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4728:295:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4790:4:1",
														"nodeType": "YulTypedName",
														"src": "4790:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4796:3:1",
														"nodeType": "YulTypedName",
														"src": "4796:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4804:4:1",
														"nodeType": "YulTypedName",
														"src": "4804:4:1",
														"type": ""
													}
												],
												"src": "4728:295:1"
											},
											{
												"body": {
													"nativeSrc": "5120:1303:1",
													"nodeType": "YulBlock",
													"src": "5120:1303:1",
													"statements": [
														{
															"nativeSrc": "5131:51:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5131:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5178:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5178:3:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5145:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "5145:32:1"
																},
																"nativeSrc": "5145:37:1",
																"nodeType": "YulFunctionCall",
																"src": "5145:37:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5135:6:1",
																	"nodeType": "YulTypedName",
																	"src": "5135:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5267:22:1",
																"nodeType": "YulBlock",
																"src": "5267:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5269:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "5269:16:1"
																			},
																			"nativeSrc": "5269:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5269:18:1"
																		},
																		"nativeSrc": "5269:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5269:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5239:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5239:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5247:18:1",
																		"nodeType": "YulLiteral",
																		"src": "5247:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5236:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "5236:2:1"
																},
																"nativeSrc": "5236:30:1",
																"nodeType": "YulFunctionCall",
																"src": "5236:30:1"
															},
															"nativeSrc": "5233:56:1",
															"nodeType": "YulIf",
															"src": "5233:56:1"
														},
														{
															"nativeSrc": "5299:52:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5299:52:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5345:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "5345:4:1"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5339:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "5339:5:1"
																		},
																		"nativeSrc": "5339:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5339:11:1"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5313:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "5313:25:1"
																},
																"nativeSrc": "5313:38:1",
																"nodeType": "YulFunctionCall",
																"src": "5313:38:1"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5303:6:1",
																	"nodeType": "YulTypedName",
																	"src": "5303:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5444:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "5444:4:1"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5450:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5450:6:1"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5458:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5458:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5398:45:1",
																	"nodeType": "YulIdentifier",
																	"src": "5398:45:1"
																},
																"nativeSrc": "5398:67:1",
																"nodeType": "YulFunctionCall",
																"src": "5398:67:1"
															},
															"nativeSrc": "5398:67:1",
															"nodeType": "YulExpressionStatement",
															"src": "5398:67:1"
														},
														{
															"nativeSrc": "5475:18:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5475:18:1",
															"value": {
																"kind": "number",
																"nativeSrc": "5492:1:1",
																"nodeType": "YulLiteral",
																"src": "5492:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5479:9:1",
																	"nodeType": "YulTypedName",
																	"src": "5479:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5503:17:1",
															"nodeType": "YulAssignment",
															"src": "5503:17:1",
															"value": {
																"kind": "number",
																"nativeSrc": "5516:4:1",
																"nodeType": "YulLiteral",
																"src": "5516:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5503:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "5503:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5567:611:1",
																		"nodeType": "YulBlock",
																		"src": "5567:611:1",
																		"statements": [
																			{
																				"nativeSrc": "5581:37:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5581:37:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5600:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "5600:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5612:4:1",
																									"nodeType": "YulLiteral",
																									"src": "5612:4:1",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5608:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "5608:3:1"
																							},
																							"nativeSrc": "5608:9:1",
																							"nodeType": "YulFunctionCall",
																							"src": "5608:9:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5596:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "5596:3:1"
																					},
																					"nativeSrc": "5596:22:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5596:22:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5585:7:1",
																						"nodeType": "YulTypedName",
																						"src": "5585:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5632:51:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5632:51:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5678:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "5678:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5646:31:1",
																						"nodeType": "YulIdentifier",
																						"src": "5646:31:1"
																					},
																					"nativeSrc": "5646:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5646:37:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5636:6:1",
																						"nodeType": "YulTypedName",
																						"src": "5636:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5696:10:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5696:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5705:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5705:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5700:1:1",
																						"nodeType": "YulTypedName",
																						"src": "5700:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5764:163:1",
																					"nodeType": "YulBlock",
																					"src": "5764:163:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5789:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "5789:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5807:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "5807:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5812:9:1",
																														"nodeType": "YulIdentifier",
																														"src": "5812:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5803:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "5803:3:1"
																												},
																												"nativeSrc": "5803:19:1",
																												"nodeType": "YulFunctionCall",
																												"src": "5803:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5797:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "5797:5:1"
																										},
																										"nativeSrc": "5797:26:1",
																										"nodeType": "YulFunctionCall",
																										"src": "5797:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5782:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "5782:6:1"
																								},
																								"nativeSrc": "5782:42:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5782:42:1"
																							},
																							"nativeSrc": "5782:42:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "5782:42:1"
																						},
																						{
																							"nativeSrc": "5841:24:1",
																							"nodeType": "YulAssignment",
																							"src": "5841:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5855:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "5855:6:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5863:1:1",
																										"nodeType": "YulLiteral",
																										"src": "5863:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5851:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "5851:3:1"
																								},
																								"nativeSrc": "5851:14:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5851:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5841:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "5841:6:1"
																								}
																							]
																						},
																						{
																							"nativeSrc": "5882:31:1",
																							"nodeType": "YulAssignment",
																							"src": "5882:31:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "5899:9:1",
																										"nodeType": "YulIdentifier",
																										"src": "5899:9:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5910:2:1",
																										"nodeType": "YulLiteral",
																										"src": "5910:2:1",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5895:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "5895:3:1"
																								},
																								"nativeSrc": "5895:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5895:18:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "5882:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "5882:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5730:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "5730:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5733:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "5733:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5727:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "5727:2:1"
																					},
																					"nativeSrc": "5727:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5727:14:1"
																				},
																				"nativeSrc": "5719:208:1",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5742:21:1",
																					"nodeType": "YulBlock",
																					"src": "5742:21:1",
																					"statements": [
																						{
																							"nativeSrc": "5744:17:1",
																							"nodeType": "YulAssignment",
																							"src": "5744:17:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5753:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "5753:1:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5756:4:1",
																										"nodeType": "YulLiteral",
																										"src": "5756:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5749:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "5749:3:1"
																								},
																								"nativeSrc": "5749:12:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5749:12:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5744:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "5744:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5723:3:1",
																					"nodeType": "YulBlock",
																					"src": "5723:3:1",
																					"statements": []
																				},
																				"src": "5719:208:1"
																			},
																			{
																				"body": {
																					"nativeSrc": "5963:156:1",
																					"nodeType": "YulBlock",
																					"src": "5963:156:1",
																					"statements": [
																						{
																							"nativeSrc": "5981:43:1",
																							"nodeType": "YulVariableDeclaration",
																							"src": "5981:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6008:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "6008:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6013:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "6013:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6004:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "6004:3:1"
																										},
																										"nativeSrc": "6004:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "6004:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5998:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "5998:5:1"
																								},
																								"nativeSrc": "5998:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5998:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "5985:9:1",
																									"nodeType": "YulTypedName",
																									"src": "5985:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6048:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "6048:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6075:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "6075:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6090:6:1",
																														"nodeType": "YulIdentifier",
																														"src": "6090:6:1"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6098:4:1",
																														"nodeType": "YulLiteral",
																														"src": "6098:4:1",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6086:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "6086:3:1"
																												},
																												"nativeSrc": "6086:17:1",
																												"nodeType": "YulFunctionCall",
																												"src": "6086:17:1"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6056:18:1",
																											"nodeType": "YulIdentifier",
																											"src": "6056:18:1"
																										},
																										"nativeSrc": "6056:48:1",
																										"nodeType": "YulFunctionCall",
																										"src": "6056:48:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6041:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "6041:6:1"
																								},
																								"nativeSrc": "6041:64:1",
																								"nodeType": "YulFunctionCall",
																								"src": "6041:64:1"
																							},
																							"nativeSrc": "6041:64:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "6041:64:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5946:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "5946:7:1"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "5955:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "5955:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5943:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "5943:2:1"
																					},
																					"nativeSrc": "5943:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5943:19:1"
																				},
																				"nativeSrc": "5940:179:1",
																				"nodeType": "YulIf",
																				"src": "5940:179:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6139:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "6139:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6153:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "6153:6:1"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6161:1:1",
																											"nodeType": "YulLiteral",
																											"src": "6161:1:1",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6149:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "6149:3:1"
																									},
																									"nativeSrc": "6149:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "6149:14:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6165:1:1",
																									"nodeType": "YulLiteral",
																									"src": "6165:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6145:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "6145:3:1"
																							},
																							"nativeSrc": "6145:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "6145:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6132:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "6132:6:1"
																					},
																					"nativeSrc": "6132:36:1",
																					"nodeType": "YulFunctionCall",
																					"src": "6132:36:1"
																				},
																				"nativeSrc": "6132:36:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "6132:36:1"
																			}
																		]
																	},
																	"nativeSrc": "5560:618:1",
																	"nodeType": "YulCase",
																	"src": "5560:618:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5565:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5565:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6195:222:1",
																		"nodeType": "YulBlock",
																		"src": "6195:222:1",
																		"statements": [
																			{
																				"nativeSrc": "6209:14:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6209:14:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6222:1:1",
																					"nodeType": "YulLiteral",
																					"src": "6222:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6213:5:1",
																						"nodeType": "YulTypedName",
																						"src": "6213:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6246:67:1",
																					"nodeType": "YulBlock",
																					"src": "6246:67:1",
																					"statements": [
																						{
																							"nativeSrc": "6264:35:1",
																							"nodeType": "YulAssignment",
																							"src": "6264:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6283:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "6283:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6288:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "6288:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6279:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "6279:3:1"
																										},
																										"nativeSrc": "6279:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "6279:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6273:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "6273:5:1"
																								},
																								"nativeSrc": "6273:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "6273:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6264:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "6264:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6239:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "6239:6:1"
																				},
																				"nativeSrc": "6236:77:1",
																				"nodeType": "YulIf",
																				"src": "6236:77:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6333:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "6333:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6392:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "6392:5:1"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6399:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "6399:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6339:52:1",
																								"nodeType": "YulIdentifier",
																								"src": "6339:52:1"
																							},
																							"nativeSrc": "6339:67:1",
																							"nodeType": "YulFunctionCall",
																							"src": "6339:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6326:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "6326:6:1"
																					},
																					"nativeSrc": "6326:81:1",
																					"nodeType": "YulFunctionCall",
																					"src": "6326:81:1"
																				},
																				"nativeSrc": "6326:81:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "6326:81:1"
																			}
																		]
																	},
																	"nativeSrc": "6187:230:1",
																	"nodeType": "YulCase",
																	"src": "6187:230:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5540:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5540:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5548:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5548:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5537:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "5537:2:1"
																},
																"nativeSrc": "5537:14:1",
																"nodeType": "YulFunctionCall",
																"src": "5537:14:1"
															},
															"nativeSrc": "5530:887:1",
															"nodeType": "YulSwitch",
															"src": "5530:887:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5028:1395:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5109:4:1",
														"nodeType": "YulTypedName",
														"src": "5109:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5115:3:1",
														"nodeType": "YulTypedName",
														"src": "5115:3:1",
														"type": ""
													}
												],
												"src": "5028:1395:1"
											},
											{
												"body": {
													"nativeSrc": "6494:53:1",
													"nodeType": "YulBlock",
													"src": "6494:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6511:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6511:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6534:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "6534:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6516:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "6516:17:1"
																		},
																		"nativeSrc": "6516:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6516:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6504:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6504:6:1"
																},
																"nativeSrc": "6504:37:1",
																"nodeType": "YulFunctionCall",
																"src": "6504:37:1"
															},
															"nativeSrc": "6504:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "6504:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6429:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6482:5:1",
														"nodeType": "YulTypedName",
														"src": "6482:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6489:3:1",
														"nodeType": "YulTypedName",
														"src": "6489:3:1",
														"type": ""
													}
												],
												"src": "6429:118:1"
											},
											{
												"body": {
													"nativeSrc": "6651:124:1",
													"nodeType": "YulBlock",
													"src": "6651:124:1",
													"statements": [
														{
															"nativeSrc": "6661:26:1",
															"nodeType": "YulAssignment",
															"src": "6661:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6673:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6673:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6684:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6684:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6669:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6669:3:1"
																},
																"nativeSrc": "6669:18:1",
																"nodeType": "YulFunctionCall",
																"src": "6669:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6661:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6661:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6741:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6741:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6754:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6754:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6765:1:1",
																				"nodeType": "YulLiteral",
																				"src": "6765:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6750:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6750:3:1"
																		},
																		"nativeSrc": "6750:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6750:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6697:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "6697:43:1"
																},
																"nativeSrc": "6697:71:1",
																"nodeType": "YulFunctionCall",
																"src": "6697:71:1"
															},
															"nativeSrc": "6697:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "6697:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6553:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6623:9:1",
														"nodeType": "YulTypedName",
														"src": "6623:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6635:6:1",
														"nodeType": "YulTypedName",
														"src": "6635:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6646:4:1",
														"nodeType": "YulTypedName",
														"src": "6646:4:1",
														"type": ""
													}
												],
												"src": "6553:222:1"
											},
											{
												"body": {
													"nativeSrc": "6809:152:1",
													"nodeType": "YulBlock",
													"src": "6809:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6826:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6826:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6829:77:1",
																		"nodeType": "YulLiteral",
																		"src": "6829:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6819:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6819:6:1"
																},
																"nativeSrc": "6819:88:1",
																"nodeType": "YulFunctionCall",
																"src": "6819:88:1"
															},
															"nativeSrc": "6819:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "6819:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6923:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6923:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6926:4:1",
																		"nodeType": "YulLiteral",
																		"src": "6926:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6916:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6916:6:1"
																},
																"nativeSrc": "6916:15:1",
																"nodeType": "YulFunctionCall",
																"src": "6916:15:1"
															},
															"nativeSrc": "6916:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "6916:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6947:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6947:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6950:4:1",
																		"nodeType": "YulLiteral",
																		"src": "6950:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6940:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6940:6:1"
																},
																"nativeSrc": "6940:15:1",
																"nodeType": "YulFunctionCall",
																"src": "6940:15:1"
															},
															"nativeSrc": "6940:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "6940:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6781:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "6781:180:1"
											},
											{
												"body": {
													"nativeSrc": "7018:51:1",
													"nodeType": "YulBlock",
													"src": "7018:51:1",
													"statements": [
														{
															"nativeSrc": "7028:34:1",
															"nodeType": "YulAssignment",
															"src": "7028:34:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7053:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7053:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7056:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "7056:5:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7049:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7049:3:1"
																},
																"nativeSrc": "7049:13:1",
																"nodeType": "YulFunctionCall",
																"src": "7049:13:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7028:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "7028:8:1"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "6967:102:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6999:5:1",
														"nodeType": "YulTypedName",
														"src": "6999:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7009:8:1",
														"nodeType": "YulTypedName",
														"src": "7009:8:1",
														"type": ""
													}
												],
												"src": "6967:102:1"
											},
											{
												"body": {
													"nativeSrc": "7148:775:1",
													"nodeType": "YulBlock",
													"src": "7148:775:1",
													"statements": [
														{
															"nativeSrc": "7158:15:1",
															"nodeType": "YulAssignment",
															"src": "7158:15:1",
															"value": {
																"name": "_power",
																"nativeSrc": "7167:6:1",
																"nodeType": "YulIdentifier",
																"src": "7167:6:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7158:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "7158:5:1"
																}
															]
														},
														{
															"nativeSrc": "7182:14:1",
															"nodeType": "YulAssignment",
															"src": "7182:14:1",
															"value": {
																"name": "_base",
																"nativeSrc": "7191:5:1",
																"nodeType": "YulIdentifier",
																"src": "7191:5:1"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "7182:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7182:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7240:677:1",
																"nodeType": "YulBlock",
																"src": "7240:677:1",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "7328:22:1",
																			"nodeType": "YulBlock",
																			"src": "7328:22:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "7330:16:1",
																							"nodeType": "YulIdentifier",
																							"src": "7330:16:1"
																						},
																						"nativeSrc": "7330:18:1",
																						"nodeType": "YulFunctionCall",
																						"src": "7330:18:1"
																					},
																					"nativeSrc": "7330:18:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "7330:18:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "7306:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "7306:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "7316:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "7316:3:1"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "7321:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "7321:4:1"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "7312:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "7312:3:1"
																					},
																					"nativeSrc": "7312:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "7312:14:1"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "7303:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "7303:2:1"
																			},
																			"nativeSrc": "7303:24:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7303:24:1"
																		},
																		"nativeSrc": "7300:50:1",
																		"nodeType": "YulIf",
																		"src": "7300:50:1"
																	},
																	{
																		"body": {
																			"nativeSrc": "7395:419:1",
																			"nodeType": "YulBlock",
																			"src": "7395:419:1",
																			"statements": [
																				{
																					"nativeSrc": "7775:25:1",
																					"nodeType": "YulAssignment",
																					"src": "7775:25:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "7788:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "7788:5:1"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "7795:4:1",
																								"nodeType": "YulIdentifier",
																								"src": "7795:4:1"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "7784:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "7784:3:1"
																						},
																						"nativeSrc": "7784:16:1",
																						"nodeType": "YulFunctionCall",
																						"src": "7784:16:1"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "7775:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "7775:5:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "7370:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "7370:8:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7380:1:1",
																					"nodeType": "YulLiteral",
																					"src": "7380:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7366:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "7366:3:1"
																			},
																			"nativeSrc": "7366:16:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7366:16:1"
																		},
																		"nativeSrc": "7363:451:1",
																		"nodeType": "YulIf",
																		"src": "7363:451:1"
																	},
																	{
																		"nativeSrc": "7827:23:1",
																		"nodeType": "YulAssignment",
																		"src": "7827:23:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "7839:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "7839:4:1"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "7845:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "7845:4:1"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "7835:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "7835:3:1"
																			},
																			"nativeSrc": "7835:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7835:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "7827:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "7827:4:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7863:44:1",
																		"nodeType": "YulAssignment",
																		"src": "7863:44:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "7898:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "7898:8:1"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "7875:22:1",
																				"nodeType": "YulIdentifier",
																				"src": "7875:22:1"
																			},
																			"nativeSrc": "7875:32:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7875:32:1"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "7863:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "7863:8:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "7216:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "7216:8:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7226:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7226:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7213:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "7213:2:1"
																},
																"nativeSrc": "7213:15:1",
																"nodeType": "YulFunctionCall",
																"src": "7213:15:1"
															},
															"nativeSrc": "7205:712:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7229:2:1",
																"nodeType": "YulBlock",
																"src": "7229:2:1",
																"statements": []
															},
															"pre": {
																"nativeSrc": "7209:3:1",
																"nodeType": "YulBlock",
																"src": "7209:3:1",
																"statements": []
															},
															"src": "7205:712:1"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "7075:848:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "7103:6:1",
														"nodeType": "YulTypedName",
														"src": "7103:6:1",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "7111:5:1",
														"nodeType": "YulTypedName",
														"src": "7111:5:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "7118:8:1",
														"nodeType": "YulTypedName",
														"src": "7118:8:1",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "7128:3:1",
														"nodeType": "YulTypedName",
														"src": "7128:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "7136:5:1",
														"nodeType": "YulTypedName",
														"src": "7136:5:1",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "7143:4:1",
														"nodeType": "YulTypedName",
														"src": "7143:4:1",
														"type": ""
													}
												],
												"src": "7075:848:1"
											},
											{
												"body": {
													"nativeSrc": "7989:1013:1",
													"nodeType": "YulBlock",
													"src": "7989:1013:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "8184:20:1",
																"nodeType": "YulBlock",
																"src": "8184:20:1",
																"statements": [
																	{
																		"nativeSrc": "8186:10:1",
																		"nodeType": "YulAssignment",
																		"src": "8186:10:1",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "8195:1:1",
																			"nodeType": "YulLiteral",
																			"src": "8195:1:1",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8186:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "8186:5:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8197:5:1",
																		"nodeType": "YulLeave",
																		"src": "8197:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "8174:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "8174:8:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8167:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8167:6:1"
																},
																"nativeSrc": "8167:16:1",
																"nodeType": "YulFunctionCall",
																"src": "8167:16:1"
															},
															"nativeSrc": "8164:40:1",
															"nodeType": "YulIf",
															"src": "8164:40:1"
														},
														{
															"body": {
																"nativeSrc": "8229:20:1",
																"nodeType": "YulBlock",
																"src": "8229:20:1",
																"statements": [
																	{
																		"nativeSrc": "8231:10:1",
																		"nodeType": "YulAssignment",
																		"src": "8231:10:1",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "8240:1:1",
																			"nodeType": "YulLiteral",
																			"src": "8240:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8231:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "8231:5:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8242:5:1",
																		"nodeType": "YulLeave",
																		"src": "8242:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "8223:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "8223:4:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8216:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8216:6:1"
																},
																"nativeSrc": "8216:12:1",
																"nodeType": "YulFunctionCall",
																"src": "8216:12:1"
															},
															"nativeSrc": "8213:36:1",
															"nodeType": "YulIf",
															"src": "8213:36:1"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8359:20:1",
																		"nodeType": "YulBlock",
																		"src": "8359:20:1",
																		"statements": [
																			{
																				"nativeSrc": "8361:10:1",
																				"nodeType": "YulAssignment",
																				"src": "8361:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8370:1:1",
																					"nodeType": "YulLiteral",
																					"src": "8370:1:1",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "8361:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "8361:5:1"
																					}
																				]
																			},
																			{
																				"nativeSrc": "8372:5:1",
																				"nodeType": "YulLeave",
																				"src": "8372:5:1"
																			}
																		]
																	},
																	"nativeSrc": "8352:27:1",
																	"nodeType": "YulCase",
																	"src": "8352:27:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8357:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8357:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8403:176:1",
																		"nodeType": "YulBlock",
																		"src": "8403:176:1",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "8438:22:1",
																					"nodeType": "YulBlock",
																					"src": "8438:22:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "8440:16:1",
																									"nodeType": "YulIdentifier",
																									"src": "8440:16:1"
																								},
																								"nativeSrc": "8440:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "8440:18:1"
																							},
																							"nativeSrc": "8440:18:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "8440:18:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "8423:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "8423:8:1"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "8433:3:1",
																							"nodeType": "YulLiteral",
																							"src": "8433:3:1",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "8420:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "8420:2:1"
																					},
																					"nativeSrc": "8420:17:1",
																					"nodeType": "YulFunctionCall",
																					"src": "8420:17:1"
																				},
																				"nativeSrc": "8417:43:1",
																				"nodeType": "YulIf",
																				"src": "8417:43:1"
																			},
																			{
																				"nativeSrc": "8473:25:1",
																				"nodeType": "YulAssignment",
																				"src": "8473:25:1",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "8486:1:1",
																							"nodeType": "YulLiteral",
																							"src": "8486:1:1",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "8489:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "8489:8:1"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "8482:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "8482:3:1"
																					},
																					"nativeSrc": "8482:16:1",
																					"nodeType": "YulFunctionCall",
																					"src": "8482:16:1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "8473:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "8473:5:1"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8529:22:1",
																					"nodeType": "YulBlock",
																					"src": "8529:22:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "8531:16:1",
																									"nodeType": "YulIdentifier",
																									"src": "8531:16:1"
																								},
																								"nativeSrc": "8531:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "8531:18:1"
																							},
																							"nativeSrc": "8531:18:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "8531:18:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "8517:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "8517:5:1"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "8524:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "8524:3:1"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "8514:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "8514:2:1"
																					},
																					"nativeSrc": "8514:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "8514:14:1"
																				},
																				"nativeSrc": "8511:40:1",
																				"nodeType": "YulIf",
																				"src": "8511:40:1"
																			},
																			{
																				"nativeSrc": "8564:5:1",
																				"nodeType": "YulLeave",
																				"src": "8564:5:1"
																			}
																		]
																	},
																	"nativeSrc": "8388:191:1",
																	"nodeType": "YulCase",
																	"src": "8388:191:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8393:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8393:1:1",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "8309:4:1",
																"nodeType": "YulIdentifier",
																"src": "8309:4:1"
															},
															"nativeSrc": "8302:277:1",
															"nodeType": "YulSwitch",
															"src": "8302:277:1"
														},
														{
															"body": {
																"nativeSrc": "8711:123:1",
																"nodeType": "YulBlock",
																"src": "8711:123:1",
																"statements": [
																	{
																		"nativeSrc": "8725:28:1",
																		"nodeType": "YulAssignment",
																		"src": "8725:28:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "8738:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "8738:4:1"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "8744:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "8744:8:1"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "8734:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "8734:3:1"
																			},
																			"nativeSrc": "8734:19:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8734:19:1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8725:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "8725:5:1"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "8784:22:1",
																			"nodeType": "YulBlock",
																			"src": "8784:22:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "8786:16:1",
																							"nodeType": "YulIdentifier",
																							"src": "8786:16:1"
																						},
																						"nativeSrc": "8786:18:1",
																						"nodeType": "YulFunctionCall",
																						"src": "8786:18:1"
																					},
																					"nativeSrc": "8786:18:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "8786:18:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "8772:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "8772:5:1"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "8779:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "8779:3:1"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "8769:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "8769:2:1"
																			},
																			"nativeSrc": "8769:14:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8769:14:1"
																		},
																		"nativeSrc": "8766:40:1",
																		"nodeType": "YulIf",
																		"src": "8766:40:1"
																	},
																	{
																		"nativeSrc": "8819:5:1",
																		"nodeType": "YulLeave",
																		"src": "8819:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "8614:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "8614:4:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8620:2:1",
																						"nodeType": "YulLiteral",
																						"src": "8620:2:1",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8611:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "8611:2:1"
																				},
																				"nativeSrc": "8611:12:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8611:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "8628:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "8628:8:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8638:2:1",
																						"nodeType": "YulLiteral",
																						"src": "8638:2:1",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8625:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "8625:2:1"
																				},
																				"nativeSrc": "8625:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8625:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8607:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8607:3:1"
																		},
																		"nativeSrc": "8607:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8607:35:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "8663:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "8663:4:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8669:3:1",
																						"nodeType": "YulLiteral",
																						"src": "8669:3:1",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8660:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "8660:2:1"
																				},
																				"nativeSrc": "8660:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8660:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "8678:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "8678:8:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8688:2:1",
																						"nodeType": "YulLiteral",
																						"src": "8688:2:1",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8675:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "8675:2:1"
																				},
																				"nativeSrc": "8675:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8675:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8656:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8656:3:1"
																		},
																		"nativeSrc": "8656:36:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8656:36:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8591:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "8591:2:1"
																},
																"nativeSrc": "8591:111:1",
																"nodeType": "YulFunctionCall",
																"src": "8591:111:1"
															},
															"nativeSrc": "8588:246:1",
															"nodeType": "YulIf",
															"src": "8588:246:1"
														},
														{
															"nativeSrc": "8844:57:1",
															"nodeType": "YulAssignment",
															"src": "8844:57:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8878:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8878:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "8881:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "8881:4:1"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "8887:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "8887:8:1"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "8897:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8897:3:1"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "8859:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "8859:18:1"
																},
																"nativeSrc": "8859:42:1",
																"nodeType": "YulFunctionCall",
																"src": "8859:42:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8844:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "8844:5:1"
																},
																{
																	"name": "base",
																	"nativeSrc": "8851:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8851:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8940:22:1",
																"nodeType": "YulBlock",
																"src": "8940:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8942:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "8942:16:1"
																			},
																			"nativeSrc": "8942:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8942:18:1"
																		},
																		"nativeSrc": "8942:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8942:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "8917:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "8917:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "8928:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "8928:3:1"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "8933:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "8933:4:1"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "8924:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8924:3:1"
																		},
																		"nativeSrc": "8924:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8924:14:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8914:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "8914:2:1"
																},
																"nativeSrc": "8914:25:1",
																"nodeType": "YulFunctionCall",
																"src": "8914:25:1"
															},
															"nativeSrc": "8911:51:1",
															"nodeType": "YulIf",
															"src": "8911:51:1"
														},
														{
															"nativeSrc": "8971:25:1",
															"nodeType": "YulAssignment",
															"src": "8971:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "8984:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "8984:5:1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "8991:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "8991:4:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8980:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8980:3:1"
																},
																"nativeSrc": "8980:16:1",
																"nodeType": "YulFunctionCall",
																"src": "8980:16:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8971:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "8971:5:1"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "7929:1073:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "7959:4:1",
														"nodeType": "YulTypedName",
														"src": "7959:4:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "7965:8:1",
														"nodeType": "YulTypedName",
														"src": "7965:8:1",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "7975:3:1",
														"nodeType": "YulTypedName",
														"src": "7975:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "7983:5:1",
														"nodeType": "YulTypedName",
														"src": "7983:5:1",
														"type": ""
													}
												],
												"src": "7929:1073:1"
											},
											{
												"body": {
													"nativeSrc": "9051:43:1",
													"nodeType": "YulBlock",
													"src": "9051:43:1",
													"statements": [
														{
															"nativeSrc": "9061:27:1",
															"nodeType": "YulAssignment",
															"src": "9061:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9076:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "9076:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9083:4:1",
																		"nodeType": "YulLiteral",
																		"src": "9083:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9072:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9072:3:1"
																},
																"nativeSrc": "9072:16:1",
																"nodeType": "YulFunctionCall",
																"src": "9072:16:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9061:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "9061:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "9008:86:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9033:5:1",
														"nodeType": "YulTypedName",
														"src": "9033:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9043:7:1",
														"nodeType": "YulTypedName",
														"src": "9043:7:1",
														"type": ""
													}
												],
												"src": "9008:86:1"
											},
											{
												"body": {
													"nativeSrc": "9164:217:1",
													"nodeType": "YulBlock",
													"src": "9164:217:1",
													"statements": [
														{
															"nativeSrc": "9174:31:1",
															"nodeType": "YulAssignment",
															"src": "9174:31:1",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "9200:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "9200:4:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9182:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "9182:17:1"
																},
																"nativeSrc": "9182:23:1",
																"nodeType": "YulFunctionCall",
																"src": "9182:23:1"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "9174:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9174:4:1"
																}
															]
														},
														{
															"nativeSrc": "9214:37:1",
															"nodeType": "YulAssignment",
															"src": "9214:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "9242:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "9242:8:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "9226:15:1",
																	"nodeType": "YulIdentifier",
																	"src": "9226:15:1"
																},
																"nativeSrc": "9226:25:1",
																"nodeType": "YulFunctionCall",
																"src": "9226:25:1"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "9214:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "9214:8:1"
																}
															]
														},
														{
															"nativeSrc": "9261:113:1",
															"nodeType": "YulAssignment",
															"src": "9261:113:1",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "9291:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "9291:4:1"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "9297:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "9297:8:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9307:66:1",
																		"nodeType": "YulLiteral",
																		"src": "9307:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "9270:20:1",
																	"nodeType": "YulIdentifier",
																	"src": "9270:20:1"
																},
																"nativeSrc": "9270:104:1",
																"nodeType": "YulFunctionCall",
																"src": "9270:104:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9261:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "9261:5:1"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "9100:281:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "9139:4:1",
														"nodeType": "YulTypedName",
														"src": "9139:4:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "9145:8:1",
														"nodeType": "YulTypedName",
														"src": "9145:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "9158:5:1",
														"nodeType": "YulTypedName",
														"src": "9158:5:1",
														"type": ""
													}
												],
												"src": "9100:281:1"
											},
											{
												"body": {
													"nativeSrc": "9435:362:1",
													"nodeType": "YulBlock",
													"src": "9435:362:1",
													"statements": [
														{
															"nativeSrc": "9445:25:1",
															"nodeType": "YulAssignment",
															"src": "9445:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9468:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9468:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9450:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "9450:17:1"
																},
																"nativeSrc": "9450:20:1",
																"nodeType": "YulFunctionCall",
																"src": "9450:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9445:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "9445:1:1"
																}
															]
														},
														{
															"nativeSrc": "9479:25:1",
															"nodeType": "YulAssignment",
															"src": "9479:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9502:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9502:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9484:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "9484:17:1"
																},
																"nativeSrc": "9484:20:1",
																"nodeType": "YulFunctionCall",
																"src": "9484:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9479:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "9479:1:1"
																}
															]
														},
														{
															"nativeSrc": "9513:28:1",
															"nodeType": "YulVariableDeclaration",
															"src": "9513:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9536:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9536:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9539:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9539:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9532:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9532:3:1"
																},
																"nativeSrc": "9532:9:1",
																"nodeType": "YulFunctionCall",
																"src": "9532:9:1"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "9517:11:1",
																	"nodeType": "YulTypedName",
																	"src": "9517:11:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9550:41:1",
															"nodeType": "YulAssignment",
															"src": "9550:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "9579:11:1",
																		"nodeType": "YulIdentifier",
																		"src": "9579:11:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9561:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "9561:17:1"
																},
																"nativeSrc": "9561:30:1",
																"nodeType": "YulFunctionCall",
																"src": "9561:30:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "9550:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "9550:7:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9768:22:1",
																"nodeType": "YulBlock",
																"src": "9768:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9770:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "9770:16:1"
																			},
																			"nativeSrc": "9770:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "9770:18:1"
																		},
																		"nativeSrc": "9770:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "9770:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "9701:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "9701:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "9694:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "9694:6:1"
																				},
																				"nativeSrc": "9694:9:1",
																				"nodeType": "YulFunctionCall",
																				"src": "9694:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "9724:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "9724:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "9731:7:1",
																								"nodeType": "YulIdentifier",
																								"src": "9731:7:1"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "9740:1:1",
																								"nodeType": "YulIdentifier",
																								"src": "9740:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "9727:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "9727:3:1"
																						},
																						"nativeSrc": "9727:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "9727:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "9721:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "9721:2:1"
																				},
																				"nativeSrc": "9721:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "9721:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "9674:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "9674:2:1"
																		},
																		"nativeSrc": "9674:83:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9674:83:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9654:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9654:6:1"
																},
																"nativeSrc": "9654:113:1",
																"nodeType": "YulFunctionCall",
																"src": "9654:113:1"
															},
															"nativeSrc": "9651:139:1",
															"nodeType": "YulIf",
															"src": "9651:139:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "9387:410:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9418:1:1",
														"nodeType": "YulTypedName",
														"src": "9418:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9421:1:1",
														"nodeType": "YulTypedName",
														"src": "9421:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "9427:7:1",
														"nodeType": "YulTypedName",
														"src": "9427:7:1",
														"type": ""
													}
												],
												"src": "9387:410:1"
											},
											{
												"body": {
													"nativeSrc": "9848:32:1",
													"nodeType": "YulBlock",
													"src": "9848:32:1",
													"statements": [
														{
															"nativeSrc": "9858:16:1",
															"nodeType": "YulAssignment",
															"src": "9858:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "9869:5:1",
																"nodeType": "YulIdentifier",
																"src": "9869:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9858:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "9858:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "9803:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9830:5:1",
														"nodeType": "YulTypedName",
														"src": "9830:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9840:7:1",
														"nodeType": "YulTypedName",
														"src": "9840:7:1",
														"type": ""
													}
												],
												"src": "9803:77:1"
											},
											{
												"body": {
													"nativeSrc": "9951:53:1",
													"nodeType": "YulBlock",
													"src": "9951:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9968:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "9968:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9991:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "9991:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "9973:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "9973:17:1"
																		},
																		"nativeSrc": "9973:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9973:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9961:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9961:6:1"
																},
																"nativeSrc": "9961:37:1",
																"nodeType": "YulFunctionCall",
																"src": "9961:37:1"
															},
															"nativeSrc": "9961:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "9961:37:1"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "9886:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9939:5:1",
														"nodeType": "YulTypedName",
														"src": "9939:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9946:3:1",
														"nodeType": "YulTypedName",
														"src": "9946:3:1",
														"type": ""
													}
												],
												"src": "9886:118:1"
											},
											{
												"body": {
													"nativeSrc": "10075:53:1",
													"nodeType": "YulBlock",
													"src": "10075:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10092:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "10092:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10115:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "10115:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "10097:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "10097:17:1"
																		},
																		"nativeSrc": "10097:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10097:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10085:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10085:6:1"
																},
																"nativeSrc": "10085:37:1",
																"nodeType": "YulFunctionCall",
																"src": "10085:37:1"
															},
															"nativeSrc": "10085:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "10085:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "10010:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10063:5:1",
														"nodeType": "YulTypedName",
														"src": "10063:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10070:3:1",
														"nodeType": "YulTypedName",
														"src": "10070:3:1",
														"type": ""
													}
												],
												"src": "10010:118:1"
											},
											{
												"body": {
													"nativeSrc": "10344:454:1",
													"nodeType": "YulBlock",
													"src": "10344:454:1",
													"statements": [
														{
															"nativeSrc": "10354:27:1",
															"nodeType": "YulAssignment",
															"src": "10354:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10366:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "10366:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10377:3:1",
																		"nodeType": "YulLiteral",
																		"src": "10377:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10362:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10362:3:1"
																},
																"nativeSrc": "10362:19:1",
																"nodeType": "YulFunctionCall",
																"src": "10362:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10354:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "10354:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10435:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "10435:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10448:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10448:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10459:1:1",
																				"nodeType": "YulLiteral",
																				"src": "10459:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10444:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10444:3:1"
																		},
																		"nativeSrc": "10444:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10444:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "10391:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "10391:43:1"
																},
																"nativeSrc": "10391:71:1",
																"nodeType": "YulFunctionCall",
																"src": "10391:71:1"
															},
															"nativeSrc": "10391:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "10391:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10516:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "10516:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10529:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10529:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10540:2:1",
																				"nodeType": "YulLiteral",
																				"src": "10540:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10525:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10525:3:1"
																		},
																		"nativeSrc": "10525:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10525:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "10472:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "10472:43:1"
																},
																"nativeSrc": "10472:72:1",
																"nodeType": "YulFunctionCall",
																"src": "10472:72:1"
															},
															"nativeSrc": "10472:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "10472:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10598:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "10598:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10611:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10611:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10622:2:1",
																				"nodeType": "YulLiteral",
																				"src": "10622:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10607:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10607:3:1"
																		},
																		"nativeSrc": "10607:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10607:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "10554:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "10554:43:1"
																},
																"nativeSrc": "10554:72:1",
																"nodeType": "YulFunctionCall",
																"src": "10554:72:1"
															},
															"nativeSrc": "10554:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "10554:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "10680:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "10680:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10693:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10693:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10704:2:1",
																				"nodeType": "YulLiteral",
																				"src": "10704:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10689:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10689:3:1"
																		},
																		"nativeSrc": "10689:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10689:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10636:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "10636:43:1"
																},
																"nativeSrc": "10636:72:1",
																"nodeType": "YulFunctionCall",
																"src": "10636:72:1"
															},
															"nativeSrc": "10636:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "10636:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "10762:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "10762:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10775:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10775:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10786:3:1",
																				"nodeType": "YulLiteral",
																				"src": "10786:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10771:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10771:3:1"
																		},
																		"nativeSrc": "10771:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10771:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10718:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "10718:43:1"
																},
																"nativeSrc": "10718:73:1",
																"nodeType": "YulFunctionCall",
																"src": "10718:73:1"
															},
															"nativeSrc": "10718:73:1",
															"nodeType": "YulExpressionStatement",
															"src": "10718:73:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "10134:664:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10284:9:1",
														"nodeType": "YulTypedName",
														"src": "10284:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "10296:6:1",
														"nodeType": "YulTypedName",
														"src": "10296:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "10304:6:1",
														"nodeType": "YulTypedName",
														"src": "10304:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10312:6:1",
														"nodeType": "YulTypedName",
														"src": "10312:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10320:6:1",
														"nodeType": "YulTypedName",
														"src": "10320:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10328:6:1",
														"nodeType": "YulTypedName",
														"src": "10328:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10339:4:1",
														"nodeType": "YulTypedName",
														"src": "10339:4:1",
														"type": ""
													}
												],
												"src": "10134:664:1"
											},
											{
												"body": {
													"nativeSrc": "10900:73:1",
													"nodeType": "YulBlock",
													"src": "10900:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10917:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "10917:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10922:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "10922:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10910:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10910:6:1"
																},
																"nativeSrc": "10910:19:1",
																"nodeType": "YulFunctionCall",
																"src": "10910:19:1"
															},
															"nativeSrc": "10910:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "10910:19:1"
														},
														{
															"nativeSrc": "10938:29:1",
															"nodeType": "YulAssignment",
															"src": "10938:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10957:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "10957:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10962:4:1",
																		"nodeType": "YulLiteral",
																		"src": "10962:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10953:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10953:3:1"
																},
																"nativeSrc": "10953:14:1",
																"nodeType": "YulFunctionCall",
																"src": "10953:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "10938:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "10938:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "10804:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10872:3:1",
														"nodeType": "YulTypedName",
														"src": "10872:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10877:6:1",
														"nodeType": "YulTypedName",
														"src": "10877:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "10888:11:1",
														"nodeType": "YulTypedName",
														"src": "10888:11:1",
														"type": ""
													}
												],
												"src": "10804:169:1"
											},
											{
												"body": {
													"nativeSrc": "11041:77:1",
													"nodeType": "YulBlock",
													"src": "11041:77:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "11058:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "11058:3:1"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "11063:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "11063:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11068:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11068:6:1"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "11052:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "11052:5:1"
																},
																"nativeSrc": "11052:23:1",
																"nodeType": "YulFunctionCall",
																"src": "11052:23:1"
															},
															"nativeSrc": "11052:23:1",
															"nodeType": "YulExpressionStatement",
															"src": "11052:23:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "11095:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "11095:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "11100:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "11100:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11091:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11091:3:1"
																		},
																		"nativeSrc": "11091:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11091:16:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11109:1:1",
																		"nodeType": "YulLiteral",
																		"src": "11109:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11084:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11084:6:1"
																},
																"nativeSrc": "11084:27:1",
																"nodeType": "YulFunctionCall",
																"src": "11084:27:1"
															},
															"nativeSrc": "11084:27:1",
															"nodeType": "YulExpressionStatement",
															"src": "11084:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "10979:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "11023:3:1",
														"nodeType": "YulTypedName",
														"src": "11023:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "11028:3:1",
														"nodeType": "YulTypedName",
														"src": "11028:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "11033:6:1",
														"nodeType": "YulTypedName",
														"src": "11033:6:1",
														"type": ""
													}
												],
												"src": "10979:139:1"
											},
											{
												"body": {
													"nativeSrc": "11172:54:1",
													"nodeType": "YulBlock",
													"src": "11172:54:1",
													"statements": [
														{
															"nativeSrc": "11182:38:1",
															"nodeType": "YulAssignment",
															"src": "11182:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11200:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "11200:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11207:2:1",
																				"nodeType": "YulLiteral",
																				"src": "11207:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11196:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11196:3:1"
																		},
																		"nativeSrc": "11196:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11196:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "11216:2:1",
																				"nodeType": "YulLiteral",
																				"src": "11216:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "11212:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11212:3:1"
																		},
																		"nativeSrc": "11212:7:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11212:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "11192:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11192:3:1"
																},
																"nativeSrc": "11192:28:1",
																"nodeType": "YulFunctionCall",
																"src": "11192:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "11182:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11182:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "11124:102:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11155:5:1",
														"nodeType": "YulTypedName",
														"src": "11155:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "11165:6:1",
														"nodeType": "YulTypedName",
														"src": "11165:6:1",
														"type": ""
													}
												],
												"src": "11124:102:1"
											},
											{
												"body": {
													"nativeSrc": "11324:285:1",
													"nodeType": "YulBlock",
													"src": "11324:285:1",
													"statements": [
														{
															"nativeSrc": "11334:53:1",
															"nodeType": "YulVariableDeclaration",
															"src": "11334:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11381:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "11381:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "11348:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "11348:32:1"
																},
																"nativeSrc": "11348:39:1",
																"nodeType": "YulFunctionCall",
																"src": "11348:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "11338:6:1",
																	"nodeType": "YulTypedName",
																	"src": "11338:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11396:78:1",
															"nodeType": "YulAssignment",
															"src": "11396:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11462:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "11462:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11467:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11467:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11403:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "11403:58:1"
																},
																"nativeSrc": "11403:71:1",
																"nodeType": "YulFunctionCall",
																"src": "11403:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11396:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11396:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11522:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "11522:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11529:4:1",
																				"nodeType": "YulLiteral",
																				"src": "11529:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11518:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11518:3:1"
																		},
																		"nativeSrc": "11518:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11518:16:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "11536:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "11536:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11541:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11541:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "11483:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "11483:34:1"
																},
																"nativeSrc": "11483:65:1",
																"nodeType": "YulFunctionCall",
																"src": "11483:65:1"
															},
															"nativeSrc": "11483:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "11483:65:1"
														},
														{
															"nativeSrc": "11557:46:1",
															"nodeType": "YulAssignment",
															"src": "11557:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11568:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "11568:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "11595:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "11595:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "11573:21:1",
																			"nodeType": "YulIdentifier",
																			"src": "11573:21:1"
																		},
																		"nativeSrc": "11573:29:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11573:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11564:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11564:3:1"
																},
																"nativeSrc": "11564:39:1",
																"nodeType": "YulFunctionCall",
																"src": "11564:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11557:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11557:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11232:377:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11305:5:1",
														"nodeType": "YulTypedName",
														"src": "11305:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11312:3:1",
														"nodeType": "YulTypedName",
														"src": "11312:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11320:3:1",
														"nodeType": "YulTypedName",
														"src": "11320:3:1",
														"type": ""
													}
												],
												"src": "11232:377:1"
											},
											{
												"body": {
													"nativeSrc": "11733:195:1",
													"nodeType": "YulBlock",
													"src": "11733:195:1",
													"statements": [
														{
															"nativeSrc": "11743:26:1",
															"nodeType": "YulAssignment",
															"src": "11743:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11755:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "11755:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11766:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11766:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11751:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11751:3:1"
																},
																"nativeSrc": "11751:18:1",
																"nodeType": "YulFunctionCall",
																"src": "11751:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11743:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "11743:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11790:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11790:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11801:1:1",
																				"nodeType": "YulLiteral",
																				"src": "11801:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11786:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11786:3:1"
																		},
																		"nativeSrc": "11786:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11786:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11809:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "11809:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11815:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11815:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11805:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11805:3:1"
																		},
																		"nativeSrc": "11805:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11805:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11779:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11779:6:1"
																},
																"nativeSrc": "11779:47:1",
																"nodeType": "YulFunctionCall",
																"src": "11779:47:1"
															},
															"nativeSrc": "11779:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "11779:47:1"
														},
														{
															"nativeSrc": "11835:86:1",
															"nodeType": "YulAssignment",
															"src": "11835:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11907:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11907:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "11916:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "11916:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11843:63:1",
																	"nodeType": "YulIdentifier",
																	"src": "11843:63:1"
																},
																"nativeSrc": "11843:78:1",
																"nodeType": "YulFunctionCall",
																"src": "11843:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11835:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "11835:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11615:313:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11705:9:1",
														"nodeType": "YulTypedName",
														"src": "11705:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11717:6:1",
														"nodeType": "YulTypedName",
														"src": "11717:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11728:4:1",
														"nodeType": "YulTypedName",
														"src": "11728:4:1",
														"type": ""
													}
												],
												"src": "11615:313:1"
											},
											{
												"body": {
													"nativeSrc": "11992:40:1",
													"nodeType": "YulBlock",
													"src": "11992:40:1",
													"statements": [
														{
															"nativeSrc": "12003:22:1",
															"nodeType": "YulAssignment",
															"src": "12003:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12019:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "12019:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12013:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "12013:5:1"
																},
																"nativeSrc": "12013:12:1",
																"nodeType": "YulFunctionCall",
																"src": "12013:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "12003:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12003:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "11934:98:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11975:5:1",
														"nodeType": "YulTypedName",
														"src": "11975:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "11985:6:1",
														"nodeType": "YulTypedName",
														"src": "11985:6:1",
														"type": ""
													}
												],
												"src": "11934:98:1"
											},
											{
												"body": {
													"nativeSrc": "12094:60:1",
													"nodeType": "YulBlock",
													"src": "12094:60:1",
													"statements": [
														{
															"nativeSrc": "12104:11:1",
															"nodeType": "YulAssignment",
															"src": "12104:11:1",
															"value": {
																"name": "ptr",
																"nativeSrc": "12112:3:1",
																"nodeType": "YulIdentifier",
																"src": "12112:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "12104:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "12104:4:1"
																}
															]
														},
														{
															"nativeSrc": "12125:22:1",
															"nodeType": "YulAssignment",
															"src": "12125:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "12137:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "12137:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12142:4:1",
																		"nodeType": "YulLiteral",
																		"src": "12142:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12133:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12133:3:1"
																},
																"nativeSrc": "12133:14:1",
																"nodeType": "YulFunctionCall",
																"src": "12133:14:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "12125:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "12125:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_bytes_memory_ptr",
												"nativeSrc": "12038:116:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "12081:3:1",
														"nodeType": "YulTypedName",
														"src": "12081:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "12089:4:1",
														"nodeType": "YulTypedName",
														"src": "12089:4:1",
														"type": ""
													}
												],
												"src": "12038:116:1"
											},
											{
												"body": {
													"nativeSrc": "12215:99:1",
													"nodeType": "YulBlock",
													"src": "12215:99:1",
													"statements": [
														{
															"nativeSrc": "12226:42:1",
															"nodeType": "YulVariableDeclaration",
															"src": "12226:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "12263:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "12263:3:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "12257:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "12257:5:1"
																		},
																		"nativeSrc": "12257:10:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12257:10:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_bytes32",
																	"nativeSrc": "12239:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "12239:17:1"
																},
																"nativeSrc": "12239:29:1",
																"nodeType": "YulFunctionCall",
																"src": "12239:29:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "12230:5:1",
																	"nodeType": "YulTypedName",
																	"src": "12230:5:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12278:29:1",
															"nodeType": "YulAssignment",
															"src": "12278:29:1",
															"value": {
																"name": "value",
																"nativeSrc": "12302:5:1",
																"nodeType": "YulIdentifier",
																"src": "12302:5:1"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "12278:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "12278:11:1"
																}
															]
														}
													]
												},
												"name": "read_from_memoryt_bytes32",
												"nativeSrc": "12160:154:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "12195:3:1",
														"nodeType": "YulTypedName",
														"src": "12195:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "returnValue",
														"nativeSrc": "12203:11:1",
														"nodeType": "YulTypedName",
														"src": "12203:11:1",
														"type": ""
													}
												],
												"src": "12160:154:1"
											},
											{
												"body": {
													"nativeSrc": "12410:504:1",
													"nodeType": "YulBlock",
													"src": "12410:504:1",
													"statements": [
														{
															"nativeSrc": "12421:52:1",
															"nodeType": "YulVariableDeclaration",
															"src": "12421:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "12467:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "12467:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "12435:31:1",
																	"nodeType": "YulIdentifier",
																	"src": "12435:31:1"
																},
																"nativeSrc": "12435:38:1",
																"nodeType": "YulFunctionCall",
																"src": "12435:38:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "12425:6:1",
																	"nodeType": "YulTypedName",
																	"src": "12425:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12482:21:1",
															"nodeType": "YulVariableDeclaration",
															"src": "12482:21:1",
															"value": {
																"name": "array",
																"nativeSrc": "12498:5:1",
																"nodeType": "YulIdentifier",
																"src": "12498:5:1"
															},
															"variables": [
																{
																	"name": "dataArea",
																	"nativeSrc": "12486:8:1",
																	"nodeType": "YulTypedName",
																	"src": "12486:8:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12513:52:1",
															"nodeType": "YulAssignment",
															"src": "12513:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "12559:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "12559:5:1"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_bytes_memory_ptr",
																	"nativeSrc": "12525:33:1",
																	"nodeType": "YulIdentifier",
																	"src": "12525:33:1"
																},
																"nativeSrc": "12525:40:1",
																"nodeType": "YulFunctionCall",
																"src": "12525:40:1"
															},
															"variableNames": [
																{
																	"name": "dataArea",
																	"nativeSrc": "12513:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "12513:8:1"
																}
															]
														},
														{
															"nativeSrc": "12575:44:1",
															"nodeType": "YulAssignment",
															"src": "12575:44:1",
															"value": {
																"arguments": [
																	{
																		"name": "dataArea",
																		"nativeSrc": "12610:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "12610:8:1"
																	}
																],
																"functionName": {
																	"name": "read_from_memoryt_bytes32",
																	"nativeSrc": "12584:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "12584:25:1"
																},
																"nativeSrc": "12584:35:1",
																"nodeType": "YulFunctionCall",
																"src": "12584:35:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12575:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "12575:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12647:260:1",
																"nodeType": "YulBlock",
																"src": "12647:260:1",
																"statements": [
																	{
																		"nativeSrc": "12661:236:1",
																		"nodeType": "YulAssignment",
																		"src": "12661:236:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "value",
																					"nativeSrc": "12691:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "12691:5:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "12758:1:1",
																									"nodeType": "YulLiteral",
																									"src": "12758:1:1",
																									"type": "",
																									"value": "8"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "12765:2:1",
																											"nodeType": "YulLiteral",
																											"src": "12765:2:1",
																											"type": "",
																											"value": "32"
																										},
																										{
																											"name": "length",
																											"nativeSrc": "12769:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "12769:6:1"
																										}
																									],
																									"functionName": {
																										"name": "sub",
																										"nativeSrc": "12761:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "12761:3:1"
																									},
																									"nativeSrc": "12761:15:1",
																									"nodeType": "YulFunctionCall",
																									"src": "12761:15:1"
																								}
																							],
																							"functionName": {
																								"name": "mul",
																								"nativeSrc": "12754:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "12754:3:1"
																							},
																							"nativeSrc": "12754:23:1",
																							"nodeType": "YulFunctionCall",
																							"src": "12754:23:1"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "12799:66:1",
																							"nodeType": "YulLiteral",
																							"src": "12799:66:1",
																							"type": "",
																							"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																						}
																					],
																					"functionName": {
																						"name": "shift_left_dynamic",
																						"nativeSrc": "12714:18:1",
																						"nodeType": "YulIdentifier",
																						"src": "12714:18:1"
																					},
																					"nativeSrc": "12714:169:1",
																					"nodeType": "YulFunctionCall",
																					"src": "12714:169:1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "12670:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "12670:3:1"
																			},
																			"nativeSrc": "12670:227:1",
																			"nodeType": "YulFunctionCall",
																			"src": "12670:227:1"
																		},
																		"variableNames": [
																			{
																				"name": "value",
																				"nativeSrc": "12661:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "12661:5:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "12635:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12635:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12643:2:1",
																		"nodeType": "YulLiteral",
																		"src": "12643:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "12632:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "12632:2:1"
																},
																"nativeSrc": "12632:14:1",
																"nodeType": "YulFunctionCall",
																"src": "12632:14:1"
															},
															"nativeSrc": "12629:278:1",
															"nodeType": "YulIf",
															"src": "12629:278:1"
														}
													]
												},
												"name": "convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32",
												"nativeSrc": "12320:594:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "12394:5:1",
														"nodeType": "YulTypedName",
														"src": "12394:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "12404:5:1",
														"nodeType": "YulTypedName",
														"src": "12404:5:1",
														"type": ""
													}
												],
												"src": "12320:594:1"
											},
											{
												"body": {
													"nativeSrc": "12964:147:1",
													"nodeType": "YulBlock",
													"src": "12964:147:1",
													"statements": [
														{
															"nativeSrc": "12974:25:1",
															"nodeType": "YulAssignment",
															"src": "12974:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12997:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "12997:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12979:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "12979:17:1"
																},
																"nativeSrc": "12979:20:1",
																"nodeType": "YulFunctionCall",
																"src": "12979:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12974:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "12974:1:1"
																}
															]
														},
														{
															"nativeSrc": "13008:25:1",
															"nodeType": "YulAssignment",
															"src": "13008:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13031:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "13031:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13013:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "13013:17:1"
																},
																"nativeSrc": "13013:20:1",
																"nodeType": "YulFunctionCall",
																"src": "13013:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13008:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "13008:1:1"
																}
															]
														},
														{
															"nativeSrc": "13042:16:1",
															"nodeType": "YulAssignment",
															"src": "13042:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13053:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "13053:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13056:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "13056:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13049:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13049:3:1"
																},
																"nativeSrc": "13049:9:1",
																"nodeType": "YulFunctionCall",
																"src": "13049:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "13042:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13042:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13082:22:1",
																"nodeType": "YulBlock",
																"src": "13082:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13084:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "13084:16:1"
																			},
																			"nativeSrc": "13084:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "13084:18:1"
																		},
																		"nativeSrc": "13084:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "13084:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13074:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "13074:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "13077:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "13077:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13071:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "13071:2:1"
																},
																"nativeSrc": "13071:10:1",
																"nodeType": "YulFunctionCall",
																"src": "13071:10:1"
															},
															"nativeSrc": "13068:36:1",
															"nodeType": "YulIf",
															"src": "13068:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "12920:191:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12951:1:1",
														"nodeType": "YulTypedName",
														"src": "12951:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12954:1:1",
														"nodeType": "YulTypedName",
														"src": "12954:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "12960:3:1",
														"nodeType": "YulTypedName",
														"src": "12960:3:1",
														"type": ""
													}
												],
												"src": "12920:191:1"
											},
											{
												"body": {
													"nativeSrc": "13271:288:1",
													"nodeType": "YulBlock",
													"src": "13271:288:1",
													"statements": [
														{
															"nativeSrc": "13281:26:1",
															"nodeType": "YulAssignment",
															"src": "13281:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13293:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "13293:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13304:2:1",
																		"nodeType": "YulLiteral",
																		"src": "13304:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13289:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13289:3:1"
																},
																"nativeSrc": "13289:18:1",
																"nodeType": "YulFunctionCall",
																"src": "13289:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13281:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "13281:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13361:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13361:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13374:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13374:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13385:1:1",
																				"nodeType": "YulLiteral",
																				"src": "13385:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13370:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13370:3:1"
																		},
																		"nativeSrc": "13370:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13370:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13317:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "13317:43:1"
																},
																"nativeSrc": "13317:71:1",
																"nodeType": "YulFunctionCall",
																"src": "13317:71:1"
															},
															"nativeSrc": "13317:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "13317:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13442:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13442:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13455:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13455:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13466:2:1",
																				"nodeType": "YulLiteral",
																				"src": "13466:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13451:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13451:3:1"
																		},
																		"nativeSrc": "13451:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13451:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13398:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "13398:43:1"
																},
																"nativeSrc": "13398:72:1",
																"nodeType": "YulFunctionCall",
																"src": "13398:72:1"
															},
															"nativeSrc": "13398:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "13398:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13524:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13524:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13537:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13537:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13548:2:1",
																				"nodeType": "YulLiteral",
																				"src": "13548:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13533:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13533:3:1"
																		},
																		"nativeSrc": "13533:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13533:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13480:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "13480:43:1"
																},
																"nativeSrc": "13480:72:1",
																"nodeType": "YulFunctionCall",
																"src": "13480:72:1"
															},
															"nativeSrc": "13480:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "13480:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "13117:442:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13227:9:1",
														"nodeType": "YulTypedName",
														"src": "13227:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13239:6:1",
														"nodeType": "YulTypedName",
														"src": "13239:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13247:6:1",
														"nodeType": "YulTypedName",
														"src": "13247:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13255:6:1",
														"nodeType": "YulTypedName",
														"src": "13255:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13266:4:1",
														"nodeType": "YulTypedName",
														"src": "13266:4:1",
														"type": ""
													}
												],
												"src": "13117:442:1"
											},
											{
												"body": {
													"nativeSrc": "13663:124:1",
													"nodeType": "YulBlock",
													"src": "13663:124:1",
													"statements": [
														{
															"nativeSrc": "13673:26:1",
															"nodeType": "YulAssignment",
															"src": "13673:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13685:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "13685:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13696:2:1",
																		"nodeType": "YulLiteral",
																		"src": "13696:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13681:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13681:3:1"
																},
																"nativeSrc": "13681:18:1",
																"nodeType": "YulFunctionCall",
																"src": "13681:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13673:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "13673:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13753:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13753:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13766:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13766:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13777:1:1",
																				"nodeType": "YulLiteral",
																				"src": "13777:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13762:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13762:3:1"
																		},
																		"nativeSrc": "13762:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13762:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13709:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "13709:43:1"
																},
																"nativeSrc": "13709:71:1",
																"nodeType": "YulFunctionCall",
																"src": "13709:71:1"
															},
															"nativeSrc": "13709:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "13709:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "13565:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13635:9:1",
														"nodeType": "YulTypedName",
														"src": "13635:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13647:6:1",
														"nodeType": "YulTypedName",
														"src": "13647:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13658:4:1",
														"nodeType": "YulTypedName",
														"src": "13658:4:1",
														"type": ""
													}
												],
												"src": "13565:222:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_dataslot_t_bytes_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function read_from_memoryt_bytes32(ptr) -> returnValue {\n\n        let value := cleanup_t_bytes32(mload(ptr))\n\n        returnValue :=\n\n        value\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value {\n\n        let length := array_length_t_bytes_memory_ptr(array)\n        let dataArea := array\n\n        dataArea := array_dataslot_t_bytes_memory_ptr(array)\n\n        value := read_from_memoryt_bytes32(dataArea)\n\n        if lt(length, 32) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(32, length)),\n                    0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                )\n            )\n        }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2DB1 CODESIZE SUB DUP1 PUSH2 0x2DB1 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x771 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x436C6172656E6365446F6C617200000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x436C6172656E6365446F6C617200000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x434C440000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x11B SWAP2 SWAP1 PUSH2 0x9D6 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x12B SWAP2 SWAP1 PUSH2 0x9D6 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0xAB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1AD DUP2 PUSH2 0x295 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x1C2 PUSH1 0x6 DUP4 PUSH2 0x358 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x120 DUP2 DUP2 MSTORE POP POP PUSH2 0x1DE PUSH1 0x7 DUP3 PUSH2 0x358 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x140 DUP2 DUP2 MSTORE POP POP DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP CHAINID PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH2 0x21B PUSH2 0x3A5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 MSTORE POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP PUSH2 0x28F CALLER PUSH2 0x26B PUSH2 0x3FF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH2 0x277 SWAP2 SWAP1 PUSH2 0xC35 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x284 SWAP2 SWAP1 PUSH2 0xC7F JUMP JUMPDEST PUSH2 0x407 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0xED2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH2 0x379 JUMPI PUSH2 0x372 DUP4 PUSH2 0x48C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH2 0x39F JUMP JUMPDEST DUP3 PUSH2 0x389 DUP4 PUSH2 0x4F1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH0 ADD SWAP1 DUP2 PUSH2 0x397 SWAP2 SWAP1 PUSH2 0x9D6 JUMP JUMPDEST POP PUSH1 0xFF PUSH0 SHL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3E4 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xCE7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x477 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46E SWAP2 SWAP1 PUSH2 0xAB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x488 PUSH0 DUP4 DUP4 PUSH2 0x4FA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH2 0x4D8 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x305A27A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CF SWAP2 SWAP1 PUSH2 0xD9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH2 0x4E4 SWAP1 PUSH2 0xDEB JUMP JUMPDEST PUSH0 SHR OR PUSH0 SHL SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x54A JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x53E SWAP2 SWAP1 PUSH2 0xE51 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x618 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x5D3 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5CA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x65F JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x6A9 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x706 SWAP2 SWAP1 PUSH2 0xEB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x740 DUP3 PUSH2 0x717 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x750 DUP2 PUSH2 0x736 JUMP JUMPDEST DUP2 EQ PUSH2 0x75A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x76B DUP2 PUSH2 0x747 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x786 JUMPI PUSH2 0x785 PUSH2 0x713 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x793 DUP5 DUP3 DUP6 ADD PUSH2 0x75D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x817 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x82A JUMPI PUSH2 0x829 PUSH2 0x7D3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x88C PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x851 JUMP JUMPDEST PUSH2 0x896 DUP7 DUP4 PUSH2 0x851 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8DA PUSH2 0x8D5 PUSH2 0x8D0 DUP5 PUSH2 0x8AE JUMP JUMPDEST PUSH2 0x8B7 JUMP JUMPDEST PUSH2 0x8AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8F3 DUP4 PUSH2 0x8C0 JUMP JUMPDEST PUSH2 0x907 PUSH2 0x8FF DUP3 PUSH2 0x8E1 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x85D JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x91B PUSH2 0x90F JUMP JUMPDEST PUSH2 0x926 DUP2 DUP5 DUP5 PUSH2 0x8EA JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x949 JUMPI PUSH2 0x93E PUSH0 DUP3 PUSH2 0x913 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x92C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x98E JUMPI PUSH2 0x95F DUP2 PUSH2 0x830 JUMP JUMPDEST PUSH2 0x968 DUP5 PUSH2 0x842 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x977 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x98B PUSH2 0x983 DUP6 PUSH2 0x842 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x92B JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9AE PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x993 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9C6 DUP4 DUP4 PUSH2 0x99F JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9DF DUP3 PUSH2 0x79C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9F8 JUMPI PUSH2 0x9F7 PUSH2 0x7A6 JUMP JUMPDEST JUMPDEST PUSH2 0xA02 DUP3 SLOAD PUSH2 0x800 JUMP JUMPDEST PUSH2 0xA0D DUP3 DUP3 DUP6 PUSH2 0x94D JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xA3E JUMPI PUSH0 DUP5 ISZERO PUSH2 0xA2C JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xA36 DUP6 DUP3 PUSH2 0x9BB JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xA9D JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xA4C DUP7 PUSH2 0x830 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xA73 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA4E JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xA90 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xA8C PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x99F JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xAAE DUP2 PUSH2 0x736 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAC7 PUSH0 DUP4 ADD DUP5 PUSH2 0xAA5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0xB4F JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0xB2B JUMPI PUSH2 0xB2A PUSH2 0xACD JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0xB3A JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0xB48 DUP6 PUSH2 0xAFA JUMP JUMPDEST SWAP5 POP PUSH2 0xB0F JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xB67 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xC22 JUMP JUMPDEST DUP2 PUSH2 0xB74 JUMPI PUSH0 SWAP1 POP PUSH2 0xC22 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xB8A JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xB94 JUMPI PUSH2 0xBC3 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xC22 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xBA6 JUMPI PUSH2 0xBA5 PUSH2 0xACD JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0xBBD JUMPI PUSH2 0xBBC PUSH2 0xACD JUMP JUMPDEST JUMPDEST POP PUSH2 0xC22 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xBF8 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0xBF3 JUMPI PUSH2 0xBF2 PUSH2 0xACD JUMP JUMPDEST JUMPDEST PUSH2 0xC22 JUMP JUMPDEST PUSH2 0xC05 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0xB06 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0xC1C JUMPI PUSH2 0xC1B PUSH2 0xACD JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC3F DUP3 PUSH2 0x8AE JUMP JUMPDEST SWAP2 POP PUSH2 0xC4A DUP4 PUSH2 0xC29 JUMP JUMPDEST SWAP3 POP PUSH2 0xC77 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0xB58 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC89 DUP3 PUSH2 0x8AE JUMP JUMPDEST SWAP2 POP PUSH2 0xC94 DUP4 PUSH2 0x8AE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xCA2 DUP2 PUSH2 0x8AE JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xCB9 JUMPI PUSH2 0xCB8 PUSH2 0xACD JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD2 DUP2 PUSH2 0xCC0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xCE1 DUP2 PUSH2 0x8AE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0xCFA PUSH0 DUP4 ADD DUP9 PUSH2 0xCC9 JUMP JUMPDEST PUSH2 0xD07 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0xCC9 JUMP JUMPDEST PUSH2 0xD14 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0xCC9 JUMP JUMPDEST PUSH2 0xD21 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xCD8 JUMP JUMPDEST PUSH2 0xD2E PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xAA5 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD70 DUP3 PUSH2 0x79C JUMP JUMPDEST PUSH2 0xD7A DUP2 DUP6 PUSH2 0xD38 JUMP JUMPDEST SWAP4 POP PUSH2 0xD8A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD48 JUMP JUMPDEST PUSH2 0xD93 DUP2 PUSH2 0xD56 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xDB6 DUP2 DUP5 PUSH2 0xD66 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDE2 DUP3 MLOAD PUSH2 0xCC0 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDF5 DUP3 PUSH2 0xDBE JUMP JUMPDEST DUP3 PUSH2 0xDFF DUP5 PUSH2 0xDC8 JUMP JUMPDEST SWAP1 POP PUSH2 0xE0A DUP2 PUSH2 0xDD7 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH2 0xE4A JUMPI PUSH2 0xE45 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH2 0x851 JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE5B DUP3 PUSH2 0x8AE JUMP JUMPDEST SWAP2 POP PUSH2 0xE66 DUP4 PUSH2 0x8AE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE7E JUMPI PUSH2 0xE7D PUSH2 0xACD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xE97 PUSH0 DUP4 ADD DUP7 PUSH2 0xAA5 JUMP JUMPDEST PUSH2 0xEA4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xCD8 JUMP JUMPDEST PUSH2 0xEB1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xCD8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xECC PUSH0 DUP4 ADD DUP5 PUSH2 0xCD8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x1E8E PUSH2 0xF23 PUSH0 CODECOPY PUSH0 PUSH2 0xD4F ADD MSTORE PUSH0 PUSH2 0xD14 ADD MSTORE PUSH0 PUSH2 0x1248 ADD MSTORE PUSH0 PUSH2 0x1227 ADD MSTORE PUSH0 PUSH2 0xA49 ADD MSTORE PUSH0 PUSH2 0xA9F ADD MSTORE PUSH0 PUSH2 0xAC8 ADD MSTORE PUSH2 0x1E8E PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x317 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x347 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x28F JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x201 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x179 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x115 PUSH2 0x363 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x16FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x17AF JUMP JUMPDEST PUSH2 0x3F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x1807 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x163 PUSH2 0x415 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x182F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x1848 JUMP JUMPDEST PUSH2 0x41E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x1807 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B1 PUSH2 0x44C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x18B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CF PUSH2 0x454 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0x18E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x17AF JUMP JUMPDEST PUSH2 0x462 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x18FD JUMP JUMPDEST PUSH2 0x478 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x182F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x239 PUSH2 0x4BD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x255 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x18FD JUMP JUMPDEST PUSH2 0x4D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x182F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x273 PUSH2 0x4E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x286 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x297 PUSH2 0x586 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B5 PUSH2 0x5AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x16FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x17AF JUMP JUMPDEST PUSH2 0x63E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0x1807 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x315 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x1B17 JUMP JUMPDEST PUSH2 0x660 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x331 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x1BB4 JUMP JUMPDEST PUSH2 0x7A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33E SWAP2 SWAP1 PUSH2 0x182F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x361 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35C SWAP2 SWAP1 PUSH2 0x18FD JUMP JUMPDEST PUSH2 0x827 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x372 SWAP1 PUSH2 0x1C1F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x39E SWAP1 PUSH2 0x1C1F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3E9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3C0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3E9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3CC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3FD PUSH2 0x8AB JUMP JUMPDEST SWAP1 POP PUSH2 0x40A DUP2 DUP6 DUP6 PUSH2 0x8B2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x428 PUSH2 0x8AB JUMP JUMPDEST SWAP1 POP PUSH2 0x435 DUP6 DUP3 DUP6 PUSH2 0x8C4 JUMP JUMPDEST PUSH2 0x440 DUP6 DUP6 DUP6 PUSH2 0x956 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x45D PUSH2 0xA46 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x46A PUSH2 0xAFC JUMP JUMPDEST PUSH2 0x474 DUP3 DUP3 PUSH2 0xB83 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4C5 PUSH2 0xAFC JUMP JUMPDEST PUSH2 0x4CE PUSH0 PUSH2 0xC02 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x4DA DUP3 PUSH2 0xCC5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x60 PUSH2 0x4F2 PUSH2 0xD0B JUMP JUMPDEST PUSH2 0x4FA PUSH2 0xD46 JUMP JUMPDEST CHAINID ADDRESS PUSH0 DUP1 SHL PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x519 JUMPI PUSH2 0x518 PUSH2 0x1C4F JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x547 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x5BD SWAP1 PUSH2 0x1C1F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5E9 SWAP1 PUSH2 0x1C1F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x634 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x60B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x634 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x617 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x648 PUSH2 0x8AB JUMP JUMPDEST SWAP1 POP PUSH2 0x655 DUP2 DUP6 DUP6 PUSH2 0x956 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x6A5 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69C SWAP2 SWAP1 PUSH2 0x182F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x6D3 DUP13 PUSH2 0xD81 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6E9 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C7C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH0 PUSH2 0x70B DUP3 PUSH2 0xDD4 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x71A DUP3 DUP8 DUP8 DUP8 PUSH2 0xDED JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x78E JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x785 SWAP3 SWAP2 SWAP1 PUSH2 0x1CDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x799 DUP11 DUP11 DUP11 PUSH2 0x8B2 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x82F PUSH2 0xAFC JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x89F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x896 SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8A8 DUP2 PUSH2 0xC02 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8BF DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xE1B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8CF DUP5 DUP5 PUSH2 0x7A5 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x950 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x941 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x938 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x94F DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xE1B JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9C6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9BD SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA36 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA2D SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA41 DUP4 DUP4 DUP4 PUSH2 0xFEA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xAC1 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xAEE JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0xAF9 JUMP JUMPDEST PUSH2 0xAF6 PUSH2 0x1203 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB04 PUSH2 0x8AB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB22 PUSH2 0x586 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB81 JUMPI PUSH2 0xB45 PUSH2 0x8AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB78 SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBF3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEA SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBFE PUSH0 DUP4 DUP4 PUSH2 0xFEA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD41 PUSH1 0x6 PUSH32 0x0 PUSH2 0x1298 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD7C PUSH1 0x7 PUSH32 0x0 PUSH2 0x1298 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDE6 PUSH2 0xDE0 PUSH2 0xA46 JUMP JUMPDEST DUP4 PUSH2 0x1345 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH2 0xDFD DUP9 DUP9 DUP9 DUP9 PUSH2 0x1385 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xE0D DUP3 DUP3 PUSH2 0x146C JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE8B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE82 SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEFB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF2 SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xFE4 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xFDB SWAP2 SWAP1 PUSH2 0x182F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x103A JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x102E SWAP2 SWAP1 PUSH2 0x1D64 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1108 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x10C3 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10BA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x114F JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1199 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x11F6 SWAP2 SWAP1 PUSH2 0x182F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x127D SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH0 SHL DUP4 EQ PUSH2 0x12B4 JUMPI PUSH2 0x12AD DUP4 PUSH2 0x15CE JUMP JUMPDEST SWAP1 POP PUSH2 0x133F JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x12C0 SWAP1 PUSH2 0x1C1F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x12EC SWAP1 PUSH2 0x1C1F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1337 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x130E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1337 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x131A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH0 SHR GT ISZERO PUSH2 0x13C1 JUMPI PUSH0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1462 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x13E4 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DE8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1404 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1455 JUMPI PUSH0 PUSH1 0x1 PUSH0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x1462 JUMP JUMPDEST DUP1 PUSH0 DUP1 PUSH0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x147F JUMPI PUSH2 0x147E PUSH2 0x1E2B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1492 JUMPI PUSH2 0x1491 PUSH2 0x1E2B JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x15CA JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x14AC JUMPI PUSH2 0x14AB PUSH2 0x1E2B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x14BF JUMPI PUSH2 0x14BE PUSH2 0x1E2B JUMP JUMPDEST JUMPDEST SUB PUSH2 0x14F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x150A JUMPI PUSH2 0x1509 PUSH2 0x1E2B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x151D JUMPI PUSH2 0x151C PUSH2 0x1E2B JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1561 JUMPI DUP1 PUSH0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1558 SWAP2 SWAP1 PUSH2 0x182F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x1574 JUMPI PUSH2 0x1573 PUSH2 0x1E2B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1587 JUMPI PUSH2 0x1586 PUSH2 0x1E2B JUMP JUMPDEST JUMPDEST SUB PUSH2 0x15C9 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C0 SWAP2 SWAP1 PUSH2 0x18E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x15DA DUP4 PUSH2 0x1640 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15F8 JUMPI PUSH2 0x15F7 PUSH2 0x1C4F JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x162A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xFF DUP4 PUSH0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x1685 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16D0 DUP3 PUSH2 0x168E JUMP JUMPDEST PUSH2 0x16DA DUP2 DUP6 PUSH2 0x1698 JUMP JUMPDEST SWAP4 POP PUSH2 0x16EA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x16A8 JUMP JUMPDEST PUSH2 0x16F3 DUP2 PUSH2 0x16B6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1716 DUP2 DUP5 PUSH2 0x16C6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x174B DUP3 PUSH2 0x1722 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x175B DUP2 PUSH2 0x1741 JUMP JUMPDEST DUP2 EQ PUSH2 0x1765 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1776 DUP2 PUSH2 0x1752 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x178E DUP2 PUSH2 0x177C JUMP JUMPDEST DUP2 EQ PUSH2 0x1798 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17A9 DUP2 PUSH2 0x1785 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17C5 JUMPI PUSH2 0x17C4 PUSH2 0x171E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17D2 DUP6 DUP3 DUP7 ADD PUSH2 0x1768 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17E3 DUP6 DUP3 DUP7 ADD PUSH2 0x179B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1801 DUP2 PUSH2 0x17ED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x181A PUSH0 DUP4 ADD DUP5 PUSH2 0x17F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1829 DUP2 PUSH2 0x177C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1842 PUSH0 DUP4 ADD DUP5 PUSH2 0x1820 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x185F JUMPI PUSH2 0x185E PUSH2 0x171E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x186C DUP7 DUP3 DUP8 ADD PUSH2 0x1768 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x187D DUP7 DUP3 DUP8 ADD PUSH2 0x1768 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x188E DUP7 DUP3 DUP8 ADD PUSH2 0x179B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18AD DUP2 PUSH2 0x1898 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18C6 PUSH0 DUP4 ADD DUP5 PUSH2 0x18A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18DE DUP2 PUSH2 0x18CC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18F7 PUSH0 DUP4 ADD DUP5 PUSH2 0x18D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1912 JUMPI PUSH2 0x1911 PUSH2 0x171E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x191F DUP5 DUP3 DUP6 ADD PUSH2 0x1768 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x195C DUP2 PUSH2 0x1928 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x196B DUP2 PUSH2 0x1741 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19A3 DUP2 PUSH2 0x177C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x19B4 DUP4 DUP4 PUSH2 0x199A JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19D6 DUP3 PUSH2 0x1971 JUMP JUMPDEST PUSH2 0x19E0 DUP2 DUP6 PUSH2 0x197B JUMP JUMPDEST SWAP4 POP PUSH2 0x19EB DUP4 PUSH2 0x198B JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A1B JUMPI DUP2 MLOAD PUSH2 0x1A02 DUP9 DUP3 PUSH2 0x19A9 JUMP JUMPDEST SWAP8 POP PUSH2 0x1A0D DUP4 PUSH2 0x19C0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x19EE JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x1A3B PUSH0 DUP4 ADD DUP11 PUSH2 0x1953 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1A4D DUP2 DUP10 PUSH2 0x16C6 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1A61 DUP2 DUP9 PUSH2 0x16C6 JUMP JUMPDEST SWAP1 POP PUSH2 0x1A70 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x1820 JUMP JUMPDEST PUSH2 0x1A7D PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x1962 JUMP JUMPDEST PUSH2 0x1A8A PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x18D5 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x1A9C DUP2 DUP5 PUSH2 0x19CC JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1ABD PUSH0 DUP4 ADD DUP5 PUSH2 0x1962 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1ACC DUP2 PUSH2 0x1898 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AD6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AE7 DUP2 PUSH2 0x1AC3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AF6 DUP2 PUSH2 0x18CC JUMP JUMPDEST DUP2 EQ PUSH2 0x1B00 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B11 DUP2 PUSH2 0x1AED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1B32 JUMPI PUSH2 0x1B31 PUSH2 0x171E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B3F DUP11 DUP3 DUP12 ADD PUSH2 0x1768 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1B50 DUP11 DUP3 DUP12 ADD PUSH2 0x1768 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x1B61 DUP11 DUP3 DUP12 ADD PUSH2 0x179B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x1B72 DUP11 DUP3 DUP12 ADD PUSH2 0x179B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x1B83 DUP11 DUP3 DUP12 ADD PUSH2 0x1AD9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x1B94 DUP11 DUP3 DUP12 ADD PUSH2 0x1B03 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x1BA5 DUP11 DUP3 DUP12 ADD PUSH2 0x1B03 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BCA JUMPI PUSH2 0x1BC9 PUSH2 0x171E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BD7 DUP6 DUP3 DUP7 ADD PUSH2 0x1768 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1BE8 DUP6 DUP3 DUP7 ADD PUSH2 0x1768 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1C36 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1C49 JUMPI PUSH2 0x1C48 PUSH2 0x1BF2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x1C8F PUSH0 DUP4 ADD DUP10 PUSH2 0x18D5 JUMP JUMPDEST PUSH2 0x1C9C PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x1962 JUMP JUMPDEST PUSH2 0x1CA9 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1962 JUMP JUMPDEST PUSH2 0x1CB6 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1820 JUMP JUMPDEST PUSH2 0x1CC3 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1820 JUMP JUMPDEST PUSH2 0x1CD0 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x1820 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1CEE PUSH0 DUP4 ADD DUP6 PUSH2 0x1962 JUMP JUMPDEST PUSH2 0x1CFB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1962 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1D15 PUSH0 DUP4 ADD DUP7 PUSH2 0x1962 JUMP JUMPDEST PUSH2 0x1D22 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1820 JUMP JUMPDEST PUSH2 0x1D2F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1820 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1D6E DUP3 PUSH2 0x177C JUMP JUMPDEST SWAP2 POP PUSH2 0x1D79 DUP4 PUSH2 0x177C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D91 JUMPI PUSH2 0x1D90 PUSH2 0x1D37 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1DAA PUSH0 DUP4 ADD DUP9 PUSH2 0x18D5 JUMP JUMPDEST PUSH2 0x1DB7 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x18D5 JUMP JUMPDEST PUSH2 0x1DC4 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x18D5 JUMP JUMPDEST PUSH2 0x1DD1 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1820 JUMP JUMPDEST PUSH2 0x1DDE PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1962 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1DFB PUSH0 DUP4 ADD DUP8 PUSH2 0x18D5 JUMP JUMPDEST PUSH2 0x1E08 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x18A4 JUMP JUMPDEST PUSH2 0x1E15 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x18D5 JUMP JUMPDEST PUSH2 0x1E22 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x18D5 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0xE2E20912DCA0D813AF96BCECFBB0 SMOD LOG1 ISZERO EXTCODECOPY PUSH18 0xD7F757426BD99304DEA4325764736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "79675:364:0:-:0;;;79736:202;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;78313:52;;;;;;;;;;;;;;;;;78352:4;72157:431;;;;;;;;;;;;;;;;;79824:12;12788:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12862:5;12854;:13;;;;;;:::i;:::-;;12887:7;12877;:17;;;;;;:::i;:::-;;12788:113;;23309:1;23285:26;;:12;:26;;;23281:95;;23362:1;23334:31;;;;;;;;;;;:::i;:::-;;;;;;;;23281:95;23385:32;23404:12;23385:18;;;:32;;:::i;:::-;23237:187;72230:45;72261:13;72230:4;:30;;;;:45;;;;:::i;:::-;72222:53;;;;;;72296:51;72330:16;72296:7;:33;;;;:51;;;;:::i;:::-;72285:62;;;;;;72387:4;72371:22;;;;;;72357:36;;;;;;72436:7;72420:25;;;;;;72403:42;;;;;;72473:13;72456:30;;;;;;72521:23;:21;;;:23;;:::i;:::-;72496:48;;;;;;72576:4;72554:27;;;;;;;;;;72157:431;;78313:52;79889:42:::3;79895:10;79920;:8;;;:10;;:::i;:::-;79914:2;:16;;;;:::i;:::-;79907:4;:23;;;;:::i;:::-;79889:5;;;:42;;:::i;:::-;79736:202:::0;79675:364;;24924:187;24997:16;25016:6;;;;;;;;;;;24997:25;;25041:8;25032:6;;:17;;;;;;;;;;;;;;;;;;25095:8;25064:40;;25085:8;25064:40;;;;;;;;;;;;24987:124;24924:187;:::o;66807:340::-;66903:11;66952:2;66936:5;66930:19;:24;66926:215;;;66977:20;66991:5;66977:13;;;:20;;:::i;:::-;66970:27;;;;66926:215;67069:5;67028:32;67054:5;67028:25;;;:32;;:::i;:::-;:38;;:46;;;;;;:::i;:::-;;65283:66;67112:17;;67088:42;;66807:340;;;;;:::o;72942:179::-;72997:7;70908:95;73055:11;;73068:14;;73084:13;73107:4;73033:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;73023:91;;;;;;73016:98;;72942:179;:::o;13894:82::-;13943:5;13967:2;13960:9;;13894:82;:::o;18613:208::-;18702:1;18683:21;;:7;:21;;;18679:91;;18756:1;18727:32;;;;;;;;;;;:::i;:::-;;;;;;;;18679:91;18779:35;18795:1;18799:7;18808:5;18779:7;;;:35;;:::i;:::-;18613:208;;:::o;65601:286::-;65666:11;65689:17;65715:3;65689:30;;65747:2;65733:4;:11;:16;65729:72;;;65786:3;65772:18;;;;;;;;;;;:::i;:::-;;;;;;;;65729:72;65867:4;:11;65858:4;65850:13;;;:::i;:::-;65842:22;;:36;65834:45;;65810:70;;;65601:286;;;:::o;63117:202::-;63185:20;63293:10;63283:20;;63117:202;;;:::o;17163:1107::-;17268:1;17252:18;;:4;:18;;;17248:540;;17404:5;17388:12;;:21;;;;;;;:::i;:::-;;;;;;;;17248:540;;;17440:19;17462:9;:15;17472:4;17462:15;;;;;;;;;;;;;;;;17440:37;;17509:5;17495:11;:19;17491:115;;;17566:4;17572:11;17585:5;17541:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;17491:115;17758:5;17744:11;:19;17726:9;:15;17736:4;17726:15;;;;;;;;;;;;;;;:37;;;;17426:362;17248:540;17816:1;17802:16;;:2;:16;;;17798:425;;17981:5;17965:12;;:21;;;;;;;;;;;17798:425;;;18193:5;18176:9;:13;18186:2;18176:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;17798:425;18253:2;18238:25;;18247:4;18238:25;;;18257:5;18238:25;;;;;;:::i;:::-;;;;;;;;17163:1107;;;:::o;88:117:1:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:99::-;1254:6;1288:5;1282:12;1272:22;;1202:99;;;:::o;1307:180::-;1355:77;1352:1;1345:88;1452:4;1449:1;1442:15;1476:4;1473:1;1466:15;1493:180;1541:77;1538:1;1531:88;1638:4;1635:1;1628:15;1662:4;1659:1;1652:15;1679:320;1723:6;1760:1;1754:4;1750:12;1740:22;;1807:1;1801:4;1797:12;1828:18;1818:81;;1884:4;1876:6;1872:17;1862:27;;1818:81;1946:2;1938:6;1935:14;1915:18;1912:38;1909:84;;1965:18;;:::i;:::-;1909:84;1730:269;1679:320;;;:::o;2005:141::-;2054:4;2077:3;2069:11;;2100:3;2097:1;2090:14;2134:4;2131:1;2121:18;2113:26;;2005:141;;;:::o;2152:93::-;2189:6;2236:2;2231;2224:5;2220:14;2216:23;2206:33;;2152:93;;;:::o;2251:107::-;2295:8;2345:5;2339:4;2335:16;2314:37;;2251:107;;;;:::o;2364:393::-;2433:6;2483:1;2471:10;2467:18;2506:97;2536:66;2525:9;2506:97;:::i;:::-;2624:39;2654:8;2643:9;2624:39;:::i;:::-;2612:51;;2696:4;2692:9;2685:5;2681:21;2672:30;;2745:4;2735:8;2731:19;2724:5;2721:30;2711:40;;2440:317;;2364:393;;;;;:::o;2763:77::-;2800:7;2829:5;2818:16;;2763:77;;;:::o;2846:60::-;2874:3;2895:5;2888:12;;2846:60;;;:::o;2912:142::-;2962:9;2995:53;3013:34;3022:24;3040:5;3022:24;:::i;:::-;3013:34;:::i;:::-;2995:53;:::i;:::-;2982:66;;2912:142;;;:::o;3060:75::-;3103:3;3124:5;3117:12;;3060:75;;;:::o;3141:269::-;3251:39;3282:7;3251:39;:::i;:::-;3312:91;3361:41;3385:16;3361:41;:::i;:::-;3353:6;3346:4;3340:11;3312:91;:::i;:::-;3306:4;3299:105;3217:193;3141:269;;;:::o;3416:73::-;3461:3;3416:73;:::o;3495:189::-;3572:32;;:::i;:::-;3613:65;3671:6;3663;3657:4;3613:65;:::i;:::-;3548:136;3495:189;;:::o;3690:186::-;3750:120;3767:3;3760:5;3757:14;3750:120;;;3821:39;3858:1;3851:5;3821:39;:::i;:::-;3794:1;3787:5;3783:13;3774:22;;3750:120;;;3690:186;;:::o;3882:543::-;3983:2;3978:3;3975:11;3972:446;;;4017:38;4049:5;4017:38;:::i;:::-;4101:29;4119:10;4101:29;:::i;:::-;4091:8;4087:44;4284:2;4272:10;4269:18;4266:49;;;4305:8;4290:23;;4266:49;4328:80;4384:22;4402:3;4384:22;:::i;:::-;4374:8;4370:37;4357:11;4328:80;:::i;:::-;3987:431;;3972:446;3882:543;;;:::o;4431:117::-;4485:8;4535:5;4529:4;4525:16;4504:37;;4431:117;;;;:::o;4554:169::-;4598:6;4631:51;4679:1;4675:6;4667:5;4664:1;4660:13;4631:51;:::i;:::-;4627:56;4712:4;4706;4702:15;4692:25;;4605:118;4554:169;;;;:::o;4728:295::-;4804:4;4950:29;4975:3;4969:4;4950:29;:::i;:::-;4942:37;;5012:3;5009:1;5005:11;4999:4;4996:21;4988:29;;4728:295;;;;:::o;5028:1395::-;5145:37;5178:3;5145:37;:::i;:::-;5247:18;5239:6;5236:30;5233:56;;;5269:18;;:::i;:::-;5233:56;5313:38;5345:4;5339:11;5313:38;:::i;:::-;5398:67;5458:6;5450;5444:4;5398:67;:::i;:::-;5492:1;5516:4;5503:17;;5548:2;5540:6;5537:14;5565:1;5560:618;;;;6222:1;6239:6;6236:77;;;6288:9;6283:3;6279:19;6273:26;6264:35;;6236:77;6339:67;6399:6;6392:5;6339:67;:::i;:::-;6333:4;6326:81;6195:222;5530:887;;5560:618;5612:4;5608:9;5600:6;5596:22;5646:37;5678:4;5646:37;:::i;:::-;5705:1;5719:208;5733:7;5730:1;5727:14;5719:208;;;5812:9;5807:3;5803:19;5797:26;5789:6;5782:42;5863:1;5855:6;5851:14;5841:24;;5910:2;5899:9;5895:18;5882:31;;5756:4;5753:1;5749:12;5744:17;;5719:208;;;5955:6;5946:7;5943:19;5940:179;;;6013:9;6008:3;6004:19;5998:26;6056:48;6098:4;6090:6;6086:17;6075:9;6056:48;:::i;:::-;6048:6;6041:64;5963:156;5940:179;6165:1;6161;6153:6;6149:14;6145:22;6139:4;6132:36;5567:611;;;5530:887;;5120:1303;;;5028:1395;;:::o;6429:118::-;6516:24;6534:5;6516:24;:::i;:::-;6511:3;6504:37;6429:118;;:::o;6553:222::-;6646:4;6684:2;6673:9;6669:18;6661:26;;6697:71;6765:1;6754:9;6750:17;6741:6;6697:71;:::i;:::-;6553:222;;;;:::o;6781:180::-;6829:77;6826:1;6819:88;6926:4;6923:1;6916:15;6950:4;6947:1;6940:15;6967:102;7009:8;7056:5;7053:1;7049:13;7028:34;;6967:102;;;:::o;7075:848::-;7136:5;7143:4;7167:6;7158:15;;7191:5;7182:14;;7205:712;7226:1;7216:8;7213:15;7205:712;;;7321:4;7316:3;7312:14;7306:4;7303:24;7300:50;;;7330:18;;:::i;:::-;7300:50;7380:1;7370:8;7366:16;7363:451;;;7795:4;7788:5;7784:16;7775:25;;7363:451;7845:4;7839;7835:15;7827:23;;7875:32;7898:8;7875:32;:::i;:::-;7863:44;;7205:712;;;7075:848;;;;;;;:::o;7929:1073::-;7983:5;8174:8;8164:40;;8195:1;8186:10;;8197:5;;8164:40;8223:4;8213:36;;8240:1;8231:10;;8242:5;;8213:36;8309:4;8357:1;8352:27;;;;8393:1;8388:191;;;;8302:277;;8352:27;8370:1;8361:10;;8372:5;;;8388:191;8433:3;8423:8;8420:17;8417:43;;;8440:18;;:::i;:::-;8417:43;8489:8;8486:1;8482:16;8473:25;;8524:3;8517:5;8514:14;8511:40;;;8531:18;;:::i;:::-;8511:40;8564:5;;;8302:277;;8688:2;8678:8;8675:16;8669:3;8663:4;8660:13;8656:36;8638:2;8628:8;8625:16;8620:2;8614:4;8611:12;8607:35;8591:111;8588:246;;;8744:8;8738:4;8734:19;8725:28;;8779:3;8772:5;8769:14;8766:40;;;8786:18;;:::i;:::-;8766:40;8819:5;;8588:246;8859:42;8897:3;8887:8;8881:4;8878:1;8859:42;:::i;:::-;8844:57;;;;8933:4;8928:3;8924:14;8917:5;8914:25;8911:51;;;8942:18;;:::i;:::-;8911:51;8991:4;8984:5;8980:16;8971:25;;7929:1073;;;;;;:::o;9008:86::-;9043:7;9083:4;9076:5;9072:16;9061:27;;9008:86;;;:::o;9100:281::-;9158:5;9182:23;9200:4;9182:23;:::i;:::-;9174:31;;9226:25;9242:8;9226:25;:::i;:::-;9214:37;;9270:104;9307:66;9297:8;9291:4;9270:104;:::i;:::-;9261:113;;9100:281;;;;:::o;9387:410::-;9427:7;9450:20;9468:1;9450:20;:::i;:::-;9445:25;;9484:20;9502:1;9484:20;:::i;:::-;9479:25;;9539:1;9536;9532:9;9561:30;9579:11;9561:30;:::i;:::-;9550:41;;9740:1;9731:7;9727:15;9724:1;9721:22;9701:1;9694:9;9674:83;9651:139;;9770:18;;:::i;:::-;9651:139;9435:362;9387:410;;;;:::o;9803:77::-;9840:7;9869:5;9858:16;;9803:77;;;:::o;9886:118::-;9973:24;9991:5;9973:24;:::i;:::-;9968:3;9961:37;9886:118;;:::o;10010:::-;10097:24;10115:5;10097:24;:::i;:::-;10092:3;10085:37;10010:118;;:::o;10134:664::-;10339:4;10377:3;10366:9;10362:19;10354:27;;10391:71;10459:1;10448:9;10444:17;10435:6;10391:71;:::i;:::-;10472:72;10540:2;10529:9;10525:18;10516:6;10472:72;:::i;:::-;10554;10622:2;10611:9;10607:18;10598:6;10554:72;:::i;:::-;10636;10704:2;10693:9;10689:18;10680:6;10636:72;:::i;:::-;10718:73;10786:3;10775:9;10771:19;10762:6;10718:73;:::i;:::-;10134:664;;;;;;;;:::o;10804:169::-;10888:11;10922:6;10917:3;10910:19;10962:4;10957:3;10953:14;10938:29;;10804:169;;;;:::o;10979:139::-;11068:6;11063:3;11058;11052:23;11109:1;11100:6;11095:3;11091:16;11084:27;10979:139;;;:::o;11124:102::-;11165:6;11216:2;11212:7;11207:2;11200:5;11196:14;11192:28;11182:38;;11124:102;;;:::o;11232:377::-;11320:3;11348:39;11381:5;11348:39;:::i;:::-;11403:71;11467:6;11462:3;11403:71;:::i;:::-;11396:78;;11483:65;11541:6;11536:3;11529:4;11522:5;11518:16;11483:65;:::i;:::-;11573:29;11595:6;11573:29;:::i;:::-;11568:3;11564:39;11557:46;;11324:285;11232:377;;;;:::o;11615:313::-;11728:4;11766:2;11755:9;11751:18;11743:26;;11815:9;11809:4;11805:20;11801:1;11790:9;11786:17;11779:47;11843:78;11916:4;11907:6;11843:78;:::i;:::-;11835:86;;11615:313;;;;:::o;11934:98::-;11985:6;12019:5;12013:12;12003:22;;11934:98;;;:::o;12038:116::-;12089:4;12112:3;12104:11;;12142:4;12137:3;12133:14;12125:22;;12038:116;;;:::o;12160:154::-;12203:11;12239:29;12263:3;12257:10;12239:29;:::i;:::-;12302:5;12278:29;;12215:99;12160:154;;;:::o;12320:594::-;12404:5;12435:38;12467:5;12435:38;:::i;:::-;12498:5;12525:40;12559:5;12525:40;:::i;:::-;12513:52;;12584:35;12610:8;12584:35;:::i;:::-;12575:44;;12643:2;12635:6;12632:14;12629:278;;;12714:169;12799:66;12769:6;12765:2;12761:15;12758:1;12754:23;12714:169;:::i;:::-;12691:5;12670:227;12661:236;;12629:278;12410:504;;12320:594;;;:::o;12920:191::-;12960:3;12979:20;12997:1;12979:20;:::i;:::-;12974:25;;13013:20;13031:1;13013:20;:::i;:::-;13008:25;;13056:1;13053;13049:9;13042:16;;13077:3;13074:1;13071:10;13068:36;;;13084:18;;:::i;:::-;13068:36;12920:191;;;;:::o;13117:442::-;13266:4;13304:2;13293:9;13289:18;13281:26;;13317:71;13385:1;13374:9;13370:17;13361:6;13317:71;:::i;:::-;13398:72;13466:2;13455:9;13451:18;13442:6;13398:72;:::i;:::-;13480;13548:2;13537:9;13533:18;13524:6;13480:72;:::i;:::-;13117:442;;;;;;:::o;13565:222::-;13658:4;13696:2;13685:9;13681:18;13673:26;;13709:71;13777:1;13766:9;13762:17;13753:6;13709:71;:::i;:::-;13565:222;;;;:::o;79675:364:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DOMAIN_SEPARATOR_3551": {
									"entryPoint": 1108,
									"id": 3551,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_EIP712Name_3329": {
									"entryPoint": 3339,
									"id": 3329,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_EIP712Version_3341": {
									"entryPoint": 3398,
									"id": 3341,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_approve_662": {
									"entryPoint": 2226,
									"id": 662,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_722": {
									"entryPoint": 3611,
									"id": 722,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_buildDomainSeparator_3259": {
									"entryPoint": 4611,
									"id": 3259,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkOwner_853": {
									"entryPoint": 2812,
									"id": 853,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_domainSeparatorV4_3238": {
									"entryPoint": 2630,
									"id": 3238,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_hashTypedDataV4_3275": {
									"entryPoint": 3540,
									"id": 3275,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_mint_611": {
									"entryPoint": 2947,
									"id": 611,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_111": {
									"entryPoint": 2219,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_770": {
									"entryPoint": 2244,
									"id": 770,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_throwError_1297": {
									"entryPoint": 5228,
									"id": 1297,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_915": {
									"entryPoint": 3074,
									"id": 915,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_501": {
									"entryPoint": 2390,
									"id": 501,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_578": {
									"entryPoint": 4074,
									"id": 578,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_useNonce_3383": {
									"entryPoint": 3457,
									"id": 3383,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@allowance_398": {
									"entryPoint": 1957,
									"id": 398,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_422": {
									"entryPoint": 1011,
									"id": 422,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_357": {
									"entryPoint": 1144,
									"id": 357,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@byteLength_3000": {
									"entryPoint": 5696,
									"id": 3000,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_335": {
									"entryPoint": 1100,
									"id": 335,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@eip712Domain_3317": {
									"entryPoint": 1249,
									"id": 3317,
									"parameterSlots": 0,
									"returnSlots": 7
								},
								"@mint_3602": {
									"entryPoint": 1122,
									"id": 3602,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_317": {
									"entryPoint": 867,
									"id": 317,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@nonces_3368": {
									"entryPoint": 3269,
									"id": 3368,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@nonces_3541": {
									"entryPoint": 1232,
									"id": 3541,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_836": {
									"entryPoint": 1414,
									"id": 836,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@permit_3524": {
									"entryPoint": 1632,
									"id": 3524,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"@recover_1248": {
									"entryPoint": 3565,
									"id": 1248,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@renounceOwnership_867": {
									"entryPoint": 1213,
									"id": 867,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_326": {
									"entryPoint": 1454,
									"id": 326,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toStringWithFallback_3067": {
									"entryPoint": 4760,
									"id": 3067,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toString_2968": {
									"entryPoint": 5582,
									"id": 2968,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toTypedDataHash_2775": {
									"entryPoint": 4933,
									"id": 2775,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalSupply_344": {
									"entryPoint": 1045,
									"id": 344,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_454": {
									"entryPoint": 1054,
									"id": 454,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_895": {
									"entryPoint": 2087,
									"id": 895,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_381": {
									"entryPoint": 1598,
									"id": 381,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@tryRecover_1212": {
									"entryPoint": 4997,
									"id": 1212,
									"parameterSlots": 4,
									"returnSlots": 3
								},
								"abi_decode_t_address": {
									"entryPoint": 5992,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 6915,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6043,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8": {
									"entryPoint": 6873,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6397,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7092,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6216,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32": {
									"entryPoint": 6935,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6063,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 6569,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6498,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6604,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6136,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes1_to_t_bytes1_fromStack": {
									"entryPoint": 6483,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 6357,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5830,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 6554,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6176,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 6308,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6826,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 7387,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7426,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6151,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6696,
									"id": null,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 6372,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7292,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 7575,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": 7656,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5886,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6191,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 6323,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6539,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6513,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5774,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6592,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6523,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5784,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7524,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5953,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6125,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes1": {
									"entryPoint": 6440,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 6348,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5922,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6012,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 6296,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5800,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7199,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7479,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 7723,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7154,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7247,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5918,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5814,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 5970,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 6893,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6021,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 6851,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:15274:1",
										"nodeType": "YulBlock",
										"src": "0:15274:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:1",
													"nodeType": "YulBlock",
													"src": "66:40:1",
													"statements": [
														{
															"nativeSrc": "77:22:1",
															"nodeType": "YulAssignment",
															"src": "77:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:1"
																},
																"nativeSrc": "87:12:1",
																"nodeType": "YulFunctionCall",
																"src": "87:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:1",
														"nodeType": "YulTypedName",
														"src": "49:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:1",
														"nodeType": "YulTypedName",
														"src": "59:6:1",
														"type": ""
													}
												],
												"src": "7:99:1"
											},
											{
												"body": {
													"nativeSrc": "208:73:1",
													"nodeType": "YulBlock",
													"src": "208:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:1"
																},
																"nativeSrc": "218:19:1",
																"nodeType": "YulFunctionCall",
																"src": "218:19:1"
															},
															"nativeSrc": "218:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:1"
														},
														{
															"nativeSrc": "246:29:1",
															"nodeType": "YulAssignment",
															"src": "246:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:1",
																		"nodeType": "YulLiteral",
																		"src": "270:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:1"
																},
																"nativeSrc": "261:14:1",
																"nodeType": "YulFunctionCall",
																"src": "261:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:1",
														"nodeType": "YulTypedName",
														"src": "180:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:1",
														"nodeType": "YulTypedName",
														"src": "185:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:1",
														"nodeType": "YulTypedName",
														"src": "196:11:1",
														"type": ""
													}
												],
												"src": "112:169:1"
											},
											{
												"body": {
													"nativeSrc": "349:77:1",
													"nodeType": "YulBlock",
													"src": "349:77:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:1"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:1"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:1"
																},
																"nativeSrc": "360:23:1",
																"nodeType": "YulFunctionCall",
																"src": "360:23:1"
															},
															"nativeSrc": "360:23:1",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:1"
																		},
																		"nativeSrc": "399:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:1",
																		"nodeType": "YulLiteral",
																		"src": "417:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:1"
																},
																"nativeSrc": "392:27:1",
																"nodeType": "YulFunctionCall",
																"src": "392:27:1"
															},
															"nativeSrc": "392:27:1",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:1",
														"nodeType": "YulTypedName",
														"src": "331:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:1",
														"nodeType": "YulTypedName",
														"src": "336:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:1",
														"nodeType": "YulTypedName",
														"src": "341:6:1",
														"type": ""
													}
												],
												"src": "287:139:1"
											},
											{
												"body": {
													"nativeSrc": "480:54:1",
													"nodeType": "YulBlock",
													"src": "480:54:1",
													"statements": [
														{
															"nativeSrc": "490:38:1",
															"nodeType": "YulAssignment",
															"src": "490:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:1",
																				"nodeType": "YulLiteral",
																				"src": "515:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:1"
																		},
																		"nativeSrc": "504:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:1",
																				"nodeType": "YulLiteral",
																				"src": "524:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:1"
																		},
																		"nativeSrc": "520:7:1",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:1"
																},
																"nativeSrc": "500:28:1",
																"nodeType": "YulFunctionCall",
																"src": "500:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:1",
														"nodeType": "YulTypedName",
														"src": "463:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:1",
														"nodeType": "YulTypedName",
														"src": "473:6:1",
														"type": ""
													}
												],
												"src": "432:102:1"
											},
											{
												"body": {
													"nativeSrc": "632:285:1",
													"nodeType": "YulBlock",
													"src": "632:285:1",
													"statements": [
														{
															"nativeSrc": "642:53:1",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:1"
																},
																"nativeSrc": "656:39:1",
																"nodeType": "YulFunctionCall",
																"src": "656:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:1",
																	"nodeType": "YulTypedName",
																	"src": "646:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:1",
															"nodeType": "YulAssignment",
															"src": "704:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:1"
																},
																"nativeSrc": "711:71:1",
																"nodeType": "YulFunctionCall",
																"src": "711:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:1",
																				"nodeType": "YulLiteral",
																				"src": "837:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:1"
																		},
																		"nativeSrc": "826:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:1"
																},
																"nativeSrc": "791:65:1",
																"nodeType": "YulFunctionCall",
																"src": "791:65:1"
															},
															"nativeSrc": "791:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:1"
														},
														{
															"nativeSrc": "865:46:1",
															"nodeType": "YulAssignment",
															"src": "865:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:1",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:1"
																		},
																		"nativeSrc": "881:29:1",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:1"
																},
																"nativeSrc": "872:39:1",
																"nodeType": "YulFunctionCall",
																"src": "872:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:1",
														"nodeType": "YulTypedName",
														"src": "613:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:1",
														"nodeType": "YulTypedName",
														"src": "620:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:1",
														"nodeType": "YulTypedName",
														"src": "628:3:1",
														"type": ""
													}
												],
												"src": "540:377:1"
											},
											{
												"body": {
													"nativeSrc": "1041:195:1",
													"nodeType": "YulBlock",
													"src": "1041:195:1",
													"statements": [
														{
															"nativeSrc": "1051:26:1",
															"nodeType": "YulAssignment",
															"src": "1051:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:1"
																},
																"nativeSrc": "1059:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:1"
																		},
																		"nativeSrc": "1094:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:1"
																		},
																		"nativeSrc": "1113:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:1"
																},
																"nativeSrc": "1087:47:1",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:1"
															},
															"nativeSrc": "1087:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:1"
														},
														{
															"nativeSrc": "1143:86:1",
															"nodeType": "YulAssignment",
															"src": "1143:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:1",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:1"
																},
																"nativeSrc": "1151:78:1",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:1",
														"nodeType": "YulTypedName",
														"src": "1013:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:1",
														"nodeType": "YulTypedName",
														"src": "1025:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:1",
														"nodeType": "YulTypedName",
														"src": "1036:4:1",
														"type": ""
													}
												],
												"src": "923:313:1"
											},
											{
												"body": {
													"nativeSrc": "1282:35:1",
													"nodeType": "YulBlock",
													"src": "1282:35:1",
													"statements": [
														{
															"nativeSrc": "1292:19:1",
															"nodeType": "YulAssignment",
															"src": "1292:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:1"
																},
																"nativeSrc": "1302:9:1",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:1",
														"nodeType": "YulTypedName",
														"src": "1275:6:1",
														"type": ""
													}
												],
												"src": "1242:75:1"
											},
											{
												"body": {
													"nativeSrc": "1412:28:1",
													"nodeType": "YulBlock",
													"src": "1412:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:1"
																},
																"nativeSrc": "1422:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:1"
															},
															"nativeSrc": "1422:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:1"
											},
											{
												"body": {
													"nativeSrc": "1535:28:1",
													"nodeType": "YulBlock",
													"src": "1535:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:1"
																},
																"nativeSrc": "1545:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:1"
															},
															"nativeSrc": "1545:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:1"
											},
											{
												"body": {
													"nativeSrc": "1614:81:1",
													"nodeType": "YulBlock",
													"src": "1614:81:1",
													"statements": [
														{
															"nativeSrc": "1624:65:1",
															"nodeType": "YulAssignment",
															"src": "1624:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:1",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:1"
																},
																"nativeSrc": "1635:54:1",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:1",
														"nodeType": "YulTypedName",
														"src": "1596:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:1",
														"nodeType": "YulTypedName",
														"src": "1606:7:1",
														"type": ""
													}
												],
												"src": "1569:126:1"
											},
											{
												"body": {
													"nativeSrc": "1746:51:1",
													"nodeType": "YulBlock",
													"src": "1746:51:1",
													"statements": [
														{
															"nativeSrc": "1756:35:1",
															"nodeType": "YulAssignment",
															"src": "1756:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:1"
																},
																"nativeSrc": "1767:24:1",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:1",
														"nodeType": "YulTypedName",
														"src": "1728:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:1",
														"nodeType": "YulTypedName",
														"src": "1738:7:1",
														"type": ""
													}
												],
												"src": "1701:96:1"
											},
											{
												"body": {
													"nativeSrc": "1846:79:1",
													"nodeType": "YulBlock",
													"src": "1846:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:1",
																"nodeType": "YulBlock",
																"src": "1903:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:1"
																			},
																			"nativeSrc": "1905:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:1"
																		},
																		"nativeSrc": "1905:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:1"
																				},
																				"nativeSrc": "1876:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:1"
																		},
																		"nativeSrc": "1866:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:1"
																},
																"nativeSrc": "1859:43:1",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:1"
															},
															"nativeSrc": "1856:63:1",
															"nodeType": "YulIf",
															"src": "1856:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:1",
														"nodeType": "YulTypedName",
														"src": "1839:5:1",
														"type": ""
													}
												],
												"src": "1803:122:1"
											},
											{
												"body": {
													"nativeSrc": "1983:87:1",
													"nodeType": "YulBlock",
													"src": "1983:87:1",
													"statements": [
														{
															"nativeSrc": "1993:29:1",
															"nodeType": "YulAssignment",
															"src": "1993:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:1"
																},
																"nativeSrc": "2002:20:1",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:1"
																},
																"nativeSrc": "2031:33:1",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:1"
															},
															"nativeSrc": "2031:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:1",
														"nodeType": "YulTypedName",
														"src": "1961:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:1",
														"nodeType": "YulTypedName",
														"src": "1969:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:1",
														"nodeType": "YulTypedName",
														"src": "1977:5:1",
														"type": ""
													}
												],
												"src": "1931:139:1"
											},
											{
												"body": {
													"nativeSrc": "2121:32:1",
													"nodeType": "YulBlock",
													"src": "2121:32:1",
													"statements": [
														{
															"nativeSrc": "2131:16:1",
															"nodeType": "YulAssignment",
															"src": "2131:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:1",
																"nodeType": "YulIdentifier",
																"src": "2142:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:1",
														"nodeType": "YulTypedName",
														"src": "2103:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:1",
														"nodeType": "YulTypedName",
														"src": "2113:7:1",
														"type": ""
													}
												],
												"src": "2076:77:1"
											},
											{
												"body": {
													"nativeSrc": "2202:79:1",
													"nodeType": "YulBlock",
													"src": "2202:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:1",
																"nodeType": "YulBlock",
																"src": "2259:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:1"
																			},
																			"nativeSrc": "2261:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:1"
																		},
																		"nativeSrc": "2261:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:1"
																				},
																				"nativeSrc": "2232:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:1"
																		},
																		"nativeSrc": "2222:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:1"
																},
																"nativeSrc": "2215:43:1",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:1"
															},
															"nativeSrc": "2212:63:1",
															"nodeType": "YulIf",
															"src": "2212:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:1",
														"nodeType": "YulTypedName",
														"src": "2195:5:1",
														"type": ""
													}
												],
												"src": "2159:122:1"
											},
											{
												"body": {
													"nativeSrc": "2339:87:1",
													"nodeType": "YulBlock",
													"src": "2339:87:1",
													"statements": [
														{
															"nativeSrc": "2349:29:1",
															"nodeType": "YulAssignment",
															"src": "2349:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:1"
																},
																"nativeSrc": "2358:20:1",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:1"
																},
																"nativeSrc": "2387:33:1",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:1"
															},
															"nativeSrc": "2387:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:1",
														"nodeType": "YulTypedName",
														"src": "2317:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:1",
														"nodeType": "YulTypedName",
														"src": "2325:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:1",
														"nodeType": "YulTypedName",
														"src": "2333:5:1",
														"type": ""
													}
												],
												"src": "2287:139:1"
											},
											{
												"body": {
													"nativeSrc": "2515:391:1",
													"nodeType": "YulBlock",
													"src": "2515:391:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:1",
																"nodeType": "YulBlock",
																"src": "2561:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:1"
																			},
																			"nativeSrc": "2563:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:1"
																		},
																		"nativeSrc": "2563:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:1"
																		},
																		"nativeSrc": "2532:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:1"
																},
																"nativeSrc": "2528:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:1"
															},
															"nativeSrc": "2525:119:1",
															"nodeType": "YulIf",
															"src": "2525:119:1"
														},
														{
															"nativeSrc": "2654:117:1",
															"nodeType": "YulBlock",
															"src": "2654:117:1",
															"statements": [
																{
																	"nativeSrc": "2669:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:1",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:1",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:1"
																				},
																				"nativeSrc": "2729:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:1"
																		},
																		"nativeSrc": "2708:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:1",
															"nodeType": "YulBlock",
															"src": "2781:118:1",
															"statements": [
																{
																	"nativeSrc": "2796:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:1",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:1",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:1"
																				},
																				"nativeSrc": "2857:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:1"
																		},
																		"nativeSrc": "2836:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:1",
														"nodeType": "YulTypedName",
														"src": "2477:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:1",
														"nodeType": "YulTypedName",
														"src": "2488:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:1",
														"nodeType": "YulTypedName",
														"src": "2500:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:1",
														"nodeType": "YulTypedName",
														"src": "2508:6:1",
														"type": ""
													}
												],
												"src": "2432:474:1"
											},
											{
												"body": {
													"nativeSrc": "2954:48:1",
													"nodeType": "YulBlock",
													"src": "2954:48:1",
													"statements": [
														{
															"nativeSrc": "2964:32:1",
															"nodeType": "YulAssignment",
															"src": "2964:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:1"
																		},
																		"nativeSrc": "2982:13:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:1"
																},
																"nativeSrc": "2975:21:1",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:1",
														"nodeType": "YulTypedName",
														"src": "2936:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:1",
														"nodeType": "YulTypedName",
														"src": "2946:7:1",
														"type": ""
													}
												],
												"src": "2912:90:1"
											},
											{
												"body": {
													"nativeSrc": "3067:50:1",
													"nodeType": "YulBlock",
													"src": "3067:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:1",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:1"
																		},
																		"nativeSrc": "3089:21:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:1"
																},
																"nativeSrc": "3077:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:1"
															},
															"nativeSrc": "3077:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:1",
														"nodeType": "YulTypedName",
														"src": "3055:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:1",
														"nodeType": "YulTypedName",
														"src": "3062:3:1",
														"type": ""
													}
												],
												"src": "3008:109:1"
											},
											{
												"body": {
													"nativeSrc": "3215:118:1",
													"nodeType": "YulBlock",
													"src": "3215:118:1",
													"statements": [
														{
															"nativeSrc": "3225:26:1",
															"nodeType": "YulAssignment",
															"src": "3225:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:1"
																},
																"nativeSrc": "3233:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:1"
																		},
																		"nativeSrc": "3308:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:1",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:1"
																},
																"nativeSrc": "3261:65:1",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:1"
															},
															"nativeSrc": "3261:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:1",
														"nodeType": "YulTypedName",
														"src": "3187:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:1",
														"nodeType": "YulTypedName",
														"src": "3199:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:1",
														"nodeType": "YulTypedName",
														"src": "3210:4:1",
														"type": ""
													}
												],
												"src": "3123:210:1"
											},
											{
												"body": {
													"nativeSrc": "3404:53:1",
													"nodeType": "YulBlock",
													"src": "3404:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:1"
																		},
																		"nativeSrc": "3426:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:1"
																},
																"nativeSrc": "3414:37:1",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:1"
															},
															"nativeSrc": "3414:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:1",
														"nodeType": "YulTypedName",
														"src": "3392:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:1",
														"nodeType": "YulTypedName",
														"src": "3399:3:1",
														"type": ""
													}
												],
												"src": "3339:118:1"
											},
											{
												"body": {
													"nativeSrc": "3561:124:1",
													"nodeType": "YulBlock",
													"src": "3561:124:1",
													"statements": [
														{
															"nativeSrc": "3571:26:1",
															"nodeType": "YulAssignment",
															"src": "3571:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:1"
																},
																"nativeSrc": "3579:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:1"
																		},
																		"nativeSrc": "3660:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:1"
																},
																"nativeSrc": "3607:71:1",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:1"
															},
															"nativeSrc": "3607:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:1",
														"nodeType": "YulTypedName",
														"src": "3533:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:1",
														"nodeType": "YulTypedName",
														"src": "3545:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:1",
														"nodeType": "YulTypedName",
														"src": "3556:4:1",
														"type": ""
													}
												],
												"src": "3463:222:1"
											},
											{
												"body": {
													"nativeSrc": "3791:519:1",
													"nodeType": "YulBlock",
													"src": "3791:519:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:1",
																"nodeType": "YulBlock",
																"src": "3837:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:1"
																			},
																			"nativeSrc": "3839:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:1"
																		},
																		"nativeSrc": "3839:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:1"
																		},
																		"nativeSrc": "3808:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:1"
																},
																"nativeSrc": "3804:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:1"
															},
															"nativeSrc": "3801:119:1",
															"nodeType": "YulIf",
															"src": "3801:119:1"
														},
														{
															"nativeSrc": "3930:117:1",
															"nodeType": "YulBlock",
															"src": "3930:117:1",
															"statements": [
																{
																	"nativeSrc": "3945:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:1",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:1",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:1"
																				},
																				"nativeSrc": "4005:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:1"
																		},
																		"nativeSrc": "3984:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:1",
															"nodeType": "YulBlock",
															"src": "4057:118:1",
															"statements": [
																{
																	"nativeSrc": "4072:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:1"
																				},
																				"nativeSrc": "4133:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:1"
																		},
																		"nativeSrc": "4112:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:1",
															"nodeType": "YulBlock",
															"src": "4185:118:1",
															"statements": [
																{
																	"nativeSrc": "4200:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:1"
																				},
																				"nativeSrc": "4261:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:1"
																		},
																		"nativeSrc": "4240:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:1",
														"nodeType": "YulTypedName",
														"src": "3745:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:1",
														"nodeType": "YulTypedName",
														"src": "3756:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:1",
														"nodeType": "YulTypedName",
														"src": "3768:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:1",
														"nodeType": "YulTypedName",
														"src": "3776:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:1",
														"nodeType": "YulTypedName",
														"src": "3784:6:1",
														"type": ""
													}
												],
												"src": "3691:619:1"
											},
											{
												"body": {
													"nativeSrc": "4359:43:1",
													"nodeType": "YulBlock",
													"src": "4359:43:1",
													"statements": [
														{
															"nativeSrc": "4369:27:1",
															"nodeType": "YulAssignment",
															"src": "4369:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4384:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4384:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4391:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4380:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:1"
																},
																"nativeSrc": "4380:16:1",
																"nodeType": "YulFunctionCall",
																"src": "4380:16:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4369:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "4369:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4316:86:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4341:5:1",
														"nodeType": "YulTypedName",
														"src": "4341:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4351:7:1",
														"nodeType": "YulTypedName",
														"src": "4351:7:1",
														"type": ""
													}
												],
												"src": "4316:86:1"
											},
											{
												"body": {
													"nativeSrc": "4469:51:1",
													"nodeType": "YulBlock",
													"src": "4469:51:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4486:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4507:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "4507:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4491:15:1",
																			"nodeType": "YulIdentifier",
																			"src": "4491:15:1"
																		},
																		"nativeSrc": "4491:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4479:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:1"
																},
																"nativeSrc": "4479:35:1",
																"nodeType": "YulFunctionCall",
																"src": "4479:35:1"
															},
															"nativeSrc": "4479:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "4479:35:1"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4408:112:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4457:5:1",
														"nodeType": "YulTypedName",
														"src": "4457:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4464:3:1",
														"nodeType": "YulTypedName",
														"src": "4464:3:1",
														"type": ""
													}
												],
												"src": "4408:112:1"
											},
											{
												"body": {
													"nativeSrc": "4620:120:1",
													"nodeType": "YulBlock",
													"src": "4620:120:1",
													"statements": [
														{
															"nativeSrc": "4630:26:1",
															"nodeType": "YulAssignment",
															"src": "4630:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:1"
																},
																"nativeSrc": "4638:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4706:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4706:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4730:1:1",
																				"nodeType": "YulLiteral",
																				"src": "4730:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4715:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:1"
																		},
																		"nativeSrc": "4715:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4666:39:1",
																	"nodeType": "YulIdentifier",
																	"src": "4666:39:1"
																},
																"nativeSrc": "4666:67:1",
																"nodeType": "YulFunctionCall",
																"src": "4666:67:1"
															},
															"nativeSrc": "4666:67:1",
															"nodeType": "YulExpressionStatement",
															"src": "4666:67:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4526:214:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:1",
														"nodeType": "YulTypedName",
														"src": "4592:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4604:6:1",
														"nodeType": "YulTypedName",
														"src": "4604:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4615:4:1",
														"nodeType": "YulTypedName",
														"src": "4615:4:1",
														"type": ""
													}
												],
												"src": "4526:214:1"
											},
											{
												"body": {
													"nativeSrc": "4791:32:1",
													"nodeType": "YulBlock",
													"src": "4791:32:1",
													"statements": [
														{
															"nativeSrc": "4801:16:1",
															"nodeType": "YulAssignment",
															"src": "4801:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "4812:5:1",
																"nodeType": "YulIdentifier",
																"src": "4812:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4801:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "4801:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "4746:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4773:5:1",
														"nodeType": "YulTypedName",
														"src": "4773:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4783:7:1",
														"nodeType": "YulTypedName",
														"src": "4783:7:1",
														"type": ""
													}
												],
												"src": "4746:77:1"
											},
											{
												"body": {
													"nativeSrc": "4894:53:1",
													"nodeType": "YulBlock",
													"src": "4894:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4911:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4911:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4934:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "4934:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "4916:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "4916:17:1"
																		},
																		"nativeSrc": "4916:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4916:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4904:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4904:6:1"
																},
																"nativeSrc": "4904:37:1",
																"nodeType": "YulFunctionCall",
																"src": "4904:37:1"
															},
															"nativeSrc": "4904:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "4904:37:1"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "4829:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4882:5:1",
														"nodeType": "YulTypedName",
														"src": "4882:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4889:3:1",
														"nodeType": "YulTypedName",
														"src": "4889:3:1",
														"type": ""
													}
												],
												"src": "4829:118:1"
											},
											{
												"body": {
													"nativeSrc": "5051:124:1",
													"nodeType": "YulBlock",
													"src": "5051:124:1",
													"statements": [
														{
															"nativeSrc": "5061:26:1",
															"nodeType": "YulAssignment",
															"src": "5061:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5073:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5073:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5084:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5084:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5069:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5069:3:1"
																},
																"nativeSrc": "5069:18:1",
																"nodeType": "YulFunctionCall",
																"src": "5069:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5061:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5061:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5141:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5141:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5154:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5154:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5165:1:1",
																				"nodeType": "YulLiteral",
																				"src": "5165:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5150:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5150:3:1"
																		},
																		"nativeSrc": "5150:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5150:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "5097:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "5097:43:1"
																},
																"nativeSrc": "5097:71:1",
																"nodeType": "YulFunctionCall",
																"src": "5097:71:1"
															},
															"nativeSrc": "5097:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "5097:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "4953:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5023:9:1",
														"nodeType": "YulTypedName",
														"src": "5023:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5035:6:1",
														"nodeType": "YulTypedName",
														"src": "5035:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5046:4:1",
														"nodeType": "YulTypedName",
														"src": "5046:4:1",
														"type": ""
													}
												],
												"src": "4953:222:1"
											},
											{
												"body": {
													"nativeSrc": "5247:263:1",
													"nodeType": "YulBlock",
													"src": "5247:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "5293:83:1",
																"nodeType": "YulBlock",
																"src": "5293:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5295:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "5295:77:1"
																			},
																			"nativeSrc": "5295:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5295:79:1"
																		},
																		"nativeSrc": "5295:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5295:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5268:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5268:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5277:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5277:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5264:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5264:3:1"
																		},
																		"nativeSrc": "5264:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5264:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5289:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5289:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5260:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5260:3:1"
																},
																"nativeSrc": "5260:32:1",
																"nodeType": "YulFunctionCall",
																"src": "5260:32:1"
															},
															"nativeSrc": "5257:119:1",
															"nodeType": "YulIf",
															"src": "5257:119:1"
														},
														{
															"nativeSrc": "5386:117:1",
															"nodeType": "YulBlock",
															"src": "5386:117:1",
															"statements": [
																{
																	"nativeSrc": "5401:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5401:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5415:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5415:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5405:6:1",
																			"nodeType": "YulTypedName",
																			"src": "5405:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5430:63:1",
																	"nodeType": "YulAssignment",
																	"src": "5430:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5465:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5465:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5476:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5476:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5461:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5461:3:1"
																				},
																				"nativeSrc": "5461:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5461:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5485:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5485:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5440:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "5440:20:1"
																		},
																		"nativeSrc": "5440:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5440:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5430:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5430:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5181:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5217:9:1",
														"nodeType": "YulTypedName",
														"src": "5217:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5228:7:1",
														"nodeType": "YulTypedName",
														"src": "5228:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5240:6:1",
														"nodeType": "YulTypedName",
														"src": "5240:6:1",
														"type": ""
													}
												],
												"src": "5181:329:1"
											},
											{
												"body": {
													"nativeSrc": "5560:105:1",
													"nodeType": "YulBlock",
													"src": "5560:105:1",
													"statements": [
														{
															"nativeSrc": "5570:89:1",
															"nodeType": "YulAssignment",
															"src": "5570:89:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5585:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "5585:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5592:66:1",
																		"nodeType": "YulLiteral",
																		"src": "5592:66:1",
																		"type": "",
																		"value": "0xff00000000000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5581:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5581:3:1"
																},
																"nativeSrc": "5581:78:1",
																"nodeType": "YulFunctionCall",
																"src": "5581:78:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5570:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "5570:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes1",
												"nativeSrc": "5516:149:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5542:5:1",
														"nodeType": "YulTypedName",
														"src": "5542:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5552:7:1",
														"nodeType": "YulTypedName",
														"src": "5552:7:1",
														"type": ""
													}
												],
												"src": "5516:149:1"
											},
											{
												"body": {
													"nativeSrc": "5734:52:1",
													"nodeType": "YulBlock",
													"src": "5734:52:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5751:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5751:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5773:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "5773:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes1",
																			"nativeSrc": "5756:16:1",
																			"nodeType": "YulIdentifier",
																			"src": "5756:16:1"
																		},
																		"nativeSrc": "5756:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5756:23:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5744:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5744:6:1"
																},
																"nativeSrc": "5744:36:1",
																"nodeType": "YulFunctionCall",
																"src": "5744:36:1"
															},
															"nativeSrc": "5744:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "5744:36:1"
														}
													]
												},
												"name": "abi_encode_t_bytes1_to_t_bytes1_fromStack",
												"nativeSrc": "5671:115:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5722:5:1",
														"nodeType": "YulTypedName",
														"src": "5722:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5729:3:1",
														"nodeType": "YulTypedName",
														"src": "5729:3:1",
														"type": ""
													}
												],
												"src": "5671:115:1"
											},
											{
												"body": {
													"nativeSrc": "5857:53:1",
													"nodeType": "YulBlock",
													"src": "5857:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5874:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5874:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5897:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "5897:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5879:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "5879:17:1"
																		},
																		"nativeSrc": "5879:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5879:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5867:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5867:6:1"
																},
																"nativeSrc": "5867:37:1",
																"nodeType": "YulFunctionCall",
																"src": "5867:37:1"
															},
															"nativeSrc": "5867:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "5867:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5792:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5845:5:1",
														"nodeType": "YulTypedName",
														"src": "5845:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5852:3:1",
														"nodeType": "YulTypedName",
														"src": "5852:3:1",
														"type": ""
													}
												],
												"src": "5792:118:1"
											},
											{
												"body": {
													"nativeSrc": "5990:40:1",
													"nodeType": "YulBlock",
													"src": "5990:40:1",
													"statements": [
														{
															"nativeSrc": "6001:22:1",
															"nodeType": "YulAssignment",
															"src": "6001:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6017:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "6017:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6011:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "6011:5:1"
																},
																"nativeSrc": "6011:12:1",
																"nodeType": "YulFunctionCall",
																"src": "6011:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6001:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6001:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "5916:114:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5973:5:1",
														"nodeType": "YulTypedName",
														"src": "5973:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5983:6:1",
														"nodeType": "YulTypedName",
														"src": "5983:6:1",
														"type": ""
													}
												],
												"src": "5916:114:1"
											},
											{
												"body": {
													"nativeSrc": "6147:73:1",
													"nodeType": "YulBlock",
													"src": "6147:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6164:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6164:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6169:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6169:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6157:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6157:6:1"
																},
																"nativeSrc": "6157:19:1",
																"nodeType": "YulFunctionCall",
																"src": "6157:19:1"
															},
															"nativeSrc": "6157:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "6157:19:1"
														},
														{
															"nativeSrc": "6185:29:1",
															"nodeType": "YulAssignment",
															"src": "6185:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6204:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6204:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6209:4:1",
																		"nodeType": "YulLiteral",
																		"src": "6209:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6200:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6200:3:1"
																},
																"nativeSrc": "6200:14:1",
																"nodeType": "YulFunctionCall",
																"src": "6200:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6185:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "6185:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "6036:184:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6119:3:1",
														"nodeType": "YulTypedName",
														"src": "6119:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6124:6:1",
														"nodeType": "YulTypedName",
														"src": "6124:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6135:11:1",
														"nodeType": "YulTypedName",
														"src": "6135:11:1",
														"type": ""
													}
												],
												"src": "6036:184:1"
											},
											{
												"body": {
													"nativeSrc": "6298:60:1",
													"nodeType": "YulBlock",
													"src": "6298:60:1",
													"statements": [
														{
															"nativeSrc": "6308:11:1",
															"nodeType": "YulAssignment",
															"src": "6308:11:1",
															"value": {
																"name": "ptr",
																"nativeSrc": "6316:3:1",
																"nodeType": "YulIdentifier",
																"src": "6316:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6308:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6308:4:1"
																}
															]
														},
														{
															"nativeSrc": "6329:22:1",
															"nodeType": "YulAssignment",
															"src": "6329:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "6341:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6341:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6346:4:1",
																		"nodeType": "YulLiteral",
																		"src": "6346:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6337:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6337:3:1"
																},
																"nativeSrc": "6337:14:1",
																"nodeType": "YulFunctionCall",
																"src": "6337:14:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6329:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6329:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "6226:132:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "6285:3:1",
														"nodeType": "YulTypedName",
														"src": "6285:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "6293:4:1",
														"nodeType": "YulTypedName",
														"src": "6293:4:1",
														"type": ""
													}
												],
												"src": "6226:132:1"
											},
											{
												"body": {
													"nativeSrc": "6419:53:1",
													"nodeType": "YulBlock",
													"src": "6419:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6436:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6436:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6459:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "6459:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "6441:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "6441:17:1"
																		},
																		"nativeSrc": "6441:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6441:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6429:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6429:6:1"
																},
																"nativeSrc": "6429:37:1",
																"nodeType": "YulFunctionCall",
																"src": "6429:37:1"
															},
															"nativeSrc": "6429:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "6429:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "6364:108:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6407:5:1",
														"nodeType": "YulTypedName",
														"src": "6407:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6414:3:1",
														"nodeType": "YulTypedName",
														"src": "6414:3:1",
														"type": ""
													}
												],
												"src": "6364:108:1"
											},
											{
												"body": {
													"nativeSrc": "6558:99:1",
													"nodeType": "YulBlock",
													"src": "6558:99:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6602:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6602:6:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "6610:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6610:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nativeSrc": "6568:33:1",
																	"nodeType": "YulIdentifier",
																	"src": "6568:33:1"
																},
																"nativeSrc": "6568:46:1",
																"nodeType": "YulFunctionCall",
																"src": "6568:46:1"
															},
															"nativeSrc": "6568:46:1",
															"nodeType": "YulExpressionStatement",
															"src": "6568:46:1"
														},
														{
															"nativeSrc": "6623:28:1",
															"nodeType": "YulAssignment",
															"src": "6623:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6641:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6641:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6646:4:1",
																		"nodeType": "YulLiteral",
																		"src": "6646:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6637:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6637:3:1"
																},
																"nativeSrc": "6637:14:1",
																"nodeType": "YulFunctionCall",
																"src": "6637:14:1"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "6623:10:1",
																	"nodeType": "YulIdentifier",
																	"src": "6623:10:1"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nativeSrc": "6478:179:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "6531:6:1",
														"nodeType": "YulTypedName",
														"src": "6531:6:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6539:3:1",
														"nodeType": "YulTypedName",
														"src": "6539:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "6547:10:1",
														"nodeType": "YulTypedName",
														"src": "6547:10:1",
														"type": ""
													}
												],
												"src": "6478:179:1"
											},
											{
												"body": {
													"nativeSrc": "6738:38:1",
													"nodeType": "YulBlock",
													"src": "6738:38:1",
													"statements": [
														{
															"nativeSrc": "6748:22:1",
															"nodeType": "YulAssignment",
															"src": "6748:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "6760:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6760:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6765:4:1",
																		"nodeType": "YulLiteral",
																		"src": "6765:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6756:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6756:3:1"
																},
																"nativeSrc": "6756:14:1",
																"nodeType": "YulFunctionCall",
																"src": "6756:14:1"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "6748:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6748:4:1"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "6663:113:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "6725:3:1",
														"nodeType": "YulTypedName",
														"src": "6725:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "6733:4:1",
														"nodeType": "YulTypedName",
														"src": "6733:4:1",
														"type": ""
													}
												],
												"src": "6663:113:1"
											},
											{
												"body": {
													"nativeSrc": "6936:608:1",
													"nodeType": "YulBlock",
													"src": "6936:608:1",
													"statements": [
														{
															"nativeSrc": "6946:68:1",
															"nodeType": "YulVariableDeclaration",
															"src": "6946:68:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7008:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "7008:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "6960:47:1",
																	"nodeType": "YulIdentifier",
																	"src": "6960:47:1"
																},
																"nativeSrc": "6960:54:1",
																"nodeType": "YulFunctionCall",
																"src": "6960:54:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6950:6:1",
																	"nodeType": "YulTypedName",
																	"src": "6950:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7023:93:1",
															"nodeType": "YulAssignment",
															"src": "7023:93:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7104:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7104:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7109:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7109:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "7030:73:1",
																	"nodeType": "YulIdentifier",
																	"src": "7030:73:1"
																},
																"nativeSrc": "7030:86:1",
																"nodeType": "YulFunctionCall",
																"src": "7030:86:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7023:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7023:3:1"
																}
															]
														},
														{
															"nativeSrc": "7125:71:1",
															"nodeType": "YulVariableDeclaration",
															"src": "7125:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7190:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "7190:5:1"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "7140:49:1",
																	"nodeType": "YulIdentifier",
																	"src": "7140:49:1"
																},
																"nativeSrc": "7140:56:1",
																"nodeType": "YulFunctionCall",
																"src": "7140:56:1"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "7129:7:1",
																	"nodeType": "YulTypedName",
																	"src": "7129:7:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7205:21:1",
															"nodeType": "YulVariableDeclaration",
															"src": "7205:21:1",
															"value": {
																"name": "baseRef",
																"nativeSrc": "7219:7:1",
																"nodeType": "YulIdentifier",
																"src": "7219:7:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "7209:6:1",
																	"nodeType": "YulTypedName",
																	"src": "7209:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7295:224:1",
																"nodeType": "YulBlock",
																"src": "7295:224:1",
																"statements": [
																	{
																		"nativeSrc": "7309:34:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7309:34:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "7336:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "7336:6:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "7330:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "7330:5:1"
																			},
																			"nativeSrc": "7330:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7330:13:1"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "7313:13:1",
																				"nodeType": "YulTypedName",
																				"src": "7313:13:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "7356:70:1",
																		"nodeType": "YulAssignment",
																		"src": "7356:70:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "7407:13:1",
																					"nodeType": "YulIdentifier",
																					"src": "7407:13:1"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "7422:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "7422:3:1"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nativeSrc": "7363:43:1",
																				"nodeType": "YulIdentifier",
																				"src": "7363:43:1"
																			},
																			"nativeSrc": "7363:63:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7363:63:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "7356:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "7356:3:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7439:70:1",
																		"nodeType": "YulAssignment",
																		"src": "7439:70:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "7502:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "7502:6:1"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nativeSrc": "7449:52:1",
																				"nodeType": "YulIdentifier",
																				"src": "7449:52:1"
																			},
																			"nativeSrc": "7449:60:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7449:60:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "7439:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "7439:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "7257:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "7257:1:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7260:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7260:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "7254:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "7254:2:1"
																},
																"nativeSrc": "7254:13:1",
																"nodeType": "YulFunctionCall",
																"src": "7254:13:1"
															},
															"nativeSrc": "7235:284:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7268:18:1",
																"nodeType": "YulBlock",
																"src": "7268:18:1",
																"statements": [
																	{
																		"nativeSrc": "7270:14:1",
																		"nodeType": "YulAssignment",
																		"src": "7270:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "7279:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "7279:1:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7282:1:1",
																					"nodeType": "YulLiteral",
																					"src": "7282:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7275:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "7275:3:1"
																			},
																			"nativeSrc": "7275:9:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7275:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "7270:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "7270:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "7239:14:1",
																"nodeType": "YulBlock",
																"src": "7239:14:1",
																"statements": [
																	{
																		"nativeSrc": "7241:10:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7241:10:1",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "7250:1:1",
																			"nodeType": "YulLiteral",
																			"src": "7250:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "7245:1:1",
																				"nodeType": "YulTypedName",
																				"src": "7245:1:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "7235:284:1"
														},
														{
															"nativeSrc": "7528:10:1",
															"nodeType": "YulAssignment",
															"src": "7528:10:1",
															"value": {
																"name": "pos",
																"nativeSrc": "7535:3:1",
																"nodeType": "YulIdentifier",
																"src": "7535:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7528:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7528:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "6812:732:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6915:5:1",
														"nodeType": "YulTypedName",
														"src": "6915:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6922:3:1",
														"nodeType": "YulTypedName",
														"src": "6922:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6931:3:1",
														"nodeType": "YulTypedName",
														"src": "6931:3:1",
														"type": ""
													}
												],
												"src": "6812:732:1"
											},
											{
												"body": {
													"nativeSrc": "7904:861:1",
													"nodeType": "YulBlock",
													"src": "7904:861:1",
													"statements": [
														{
															"nativeSrc": "7914:27:1",
															"nodeType": "YulAssignment",
															"src": "7914:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7926:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7926:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7937:3:1",
																		"nodeType": "YulLiteral",
																		"src": "7937:3:1",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7922:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7922:3:1"
																},
																"nativeSrc": "7922:19:1",
																"nodeType": "YulFunctionCall",
																"src": "7922:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7914:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7914:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7993:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7993:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8006:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8006:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8017:1:1",
																				"nodeType": "YulLiteral",
																				"src": "8017:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8002:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8002:3:1"
																		},
																		"nativeSrc": "8002:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8002:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes1_to_t_bytes1_fromStack",
																	"nativeSrc": "7951:41:1",
																	"nodeType": "YulIdentifier",
																	"src": "7951:41:1"
																},
																"nativeSrc": "7951:69:1",
																"nodeType": "YulFunctionCall",
																"src": "7951:69:1"
															},
															"nativeSrc": "7951:69:1",
															"nodeType": "YulExpressionStatement",
															"src": "7951:69:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8041:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8041:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8052:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8052:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8037:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8037:3:1"
																		},
																		"nativeSrc": "8037:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8037:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8061:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "8061:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8067:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8067:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8057:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8057:3:1"
																		},
																		"nativeSrc": "8057:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8057:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8030:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8030:6:1"
																},
																"nativeSrc": "8030:48:1",
																"nodeType": "YulFunctionCall",
																"src": "8030:48:1"
															},
															"nativeSrc": "8030:48:1",
															"nodeType": "YulExpressionStatement",
															"src": "8030:48:1"
														},
														{
															"nativeSrc": "8087:86:1",
															"nodeType": "YulAssignment",
															"src": "8087:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8159:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8159:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "8168:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "8168:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8095:63:1",
																	"nodeType": "YulIdentifier",
																	"src": "8095:63:1"
																},
																"nativeSrc": "8095:78:1",
																"nodeType": "YulFunctionCall",
																"src": "8095:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8087:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8087:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8194:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8194:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8205:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8205:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8190:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8190:3:1"
																		},
																		"nativeSrc": "8190:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8190:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8214:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "8214:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8220:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8220:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8210:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8210:3:1"
																		},
																		"nativeSrc": "8210:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8210:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8183:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8183:6:1"
																},
																"nativeSrc": "8183:48:1",
																"nodeType": "YulFunctionCall",
																"src": "8183:48:1"
															},
															"nativeSrc": "8183:48:1",
															"nodeType": "YulExpressionStatement",
															"src": "8183:48:1"
														},
														{
															"nativeSrc": "8240:86:1",
															"nodeType": "YulAssignment",
															"src": "8240:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8312:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8312:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "8321:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "8321:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8248:63:1",
																	"nodeType": "YulIdentifier",
																	"src": "8248:63:1"
																},
																"nativeSrc": "8248:78:1",
																"nodeType": "YulFunctionCall",
																"src": "8248:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8240:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8240:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "8380:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8380:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8393:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8393:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8404:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8404:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8389:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8389:3:1"
																		},
																		"nativeSrc": "8389:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8389:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8336:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "8336:43:1"
																},
																"nativeSrc": "8336:72:1",
																"nodeType": "YulFunctionCall",
																"src": "8336:72:1"
															},
															"nativeSrc": "8336:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "8336:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "8462:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8462:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8475:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8475:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8486:3:1",
																				"nodeType": "YulLiteral",
																				"src": "8486:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8471:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8471:3:1"
																		},
																		"nativeSrc": "8471:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8471:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8418:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "8418:43:1"
																},
																"nativeSrc": "8418:73:1",
																"nodeType": "YulFunctionCall",
																"src": "8418:73:1"
															},
															"nativeSrc": "8418:73:1",
															"nodeType": "YulExpressionStatement",
															"src": "8418:73:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "8545:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8545:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8558:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8558:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8569:3:1",
																				"nodeType": "YulLiteral",
																				"src": "8569:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8554:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8554:3:1"
																		},
																		"nativeSrc": "8554:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8554:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "8501:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "8501:43:1"
																},
																"nativeSrc": "8501:73:1",
																"nodeType": "YulFunctionCall",
																"src": "8501:73:1"
															},
															"nativeSrc": "8501:73:1",
															"nodeType": "YulExpressionStatement",
															"src": "8501:73:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8595:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8595:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8606:3:1",
																				"nodeType": "YulLiteral",
																				"src": "8606:3:1",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8591:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8591:3:1"
																		},
																		"nativeSrc": "8591:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8591:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8616:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "8616:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8622:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8622:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8612:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8612:3:1"
																		},
																		"nativeSrc": "8612:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8612:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8584:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8584:6:1"
																},
																"nativeSrc": "8584:49:1",
																"nodeType": "YulFunctionCall",
																"src": "8584:49:1"
															},
															"nativeSrc": "8584:49:1",
															"nodeType": "YulExpressionStatement",
															"src": "8584:49:1"
														},
														{
															"nativeSrc": "8642:116:1",
															"nodeType": "YulAssignment",
															"src": "8642:116:1",
															"value": {
																"arguments": [
																	{
																		"name": "value6",
																		"nativeSrc": "8744:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8744:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "8753:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "8753:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "8650:93:1",
																	"nodeType": "YulIdentifier",
																	"src": "8650:93:1"
																},
																"nativeSrc": "8650:108:1",
																"nodeType": "YulFunctionCall",
																"src": "8650:108:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8642:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8642:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "7550:1215:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7828:9:1",
														"nodeType": "YulTypedName",
														"src": "7828:9:1",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "7840:6:1",
														"nodeType": "YulTypedName",
														"src": "7840:6:1",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "7848:6:1",
														"nodeType": "YulTypedName",
														"src": "7848:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "7856:6:1",
														"nodeType": "YulTypedName",
														"src": "7856:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "7864:6:1",
														"nodeType": "YulTypedName",
														"src": "7864:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7872:6:1",
														"nodeType": "YulTypedName",
														"src": "7872:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7880:6:1",
														"nodeType": "YulTypedName",
														"src": "7880:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7888:6:1",
														"nodeType": "YulTypedName",
														"src": "7888:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7899:4:1",
														"nodeType": "YulTypedName",
														"src": "7899:4:1",
														"type": ""
													}
												],
												"src": "7550:1215:1"
											},
											{
												"body": {
													"nativeSrc": "8869:124:1",
													"nodeType": "YulBlock",
													"src": "8869:124:1",
													"statements": [
														{
															"nativeSrc": "8879:26:1",
															"nodeType": "YulAssignment",
															"src": "8879:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8891:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8891:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8902:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8902:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8887:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8887:3:1"
																},
																"nativeSrc": "8887:18:1",
																"nodeType": "YulFunctionCall",
																"src": "8887:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8879:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8879:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8959:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8959:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8972:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8972:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8983:1:1",
																				"nodeType": "YulLiteral",
																				"src": "8983:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8968:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8968:3:1"
																		},
																		"nativeSrc": "8968:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8968:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8915:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "8915:43:1"
																},
																"nativeSrc": "8915:71:1",
																"nodeType": "YulFunctionCall",
																"src": "8915:71:1"
															},
															"nativeSrc": "8915:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "8915:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "8771:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8841:9:1",
														"nodeType": "YulTypedName",
														"src": "8841:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8853:6:1",
														"nodeType": "YulTypedName",
														"src": "8853:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8864:4:1",
														"nodeType": "YulTypedName",
														"src": "8864:4:1",
														"type": ""
													}
												],
												"src": "8771:222:1"
											},
											{
												"body": {
													"nativeSrc": "9040:77:1",
													"nodeType": "YulBlock",
													"src": "9040:77:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "9095:16:1",
																"nodeType": "YulBlock",
																"src": "9095:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9104:1:1",
																					"nodeType": "YulLiteral",
																					"src": "9104:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9107:1:1",
																					"nodeType": "YulLiteral",
																					"src": "9107:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9097:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "9097:6:1"
																			},
																			"nativeSrc": "9097:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "9097:12:1"
																		},
																		"nativeSrc": "9097:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "9097:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9063:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "9063:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9086:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "9086:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nativeSrc": "9070:15:1",
																					"nodeType": "YulIdentifier",
																					"src": "9070:15:1"
																				},
																				"nativeSrc": "9070:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "9070:22:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9060:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "9060:2:1"
																		},
																		"nativeSrc": "9060:33:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9060:33:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9053:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9053:6:1"
																},
																"nativeSrc": "9053:41:1",
																"nodeType": "YulFunctionCall",
																"src": "9053:41:1"
															},
															"nativeSrc": "9050:61:1",
															"nodeType": "YulIf",
															"src": "9050:61:1"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nativeSrc": "8999:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9033:5:1",
														"nodeType": "YulTypedName",
														"src": "9033:5:1",
														"type": ""
													}
												],
												"src": "8999:118:1"
											},
											{
												"body": {
													"nativeSrc": "9173:85:1",
													"nodeType": "YulBlock",
													"src": "9173:85:1",
													"statements": [
														{
															"nativeSrc": "9183:29:1",
															"nodeType": "YulAssignment",
															"src": "9183:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9205:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9205:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9192:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "9192:12:1"
																},
																"nativeSrc": "9192:20:1",
																"nodeType": "YulFunctionCall",
																"src": "9192:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9183:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "9183:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9246:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "9246:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nativeSrc": "9221:24:1",
																	"nodeType": "YulIdentifier",
																	"src": "9221:24:1"
																},
																"nativeSrc": "9221:31:1",
																"nodeType": "YulFunctionCall",
																"src": "9221:31:1"
															},
															"nativeSrc": "9221:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "9221:31:1"
														}
													]
												},
												"name": "abi_decode_t_uint8",
												"nativeSrc": "9123:135:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9151:6:1",
														"nodeType": "YulTypedName",
														"src": "9151:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9159:3:1",
														"nodeType": "YulTypedName",
														"src": "9159:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9167:5:1",
														"nodeType": "YulTypedName",
														"src": "9167:5:1",
														"type": ""
													}
												],
												"src": "9123:135:1"
											},
											{
												"body": {
													"nativeSrc": "9307:79:1",
													"nodeType": "YulBlock",
													"src": "9307:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "9364:16:1",
																"nodeType": "YulBlock",
																"src": "9364:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9373:1:1",
																					"nodeType": "YulLiteral",
																					"src": "9373:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9376:1:1",
																					"nodeType": "YulLiteral",
																					"src": "9376:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9366:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "9366:6:1"
																			},
																			"nativeSrc": "9366:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "9366:12:1"
																		},
																		"nativeSrc": "9366:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "9366:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9330:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "9330:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9355:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "9355:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "9337:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "9337:17:1"
																				},
																				"nativeSrc": "9337:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "9337:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9327:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "9327:2:1"
																		},
																		"nativeSrc": "9327:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9327:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9320:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9320:6:1"
																},
																"nativeSrc": "9320:43:1",
																"nodeType": "YulFunctionCall",
																"src": "9320:43:1"
															},
															"nativeSrc": "9317:63:1",
															"nodeType": "YulIf",
															"src": "9317:63:1"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "9264:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9300:5:1",
														"nodeType": "YulTypedName",
														"src": "9300:5:1",
														"type": ""
													}
												],
												"src": "9264:122:1"
											},
											{
												"body": {
													"nativeSrc": "9444:87:1",
													"nodeType": "YulBlock",
													"src": "9444:87:1",
													"statements": [
														{
															"nativeSrc": "9454:29:1",
															"nodeType": "YulAssignment",
															"src": "9454:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9476:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9476:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9463:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "9463:12:1"
																},
																"nativeSrc": "9463:20:1",
																"nodeType": "YulFunctionCall",
																"src": "9463:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9454:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "9454:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9519:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "9519:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "9492:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "9492:26:1"
																},
																"nativeSrc": "9492:33:1",
																"nodeType": "YulFunctionCall",
																"src": "9492:33:1"
															},
															"nativeSrc": "9492:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "9492:33:1"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "9392:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9422:6:1",
														"nodeType": "YulTypedName",
														"src": "9422:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9430:3:1",
														"nodeType": "YulTypedName",
														"src": "9430:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9438:5:1",
														"nodeType": "YulTypedName",
														"src": "9438:5:1",
														"type": ""
													}
												],
												"src": "9392:139:1"
											},
											{
												"body": {
													"nativeSrc": "9703:1033:1",
													"nodeType": "YulBlock",
													"src": "9703:1033:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "9750:83:1",
																"nodeType": "YulBlock",
																"src": "9750:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9752:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "9752:77:1"
																			},
																			"nativeSrc": "9752:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "9752:79:1"
																		},
																		"nativeSrc": "9752:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "9752:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9724:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "9724:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9733:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9733:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9720:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9720:3:1"
																		},
																		"nativeSrc": "9720:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9720:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9745:3:1",
																		"nodeType": "YulLiteral",
																		"src": "9745:3:1",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9716:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9716:3:1"
																},
																"nativeSrc": "9716:33:1",
																"nodeType": "YulFunctionCall",
																"src": "9716:33:1"
															},
															"nativeSrc": "9713:120:1",
															"nodeType": "YulIf",
															"src": "9713:120:1"
														},
														{
															"nativeSrc": "9843:117:1",
															"nodeType": "YulBlock",
															"src": "9843:117:1",
															"statements": [
																{
																	"nativeSrc": "9858:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9858:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9872:1:1",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9862:6:1",
																			"nodeType": "YulTypedName",
																			"src": "9862:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9887:63:1",
																	"nodeType": "YulAssignment",
																	"src": "9887:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9922:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "9922:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9933:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "9933:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9918:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "9918:3:1"
																				},
																				"nativeSrc": "9918:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "9918:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9942:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "9942:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9897:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "9897:20:1"
																		},
																		"nativeSrc": "9897:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9897:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9887:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "9887:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9970:118:1",
															"nodeType": "YulBlock",
															"src": "9970:118:1",
															"statements": [
																{
																	"nativeSrc": "9985:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9985:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9999:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9999:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9989:6:1",
																			"nodeType": "YulTypedName",
																			"src": "9989:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10015:63:1",
																	"nodeType": "YulAssignment",
																	"src": "10015:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10050:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "10050:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10061:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "10061:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10046:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "10046:3:1"
																				},
																				"nativeSrc": "10046:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10046:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10070:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "10070:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10025:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "10025:20:1"
																		},
																		"nativeSrc": "10025:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10025:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10015:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "10015:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10098:118:1",
															"nodeType": "YulBlock",
															"src": "10098:118:1",
															"statements": [
																{
																	"nativeSrc": "10113:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10113:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10127:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10127:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10117:6:1",
																			"nodeType": "YulTypedName",
																			"src": "10117:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10143:63:1",
																	"nodeType": "YulAssignment",
																	"src": "10143:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10178:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "10178:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10189:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "10189:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10174:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "10174:3:1"
																				},
																				"nativeSrc": "10174:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10174:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10198:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "10198:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "10153:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "10153:20:1"
																		},
																		"nativeSrc": "10153:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10153:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "10143:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "10143:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10226:118:1",
															"nodeType": "YulBlock",
															"src": "10226:118:1",
															"statements": [
																{
																	"nativeSrc": "10241:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10241:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10255:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10255:2:1",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10245:6:1",
																			"nodeType": "YulTypedName",
																			"src": "10245:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10271:63:1",
																	"nodeType": "YulAssignment",
																	"src": "10271:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10306:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "10306:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10317:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "10317:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10302:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "10302:3:1"
																				},
																				"nativeSrc": "10302:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10302:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10326:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "10326:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "10281:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "10281:20:1"
																		},
																		"nativeSrc": "10281:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10281:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "10271:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "10271:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10354:117:1",
															"nodeType": "YulBlock",
															"src": "10354:117:1",
															"statements": [
																{
																	"nativeSrc": "10369:17:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10369:17:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10383:3:1",
																		"nodeType": "YulLiteral",
																		"src": "10383:3:1",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10373:6:1",
																			"nodeType": "YulTypedName",
																			"src": "10373:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10400:61:1",
																	"nodeType": "YulAssignment",
																	"src": "10400:61:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10433:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "10433:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10444:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "10444:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10429:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "10429:3:1"
																				},
																				"nativeSrc": "10429:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10429:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10453:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "10453:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8",
																			"nativeSrc": "10410:18:1",
																			"nodeType": "YulIdentifier",
																			"src": "10410:18:1"
																		},
																		"nativeSrc": "10410:51:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10410:51:1"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "10400:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "10400:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10481:119:1",
															"nodeType": "YulBlock",
															"src": "10481:119:1",
															"statements": [
																{
																	"nativeSrc": "10496:17:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10496:17:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10510:3:1",
																		"nodeType": "YulLiteral",
																		"src": "10510:3:1",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10500:6:1",
																			"nodeType": "YulTypedName",
																			"src": "10500:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10527:63:1",
																	"nodeType": "YulAssignment",
																	"src": "10527:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10562:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "10562:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10573:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "10573:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10558:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "10558:3:1"
																				},
																				"nativeSrc": "10558:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10558:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10582:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "10582:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "10537:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "10537:20:1"
																		},
																		"nativeSrc": "10537:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10537:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "10527:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "10527:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10610:119:1",
															"nodeType": "YulBlock",
															"src": "10610:119:1",
															"statements": [
																{
																	"nativeSrc": "10625:17:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10625:17:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10639:3:1",
																		"nodeType": "YulLiteral",
																		"src": "10639:3:1",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10629:6:1",
																			"nodeType": "YulTypedName",
																			"src": "10629:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10656:63:1",
																	"nodeType": "YulAssignment",
																	"src": "10656:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10691:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "10691:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10702:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "10702:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10687:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "10687:3:1"
																				},
																				"nativeSrc": "10687:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10687:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10711:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "10711:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "10666:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "10666:20:1"
																		},
																		"nativeSrc": "10666:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10666:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nativeSrc": "10656:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "10656:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32",
												"nativeSrc": "9537:1199:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9625:9:1",
														"nodeType": "YulTypedName",
														"src": "9625:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9636:7:1",
														"nodeType": "YulTypedName",
														"src": "9636:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9648:6:1",
														"nodeType": "YulTypedName",
														"src": "9648:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9656:6:1",
														"nodeType": "YulTypedName",
														"src": "9656:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9664:6:1",
														"nodeType": "YulTypedName",
														"src": "9664:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9672:6:1",
														"nodeType": "YulTypedName",
														"src": "9672:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "9680:6:1",
														"nodeType": "YulTypedName",
														"src": "9680:6:1",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "9688:6:1",
														"nodeType": "YulTypedName",
														"src": "9688:6:1",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "9696:6:1",
														"nodeType": "YulTypedName",
														"src": "9696:6:1",
														"type": ""
													}
												],
												"src": "9537:1199:1"
											},
											{
												"body": {
													"nativeSrc": "10825:391:1",
													"nodeType": "YulBlock",
													"src": "10825:391:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "10871:83:1",
																"nodeType": "YulBlock",
																"src": "10871:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10873:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "10873:77:1"
																			},
																			"nativeSrc": "10873:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "10873:79:1"
																		},
																		"nativeSrc": "10873:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "10873:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10846:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "10846:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10855:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10855:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10842:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10842:3:1"
																		},
																		"nativeSrc": "10842:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10842:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10867:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10867:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10838:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10838:3:1"
																},
																"nativeSrc": "10838:32:1",
																"nodeType": "YulFunctionCall",
																"src": "10838:32:1"
															},
															"nativeSrc": "10835:119:1",
															"nodeType": "YulIf",
															"src": "10835:119:1"
														},
														{
															"nativeSrc": "10964:117:1",
															"nodeType": "YulBlock",
															"src": "10964:117:1",
															"statements": [
																{
																	"nativeSrc": "10979:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10979:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10993:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10993:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10983:6:1",
																			"nodeType": "YulTypedName",
																			"src": "10983:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11008:63:1",
																	"nodeType": "YulAssignment",
																	"src": "11008:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11043:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "11043:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11054:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "11054:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11039:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "11039:3:1"
																				},
																				"nativeSrc": "11039:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "11039:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11063:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "11063:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11018:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "11018:20:1"
																		},
																		"nativeSrc": "11018:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11018:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11008:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "11008:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11091:118:1",
															"nodeType": "YulBlock",
															"src": "11091:118:1",
															"statements": [
																{
																	"nativeSrc": "11106:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11106:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11120:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11120:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11110:6:1",
																			"nodeType": "YulTypedName",
																			"src": "11110:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11136:63:1",
																	"nodeType": "YulAssignment",
																	"src": "11136:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11171:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "11171:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11182:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "11182:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11167:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "11167:3:1"
																				},
																				"nativeSrc": "11167:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "11167:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11191:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "11191:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11146:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "11146:20:1"
																		},
																		"nativeSrc": "11146:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11146:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "11136:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "11136:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "10742:474:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10787:9:1",
														"nodeType": "YulTypedName",
														"src": "10787:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10798:7:1",
														"nodeType": "YulTypedName",
														"src": "10798:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10810:6:1",
														"nodeType": "YulTypedName",
														"src": "10810:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10818:6:1",
														"nodeType": "YulTypedName",
														"src": "10818:6:1",
														"type": ""
													}
												],
												"src": "10742:474:1"
											},
											{
												"body": {
													"nativeSrc": "11250:152:1",
													"nodeType": "YulBlock",
													"src": "11250:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11267:1:1",
																		"nodeType": "YulLiteral",
																		"src": "11267:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11270:77:1",
																		"nodeType": "YulLiteral",
																		"src": "11270:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11260:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11260:6:1"
																},
																"nativeSrc": "11260:88:1",
																"nodeType": "YulFunctionCall",
																"src": "11260:88:1"
															},
															"nativeSrc": "11260:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "11260:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11364:1:1",
																		"nodeType": "YulLiteral",
																		"src": "11364:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11367:4:1",
																		"nodeType": "YulLiteral",
																		"src": "11367:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11357:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11357:6:1"
																},
																"nativeSrc": "11357:15:1",
																"nodeType": "YulFunctionCall",
																"src": "11357:15:1"
															},
															"nativeSrc": "11357:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "11357:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11388:1:1",
																		"nodeType": "YulLiteral",
																		"src": "11388:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11391:4:1",
																		"nodeType": "YulLiteral",
																		"src": "11391:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11381:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11381:6:1"
																},
																"nativeSrc": "11381:15:1",
																"nodeType": "YulFunctionCall",
																"src": "11381:15:1"
															},
															"nativeSrc": "11381:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "11381:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "11222:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "11222:180:1"
											},
											{
												"body": {
													"nativeSrc": "11459:269:1",
													"nodeType": "YulBlock",
													"src": "11459:269:1",
													"statements": [
														{
															"nativeSrc": "11469:22:1",
															"nodeType": "YulAssignment",
															"src": "11469:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "11483:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "11483:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11489:1:1",
																		"nodeType": "YulLiteral",
																		"src": "11489:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "11479:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11479:3:1"
																},
																"nativeSrc": "11479:12:1",
																"nodeType": "YulFunctionCall",
																"src": "11479:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "11469:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11469:6:1"
																}
															]
														},
														{
															"nativeSrc": "11500:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "11500:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "11530:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "11530:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11536:1:1",
																		"nodeType": "YulLiteral",
																		"src": "11536:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "11526:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11526:3:1"
																},
																"nativeSrc": "11526:12:1",
																"nodeType": "YulFunctionCall",
																"src": "11526:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "11504:18:1",
																	"nodeType": "YulTypedName",
																	"src": "11504:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11577:51:1",
																"nodeType": "YulBlock",
																"src": "11577:51:1",
																"statements": [
																	{
																		"nativeSrc": "11591:27:1",
																		"nodeType": "YulAssignment",
																		"src": "11591:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "11605:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "11605:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11613:4:1",
																					"nodeType": "YulLiteral",
																					"src": "11613:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "11601:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "11601:3:1"
																			},
																			"nativeSrc": "11601:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "11601:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "11591:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "11591:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "11557:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "11557:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11550:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11550:6:1"
																},
																"nativeSrc": "11550:26:1",
																"nodeType": "YulFunctionCall",
																"src": "11550:26:1"
															},
															"nativeSrc": "11547:81:1",
															"nodeType": "YulIf",
															"src": "11547:81:1"
														},
														{
															"body": {
																"nativeSrc": "11680:42:1",
																"nodeType": "YulBlock",
																"src": "11680:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "11694:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "11694:16:1"
																			},
																			"nativeSrc": "11694:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "11694:18:1"
																		},
																		"nativeSrc": "11694:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "11694:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "11644:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "11644:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "11667:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "11667:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11675:2:1",
																				"nodeType": "YulLiteral",
																				"src": "11675:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "11664:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "11664:2:1"
																		},
																		"nativeSrc": "11664:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11664:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "11641:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "11641:2:1"
																},
																"nativeSrc": "11641:38:1",
																"nodeType": "YulFunctionCall",
																"src": "11641:38:1"
															},
															"nativeSrc": "11638:84:1",
															"nodeType": "YulIf",
															"src": "11638:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "11408:320:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "11443:4:1",
														"nodeType": "YulTypedName",
														"src": "11443:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "11452:6:1",
														"nodeType": "YulTypedName",
														"src": "11452:6:1",
														"type": ""
													}
												],
												"src": "11408:320:1"
											},
											{
												"body": {
													"nativeSrc": "11762:152:1",
													"nodeType": "YulBlock",
													"src": "11762:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11779:1:1",
																		"nodeType": "YulLiteral",
																		"src": "11779:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11782:77:1",
																		"nodeType": "YulLiteral",
																		"src": "11782:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11772:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11772:6:1"
																},
																"nativeSrc": "11772:88:1",
																"nodeType": "YulFunctionCall",
																"src": "11772:88:1"
															},
															"nativeSrc": "11772:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "11772:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11876:1:1",
																		"nodeType": "YulLiteral",
																		"src": "11876:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11879:4:1",
																		"nodeType": "YulLiteral",
																		"src": "11879:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11869:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11869:6:1"
																},
																"nativeSrc": "11869:15:1",
																"nodeType": "YulFunctionCall",
																"src": "11869:15:1"
															},
															"nativeSrc": "11869:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "11869:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11900:1:1",
																		"nodeType": "YulLiteral",
																		"src": "11900:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11903:4:1",
																		"nodeType": "YulLiteral",
																		"src": "11903:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11893:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11893:6:1"
																},
																"nativeSrc": "11893:15:1",
																"nodeType": "YulFunctionCall",
																"src": "11893:15:1"
															},
															"nativeSrc": "11893:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "11893:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "11734:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "11734:180:1"
											},
											{
												"body": {
													"nativeSrc": "12158:537:1",
													"nodeType": "YulBlock",
													"src": "12158:537:1",
													"statements": [
														{
															"nativeSrc": "12168:27:1",
															"nodeType": "YulAssignment",
															"src": "12168:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12180:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "12180:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12191:3:1",
																		"nodeType": "YulLiteral",
																		"src": "12191:3:1",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12176:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12176:3:1"
																},
																"nativeSrc": "12176:19:1",
																"nodeType": "YulFunctionCall",
																"src": "12176:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12168:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "12168:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12249:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12249:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12262:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12262:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12273:1:1",
																				"nodeType": "YulLiteral",
																				"src": "12273:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12258:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12258:3:1"
																		},
																		"nativeSrc": "12258:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12258:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "12205:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "12205:43:1"
																},
																"nativeSrc": "12205:71:1",
																"nodeType": "YulFunctionCall",
																"src": "12205:71:1"
															},
															"nativeSrc": "12205:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "12205:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12330:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12330:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12343:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12343:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12354:2:1",
																				"nodeType": "YulLiteral",
																				"src": "12354:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12339:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12339:3:1"
																		},
																		"nativeSrc": "12339:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12339:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12286:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "12286:43:1"
																},
																"nativeSrc": "12286:72:1",
																"nodeType": "YulFunctionCall",
																"src": "12286:72:1"
															},
															"nativeSrc": "12286:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "12286:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "12412:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12412:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12425:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12425:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12436:2:1",
																				"nodeType": "YulLiteral",
																				"src": "12436:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12421:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12421:3:1"
																		},
																		"nativeSrc": "12421:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12421:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12368:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "12368:43:1"
																},
																"nativeSrc": "12368:72:1",
																"nodeType": "YulFunctionCall",
																"src": "12368:72:1"
															},
															"nativeSrc": "12368:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "12368:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "12494:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12494:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12507:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12507:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12518:2:1",
																				"nodeType": "YulLiteral",
																				"src": "12518:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12503:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12503:3:1"
																		},
																		"nativeSrc": "12503:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12503:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12450:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "12450:43:1"
																},
																"nativeSrc": "12450:72:1",
																"nodeType": "YulFunctionCall",
																"src": "12450:72:1"
															},
															"nativeSrc": "12450:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "12450:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "12576:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12576:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12589:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12589:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12600:3:1",
																				"nodeType": "YulLiteral",
																				"src": "12600:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12585:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12585:3:1"
																		},
																		"nativeSrc": "12585:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12585:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12532:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "12532:43:1"
																},
																"nativeSrc": "12532:73:1",
																"nodeType": "YulFunctionCall",
																"src": "12532:73:1"
															},
															"nativeSrc": "12532:73:1",
															"nodeType": "YulExpressionStatement",
															"src": "12532:73:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "12659:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12659:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12672:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12672:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12683:3:1",
																				"nodeType": "YulLiteral",
																				"src": "12683:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12668:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12668:3:1"
																		},
																		"nativeSrc": "12668:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12668:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12615:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "12615:43:1"
																},
																"nativeSrc": "12615:73:1",
																"nodeType": "YulFunctionCall",
																"src": "12615:73:1"
															},
															"nativeSrc": "12615:73:1",
															"nodeType": "YulExpressionStatement",
															"src": "12615:73:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11920:775:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12090:9:1",
														"nodeType": "YulTypedName",
														"src": "12090:9:1",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "12102:6:1",
														"nodeType": "YulTypedName",
														"src": "12102:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "12110:6:1",
														"nodeType": "YulTypedName",
														"src": "12110:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "12118:6:1",
														"nodeType": "YulTypedName",
														"src": "12118:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12126:6:1",
														"nodeType": "YulTypedName",
														"src": "12126:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12134:6:1",
														"nodeType": "YulTypedName",
														"src": "12134:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12142:6:1",
														"nodeType": "YulTypedName",
														"src": "12142:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12153:4:1",
														"nodeType": "YulTypedName",
														"src": "12153:4:1",
														"type": ""
													}
												],
												"src": "11920:775:1"
											},
											{
												"body": {
													"nativeSrc": "12827:206:1",
													"nodeType": "YulBlock",
													"src": "12827:206:1",
													"statements": [
														{
															"nativeSrc": "12837:26:1",
															"nodeType": "YulAssignment",
															"src": "12837:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12849:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "12849:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12860:2:1",
																		"nodeType": "YulLiteral",
																		"src": "12860:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12845:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12845:3:1"
																},
																"nativeSrc": "12845:18:1",
																"nodeType": "YulFunctionCall",
																"src": "12845:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12837:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "12837:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12917:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12917:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12930:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12930:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12941:1:1",
																				"nodeType": "YulLiteral",
																				"src": "12941:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12926:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12926:3:1"
																		},
																		"nativeSrc": "12926:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12926:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12873:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "12873:43:1"
																},
																"nativeSrc": "12873:71:1",
																"nodeType": "YulFunctionCall",
																"src": "12873:71:1"
															},
															"nativeSrc": "12873:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "12873:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12998:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12998:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13011:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13011:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13022:2:1",
																				"nodeType": "YulLiteral",
																				"src": "13022:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13007:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13007:3:1"
																		},
																		"nativeSrc": "13007:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13007:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12954:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "12954:43:1"
																},
																"nativeSrc": "12954:72:1",
																"nodeType": "YulFunctionCall",
																"src": "12954:72:1"
															},
															"nativeSrc": "12954:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "12954:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "12701:332:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12791:9:1",
														"nodeType": "YulTypedName",
														"src": "12791:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12803:6:1",
														"nodeType": "YulTypedName",
														"src": "12803:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12811:6:1",
														"nodeType": "YulTypedName",
														"src": "12811:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12822:4:1",
														"nodeType": "YulTypedName",
														"src": "12822:4:1",
														"type": ""
													}
												],
												"src": "12701:332:1"
											},
											{
												"body": {
													"nativeSrc": "13193:288:1",
													"nodeType": "YulBlock",
													"src": "13193:288:1",
													"statements": [
														{
															"nativeSrc": "13203:26:1",
															"nodeType": "YulAssignment",
															"src": "13203:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13215:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "13215:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13226:2:1",
																		"nodeType": "YulLiteral",
																		"src": "13226:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13211:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13211:3:1"
																},
																"nativeSrc": "13211:18:1",
																"nodeType": "YulFunctionCall",
																"src": "13211:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13203:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "13203:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13283:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13283:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13296:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13296:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13307:1:1",
																				"nodeType": "YulLiteral",
																				"src": "13307:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13292:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13292:3:1"
																		},
																		"nativeSrc": "13292:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13292:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13239:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "13239:43:1"
																},
																"nativeSrc": "13239:71:1",
																"nodeType": "YulFunctionCall",
																"src": "13239:71:1"
															},
															"nativeSrc": "13239:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "13239:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13364:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13364:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13377:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13377:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13388:2:1",
																				"nodeType": "YulLiteral",
																				"src": "13388:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13373:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13373:3:1"
																		},
																		"nativeSrc": "13373:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13373:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13320:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "13320:43:1"
																},
																"nativeSrc": "13320:72:1",
																"nodeType": "YulFunctionCall",
																"src": "13320:72:1"
															},
															"nativeSrc": "13320:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "13320:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13446:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13446:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13459:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13459:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13470:2:1",
																				"nodeType": "YulLiteral",
																				"src": "13470:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13455:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13455:3:1"
																		},
																		"nativeSrc": "13455:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13455:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13402:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "13402:43:1"
																},
																"nativeSrc": "13402:72:1",
																"nodeType": "YulFunctionCall",
																"src": "13402:72:1"
															},
															"nativeSrc": "13402:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "13402:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "13039:442:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13149:9:1",
														"nodeType": "YulTypedName",
														"src": "13149:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13161:6:1",
														"nodeType": "YulTypedName",
														"src": "13161:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13169:6:1",
														"nodeType": "YulTypedName",
														"src": "13169:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13177:6:1",
														"nodeType": "YulTypedName",
														"src": "13177:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13188:4:1",
														"nodeType": "YulTypedName",
														"src": "13188:4:1",
														"type": ""
													}
												],
												"src": "13039:442:1"
											},
											{
												"body": {
													"nativeSrc": "13515:152:1",
													"nodeType": "YulBlock",
													"src": "13515:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13532:1:1",
																		"nodeType": "YulLiteral",
																		"src": "13532:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13535:77:1",
																		"nodeType": "YulLiteral",
																		"src": "13535:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13525:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "13525:6:1"
																},
																"nativeSrc": "13525:88:1",
																"nodeType": "YulFunctionCall",
																"src": "13525:88:1"
															},
															"nativeSrc": "13525:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "13525:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13629:1:1",
																		"nodeType": "YulLiteral",
																		"src": "13629:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13632:4:1",
																		"nodeType": "YulLiteral",
																		"src": "13632:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13622:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "13622:6:1"
																},
																"nativeSrc": "13622:15:1",
																"nodeType": "YulFunctionCall",
																"src": "13622:15:1"
															},
															"nativeSrc": "13622:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "13622:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13653:1:1",
																		"nodeType": "YulLiteral",
																		"src": "13653:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13656:4:1",
																		"nodeType": "YulLiteral",
																		"src": "13656:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13646:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "13646:6:1"
																},
																"nativeSrc": "13646:15:1",
																"nodeType": "YulFunctionCall",
																"src": "13646:15:1"
															},
															"nativeSrc": "13646:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "13646:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "13487:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "13487:180:1"
											},
											{
												"body": {
													"nativeSrc": "13717:147:1",
													"nodeType": "YulBlock",
													"src": "13717:147:1",
													"statements": [
														{
															"nativeSrc": "13727:25:1",
															"nodeType": "YulAssignment",
															"src": "13727:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13750:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "13750:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13732:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "13732:17:1"
																},
																"nativeSrc": "13732:20:1",
																"nodeType": "YulFunctionCall",
																"src": "13732:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13727:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "13727:1:1"
																}
															]
														},
														{
															"nativeSrc": "13761:25:1",
															"nodeType": "YulAssignment",
															"src": "13761:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13784:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "13784:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13766:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "13766:17:1"
																},
																"nativeSrc": "13766:20:1",
																"nodeType": "YulFunctionCall",
																"src": "13766:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13761:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "13761:1:1"
																}
															]
														},
														{
															"nativeSrc": "13795:16:1",
															"nodeType": "YulAssignment",
															"src": "13795:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13806:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "13806:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13809:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "13809:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13802:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13802:3:1"
																},
																"nativeSrc": "13802:9:1",
																"nodeType": "YulFunctionCall",
																"src": "13802:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "13795:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13795:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13835:22:1",
																"nodeType": "YulBlock",
																"src": "13835:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13837:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "13837:16:1"
																			},
																			"nativeSrc": "13837:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "13837:18:1"
																		},
																		"nativeSrc": "13837:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "13837:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13827:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "13827:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "13830:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "13830:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13824:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "13824:2:1"
																},
																"nativeSrc": "13824:10:1",
																"nodeType": "YulFunctionCall",
																"src": "13824:10:1"
															},
															"nativeSrc": "13821:36:1",
															"nodeType": "YulIf",
															"src": "13821:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "13673:191:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13704:1:1",
														"nodeType": "YulTypedName",
														"src": "13704:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13707:1:1",
														"nodeType": "YulTypedName",
														"src": "13707:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "13713:3:1",
														"nodeType": "YulTypedName",
														"src": "13713:3:1",
														"type": ""
													}
												],
												"src": "13673:191:1"
											},
											{
												"body": {
													"nativeSrc": "14080:454:1",
													"nodeType": "YulBlock",
													"src": "14080:454:1",
													"statements": [
														{
															"nativeSrc": "14090:27:1",
															"nodeType": "YulAssignment",
															"src": "14090:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14102:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "14102:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14113:3:1",
																		"nodeType": "YulLiteral",
																		"src": "14113:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14098:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "14098:3:1"
																},
																"nativeSrc": "14098:19:1",
																"nodeType": "YulFunctionCall",
																"src": "14098:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14090:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "14090:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14171:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "14171:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14184:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "14184:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14195:1:1",
																				"nodeType": "YulLiteral",
																				"src": "14195:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14180:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "14180:3:1"
																		},
																		"nativeSrc": "14180:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14180:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "14127:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "14127:43:1"
																},
																"nativeSrc": "14127:71:1",
																"nodeType": "YulFunctionCall",
																"src": "14127:71:1"
															},
															"nativeSrc": "14127:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "14127:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14252:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "14252:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14265:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "14265:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14276:2:1",
																				"nodeType": "YulLiteral",
																				"src": "14276:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14261:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "14261:3:1"
																		},
																		"nativeSrc": "14261:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14261:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "14208:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "14208:43:1"
																},
																"nativeSrc": "14208:72:1",
																"nodeType": "YulFunctionCall",
																"src": "14208:72:1"
															},
															"nativeSrc": "14208:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "14208:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14334:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "14334:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14347:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "14347:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14358:2:1",
																				"nodeType": "YulLiteral",
																				"src": "14358:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14343:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "14343:3:1"
																		},
																		"nativeSrc": "14343:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14343:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "14290:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "14290:43:1"
																},
																"nativeSrc": "14290:72:1",
																"nodeType": "YulFunctionCall",
																"src": "14290:72:1"
															},
															"nativeSrc": "14290:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "14290:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "14416:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "14416:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14429:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "14429:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14440:2:1",
																				"nodeType": "YulLiteral",
																				"src": "14440:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14425:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "14425:3:1"
																		},
																		"nativeSrc": "14425:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14425:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14372:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "14372:43:1"
																},
																"nativeSrc": "14372:72:1",
																"nodeType": "YulFunctionCall",
																"src": "14372:72:1"
															},
															"nativeSrc": "14372:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "14372:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "14498:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "14498:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14511:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "14511:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14522:3:1",
																				"nodeType": "YulLiteral",
																				"src": "14522:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14507:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "14507:3:1"
																		},
																		"nativeSrc": "14507:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14507:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14454:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "14454:43:1"
																},
																"nativeSrc": "14454:73:1",
																"nodeType": "YulFunctionCall",
																"src": "14454:73:1"
															},
															"nativeSrc": "14454:73:1",
															"nodeType": "YulExpressionStatement",
															"src": "14454:73:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "13870:664:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14020:9:1",
														"nodeType": "YulTypedName",
														"src": "14020:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "14032:6:1",
														"nodeType": "YulTypedName",
														"src": "14032:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "14040:6:1",
														"nodeType": "YulTypedName",
														"src": "14040:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14048:6:1",
														"nodeType": "YulTypedName",
														"src": "14048:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14056:6:1",
														"nodeType": "YulTypedName",
														"src": "14056:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14064:6:1",
														"nodeType": "YulTypedName",
														"src": "14064:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14075:4:1",
														"nodeType": "YulTypedName",
														"src": "14075:4:1",
														"type": ""
													}
												],
												"src": "13870:664:1"
											},
											{
												"body": {
													"nativeSrc": "14718:367:1",
													"nodeType": "YulBlock",
													"src": "14718:367:1",
													"statements": [
														{
															"nativeSrc": "14728:27:1",
															"nodeType": "YulAssignment",
															"src": "14728:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14740:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "14740:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14751:3:1",
																		"nodeType": "YulLiteral",
																		"src": "14751:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14736:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "14736:3:1"
																},
																"nativeSrc": "14736:19:1",
																"nodeType": "YulFunctionCall",
																"src": "14736:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14728:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "14728:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14809:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "14809:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14822:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "14822:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14833:1:1",
																				"nodeType": "YulLiteral",
																				"src": "14833:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14818:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "14818:3:1"
																		},
																		"nativeSrc": "14818:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14818:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "14765:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "14765:43:1"
																},
																"nativeSrc": "14765:71:1",
																"nodeType": "YulFunctionCall",
																"src": "14765:71:1"
															},
															"nativeSrc": "14765:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "14765:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14886:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "14886:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14899:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "14899:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14910:2:1",
																				"nodeType": "YulLiteral",
																				"src": "14910:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14895:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "14895:3:1"
																		},
																		"nativeSrc": "14895:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14895:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "14846:39:1",
																	"nodeType": "YulIdentifier",
																	"src": "14846:39:1"
																},
																"nativeSrc": "14846:68:1",
																"nodeType": "YulFunctionCall",
																"src": "14846:68:1"
															},
															"nativeSrc": "14846:68:1",
															"nodeType": "YulExpressionStatement",
															"src": "14846:68:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14968:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "14968:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14981:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "14981:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14992:2:1",
																				"nodeType": "YulLiteral",
																				"src": "14992:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14977:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "14977:3:1"
																		},
																		"nativeSrc": "14977:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14977:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "14924:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "14924:43:1"
																},
																"nativeSrc": "14924:72:1",
																"nodeType": "YulFunctionCall",
																"src": "14924:72:1"
															},
															"nativeSrc": "14924:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "14924:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "15050:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "15050:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15063:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "15063:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15074:2:1",
																				"nodeType": "YulLiteral",
																				"src": "15074:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15059:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "15059:3:1"
																		},
																		"nativeSrc": "15059:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "15059:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "15006:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "15006:43:1"
																},
																"nativeSrc": "15006:72:1",
																"nodeType": "YulFunctionCall",
																"src": "15006:72:1"
															},
															"nativeSrc": "15006:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "15006:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nativeSrc": "14540:545:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14666:9:1",
														"nodeType": "YulTypedName",
														"src": "14666:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "14678:6:1",
														"nodeType": "YulTypedName",
														"src": "14678:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14686:6:1",
														"nodeType": "YulTypedName",
														"src": "14686:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14694:6:1",
														"nodeType": "YulTypedName",
														"src": "14694:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14702:6:1",
														"nodeType": "YulTypedName",
														"src": "14702:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14713:4:1",
														"nodeType": "YulTypedName",
														"src": "14713:4:1",
														"type": ""
													}
												],
												"src": "14540:545:1"
											},
											{
												"body": {
													"nativeSrc": "15119:152:1",
													"nodeType": "YulBlock",
													"src": "15119:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15136:1:1",
																		"nodeType": "YulLiteral",
																		"src": "15136:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15139:77:1",
																		"nodeType": "YulLiteral",
																		"src": "15139:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15129:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15129:6:1"
																},
																"nativeSrc": "15129:88:1",
																"nodeType": "YulFunctionCall",
																"src": "15129:88:1"
															},
															"nativeSrc": "15129:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "15129:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15233:1:1",
																		"nodeType": "YulLiteral",
																		"src": "15233:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15236:4:1",
																		"nodeType": "YulLiteral",
																		"src": "15236:4:1",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15226:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15226:6:1"
																},
																"nativeSrc": "15226:15:1",
																"nodeType": "YulFunctionCall",
																"src": "15226:15:1"
															},
															"nativeSrc": "15226:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "15226:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15257:1:1",
																		"nodeType": "YulLiteral",
																		"src": "15257:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15260:4:1",
																		"nodeType": "YulLiteral",
																		"src": "15260:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "15250:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15250:6:1"
																},
																"nativeSrc": "15250:15:1",
																"nodeType": "YulFunctionCall",
																"src": "15250:15:1"
															},
															"nativeSrc": "15250:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "15250:15:1"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "15091:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "15091:180:1"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes1(value) -> cleaned {\n        cleaned := and(value, 0xff00000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes1_to_t_bytes1_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes1(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_bytes1_to_t_bytes1_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value5,  add(headStart, 160))\n\n        mstore(add(headStart, 192), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value6,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"3136": [
									{
										"length": 32,
										"start": 2760
									}
								],
								"3138": [
									{
										"length": 32,
										"start": 2719
									}
								],
								"3140": [
									{
										"length": 32,
										"start": 2633
									}
								],
								"3142": [
									{
										"length": 32,
										"start": 4647
									}
								],
								"3144": [
									{
										"length": 32,
										"start": 4680
									}
								],
								"3147": [
									{
										"length": 32,
										"start": 3348
									}
								],
								"3150": [
									{
										"length": 32,
										"start": 3407
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610109575f3560e01c8063715018a6116100a057806395d89b411161006f57806395d89b41146102ad578063a9059cbb146102cb578063d505accf146102fb578063dd62ed3e14610317578063f2fde38b1461034757610109565b8063715018a6146102315780637ecebe001461023b57806384b0196e1461026b5780638da5cb5b1461028f57610109565b8063313ce567116100dc578063313ce567146101a95780633644e515146101c757806340c10f19146101e557806370a082311461020157610109565b806306fdde031461010d578063095ea7b31461012b57806318160ddd1461015b57806323b872dd14610179575b5f80fd5b610115610363565b60405161012291906116fe565b60405180910390f35b610145600480360381019061014091906117af565b6103f3565b6040516101529190611807565b60405180910390f35b610163610415565b604051610170919061182f565b60405180910390f35b610193600480360381019061018e9190611848565b61041e565b6040516101a09190611807565b60405180910390f35b6101b161044c565b6040516101be91906118b3565b60405180910390f35b6101cf610454565b6040516101dc91906118e4565b60405180910390f35b6101ff60048036038101906101fa91906117af565b610462565b005b61021b600480360381019061021691906118fd565b610478565b604051610228919061182f565b60405180910390f35b6102396104bd565b005b610255600480360381019061025091906118fd565b6104d0565b604051610262919061182f565b60405180910390f35b6102736104e1565b6040516102869796959493929190611a28565b60405180910390f35b610297610586565b6040516102a49190611aaa565b60405180910390f35b6102b56105ae565b6040516102c291906116fe565b60405180910390f35b6102e560048036038101906102e091906117af565b61063e565b6040516102f29190611807565b60405180910390f35b61031560048036038101906103109190611b17565b610660565b005b610331600480360381019061032c9190611bb4565b6107a5565b60405161033e919061182f565b60405180910390f35b610361600480360381019061035c91906118fd565b610827565b005b60606003805461037290611c1f565b80601f016020809104026020016040519081016040528092919081815260200182805461039e90611c1f565b80156103e95780601f106103c0576101008083540402835291602001916103e9565b820191905f5260205f20905b8154815290600101906020018083116103cc57829003601f168201915b5050505050905090565b5f806103fd6108ab565b905061040a8185856108b2565b600191505092915050565b5f600254905090565b5f806104286108ab565b90506104358582856108c4565b610440858585610956565b60019150509392505050565b5f6012905090565b5f61045d610a46565b905090565b61046a610afc565b6104748282610b83565b5050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6104c5610afc565b6104ce5f610c02565b565b5f6104da82610cc5565b9050919050565b5f6060805f805f60606104f2610d0b565b6104fa610d46565b46305f801b5f67ffffffffffffffff81111561051957610518611c4f565b5b6040519080825280602002602001820160405280156105475781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546105bd90611c1f565b80601f01602080910402602001604051908101604052809291908181526020018280546105e990611c1f565b80156106345780601f1061060b57610100808354040283529160200191610634565b820191905f5260205f20905b81548152906001019060200180831161061757829003601f168201915b5050505050905090565b5f806106486108ab565b9050610655818585610956565b600191505092915050565b834211156106a557836040517f6279130200000000000000000000000000000000000000000000000000000000815260040161069c919061182f565b60405180910390fd5b5f7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886106d38c610d81565b896040516020016106e996959493929190611c7c565b6040516020818303038152906040528051906020012090505f61070b82610dd4565b90505f61071a82878787610ded565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461078e57808a6040517f4b800e46000000000000000000000000000000000000000000000000000000008152600401610785929190611cdb565b60405180910390fd5b6107998a8a8a6108b2565b50505050505050505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b61082f610afc565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361089f575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016108969190611aaa565b60405180910390fd5b6108a881610c02565b50565b5f33905090565b6108bf8383836001610e1b565b505050565b5f6108cf84846107a5565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146109505781811015610941578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161093893929190611d02565b60405180910390fd5b61094f84848484035f610e1b565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109c6575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016109bd9190611aaa565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a36575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610a2d9190611aaa565b60405180910390fd5b610a41838383610fea565b505050565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148015610ac157507f000000000000000000000000000000000000000000000000000000000000000046145b15610aee577f00000000000000000000000000000000000000000000000000000000000000009050610af9565b610af6611203565b90505b90565b610b046108ab565b73ffffffffffffffffffffffffffffffffffffffff16610b22610586565b73ffffffffffffffffffffffffffffffffffffffff1614610b8157610b456108ab565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610b789190611aaa565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bf3575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610bea9190611aaa565b60405180910390fd5b610bfe5f8383610fea565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f60085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6060610d4160067f000000000000000000000000000000000000000000000000000000000000000061129890919063ffffffff16565b905090565b6060610d7c60077f000000000000000000000000000000000000000000000000000000000000000061129890919063ffffffff16565b905090565b5f60085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f815480929190600101919050559050919050565b5f610de6610de0610a46565b83611345565b9050919050565b5f805f80610dfd88888888611385565b925092509250610e0d828261146c565b829350505050949350505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610e8b575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610e829190611aaa565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610efb575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610ef29190611aaa565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610fe4578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610fdb919061182f565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361103a578060025f82825461102e9190611d64565b92505081905550611108565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156110c3578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016110ba93929190611d02565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361114f578060025f8282540392505081905550611199565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516111f6919061182f565b60405180910390a3505050565b5f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000463060405160200161127d959493929190611d97565b60405160208183030381529060405280519060200120905090565b606060ff5f1b83146112b4576112ad836115ce565b905061133f565b8180546112c090611c1f565b80601f01602080910402602001604051908101604052809291908181526020018280546112ec90611c1f565b80156113375780601f1061130e57610100808354040283529160200191611337565b820191905f5260205f20905b81548152906001019060200180831161131a57829003601f168201915b505050505090505b92915050565b5f6040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b5f805f7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0845f1c11156113c1575f600385925092509250611462565b5f6001888888886040515f81526020016040526040516113e49493929190611de8565b6020604051602081039080840390855afa158015611404573d5f803e3d5ffd5b5050506020604051035190505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611455575f60015f801b93509350935050611462565b805f805f1b935093509350505b9450945094915050565b5f600381111561147f5761147e611e2b565b5b82600381111561149257611491611e2b565b5b03156115ca57600160038111156114ac576114ab611e2b565b5b8260038111156114bf576114be611e2b565b5b036114f6576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600381111561150a57611509611e2b565b5b82600381111561151d5761151c611e2b565b5b0361156157805f1c6040517ffce698f7000000000000000000000000000000000000000000000000000000008152600401611558919061182f565b60405180910390fd5b60038081111561157457611573611e2b565b5b82600381111561158757611586611e2b565b5b036115c957806040517fd78bce0c0000000000000000000000000000000000000000000000000000000081526004016115c091906118e4565b60405180910390fd5b5b5050565b60605f6115da83611640565b90505f602067ffffffffffffffff8111156115f8576115f7611c4f565b5b6040519080825280601f01601f19166020018201604052801561162a5781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b5f8060ff835f1c169050601f811115611685576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6116d08261168e565b6116da8185611698565b93506116ea8185602086016116a8565b6116f3816116b6565b840191505092915050565b5f6020820190508181035f83015261171681846116c6565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61174b82611722565b9050919050565b61175b81611741565b8114611765575f80fd5b50565b5f8135905061177681611752565b92915050565b5f819050919050565b61178e8161177c565b8114611798575f80fd5b50565b5f813590506117a981611785565b92915050565b5f80604083850312156117c5576117c461171e565b5b5f6117d285828601611768565b92505060206117e38582860161179b565b9150509250929050565b5f8115159050919050565b611801816117ed565b82525050565b5f60208201905061181a5f8301846117f8565b92915050565b6118298161177c565b82525050565b5f6020820190506118425f830184611820565b92915050565b5f805f6060848603121561185f5761185e61171e565b5b5f61186c86828701611768565b935050602061187d86828701611768565b925050604061188e8682870161179b565b9150509250925092565b5f60ff82169050919050565b6118ad81611898565b82525050565b5f6020820190506118c65f8301846118a4565b92915050565b5f819050919050565b6118de816118cc565b82525050565b5f6020820190506118f75f8301846118d5565b92915050565b5f602082840312156119125761191161171e565b5b5f61191f84828501611768565b91505092915050565b5f7fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b61195c81611928565b82525050565b61196b81611741565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b6119a38161177c565b82525050565b5f6119b4838361199a565b60208301905092915050565b5f602082019050919050565b5f6119d682611971565b6119e0818561197b565b93506119eb8361198b565b805f5b83811015611a1b578151611a0288826119a9565b9750611a0d836119c0565b9250506001810190506119ee565b5085935050505092915050565b5f60e082019050611a3b5f83018a611953565b8181036020830152611a4d81896116c6565b90508181036040830152611a6181886116c6565b9050611a706060830187611820565b611a7d6080830186611962565b611a8a60a08301856118d5565b81810360c0830152611a9c81846119cc565b905098975050505050505050565b5f602082019050611abd5f830184611962565b92915050565b611acc81611898565b8114611ad6575f80fd5b50565b5f81359050611ae781611ac3565b92915050565b611af6816118cc565b8114611b00575f80fd5b50565b5f81359050611b1181611aed565b92915050565b5f805f805f805f60e0888a031215611b3257611b3161171e565b5b5f611b3f8a828b01611768565b9750506020611b508a828b01611768565b9650506040611b618a828b0161179b565b9550506060611b728a828b0161179b565b9450506080611b838a828b01611ad9565b93505060a0611b948a828b01611b03565b92505060c0611ba58a828b01611b03565b91505092959891949750929550565b5f8060408385031215611bca57611bc961171e565b5b5f611bd785828601611768565b9250506020611be885828601611768565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611c3657607f821691505b602082108103611c4957611c48611bf2565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f60c082019050611c8f5f8301896118d5565b611c9c6020830188611962565b611ca96040830187611962565b611cb66060830186611820565b611cc36080830185611820565b611cd060a0830184611820565b979650505050505050565b5f604082019050611cee5f830185611962565b611cfb6020830184611962565b9392505050565b5f606082019050611d155f830186611962565b611d226020830185611820565b611d2f6040830184611820565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611d6e8261177c565b9150611d798361177c565b9250828201905080821115611d9157611d90611d37565b5b92915050565b5f60a082019050611daa5f8301886118d5565b611db760208301876118d5565b611dc460408301866118d5565b611dd16060830185611820565b611dde6080830184611962565b9695505050505050565b5f608082019050611dfb5f8301876118d5565b611e0860208301866118a4565b611e1560408301856118d5565b611e2260608301846118d5565b95945050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffdfea26469706673582212206de2e20912dca0d813af96bcecfbb007a1153c71d7f757426bd99304dea4325764736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x317 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x347 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x28F JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x201 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x179 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x115 PUSH2 0x363 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x16FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x17AF JUMP JUMPDEST PUSH2 0x3F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x1807 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x163 PUSH2 0x415 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x182F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x1848 JUMP JUMPDEST PUSH2 0x41E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x1807 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B1 PUSH2 0x44C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x18B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CF PUSH2 0x454 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0x18E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x17AF JUMP JUMPDEST PUSH2 0x462 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x18FD JUMP JUMPDEST PUSH2 0x478 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x182F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x239 PUSH2 0x4BD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x255 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x18FD JUMP JUMPDEST PUSH2 0x4D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x182F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x273 PUSH2 0x4E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x286 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x297 PUSH2 0x586 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B5 PUSH2 0x5AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x16FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x17AF JUMP JUMPDEST PUSH2 0x63E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0x1807 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x315 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x1B17 JUMP JUMPDEST PUSH2 0x660 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x331 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x1BB4 JUMP JUMPDEST PUSH2 0x7A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33E SWAP2 SWAP1 PUSH2 0x182F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x361 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35C SWAP2 SWAP1 PUSH2 0x18FD JUMP JUMPDEST PUSH2 0x827 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x372 SWAP1 PUSH2 0x1C1F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x39E SWAP1 PUSH2 0x1C1F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3E9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3C0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3E9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3CC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3FD PUSH2 0x8AB JUMP JUMPDEST SWAP1 POP PUSH2 0x40A DUP2 DUP6 DUP6 PUSH2 0x8B2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x428 PUSH2 0x8AB JUMP JUMPDEST SWAP1 POP PUSH2 0x435 DUP6 DUP3 DUP6 PUSH2 0x8C4 JUMP JUMPDEST PUSH2 0x440 DUP6 DUP6 DUP6 PUSH2 0x956 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x45D PUSH2 0xA46 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x46A PUSH2 0xAFC JUMP JUMPDEST PUSH2 0x474 DUP3 DUP3 PUSH2 0xB83 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4C5 PUSH2 0xAFC JUMP JUMPDEST PUSH2 0x4CE PUSH0 PUSH2 0xC02 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x4DA DUP3 PUSH2 0xCC5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x60 PUSH2 0x4F2 PUSH2 0xD0B JUMP JUMPDEST PUSH2 0x4FA PUSH2 0xD46 JUMP JUMPDEST CHAINID ADDRESS PUSH0 DUP1 SHL PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x519 JUMPI PUSH2 0x518 PUSH2 0x1C4F JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x547 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x5BD SWAP1 PUSH2 0x1C1F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5E9 SWAP1 PUSH2 0x1C1F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x634 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x60B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x634 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x617 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x648 PUSH2 0x8AB JUMP JUMPDEST SWAP1 POP PUSH2 0x655 DUP2 DUP6 DUP6 PUSH2 0x956 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x6A5 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69C SWAP2 SWAP1 PUSH2 0x182F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x6D3 DUP13 PUSH2 0xD81 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6E9 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C7C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH0 PUSH2 0x70B DUP3 PUSH2 0xDD4 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x71A DUP3 DUP8 DUP8 DUP8 PUSH2 0xDED JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x78E JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x785 SWAP3 SWAP2 SWAP1 PUSH2 0x1CDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x799 DUP11 DUP11 DUP11 PUSH2 0x8B2 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x82F PUSH2 0xAFC JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x89F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x896 SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8A8 DUP2 PUSH2 0xC02 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8BF DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xE1B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8CF DUP5 DUP5 PUSH2 0x7A5 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x950 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x941 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x938 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x94F DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xE1B JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9C6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9BD SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA36 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA2D SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA41 DUP4 DUP4 DUP4 PUSH2 0xFEA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xAC1 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xAEE JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0xAF9 JUMP JUMPDEST PUSH2 0xAF6 PUSH2 0x1203 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB04 PUSH2 0x8AB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB22 PUSH2 0x586 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB81 JUMPI PUSH2 0xB45 PUSH2 0x8AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB78 SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBF3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEA SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBFE PUSH0 DUP4 DUP4 PUSH2 0xFEA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD41 PUSH1 0x6 PUSH32 0x0 PUSH2 0x1298 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD7C PUSH1 0x7 PUSH32 0x0 PUSH2 0x1298 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDE6 PUSH2 0xDE0 PUSH2 0xA46 JUMP JUMPDEST DUP4 PUSH2 0x1345 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH2 0xDFD DUP9 DUP9 DUP9 DUP9 PUSH2 0x1385 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xE0D DUP3 DUP3 PUSH2 0x146C JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE8B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE82 SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEFB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF2 SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xFE4 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xFDB SWAP2 SWAP1 PUSH2 0x182F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x103A JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x102E SWAP2 SWAP1 PUSH2 0x1D64 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1108 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x10C3 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10BA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x114F JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1199 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x11F6 SWAP2 SWAP1 PUSH2 0x182F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x127D SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH0 SHL DUP4 EQ PUSH2 0x12B4 JUMPI PUSH2 0x12AD DUP4 PUSH2 0x15CE JUMP JUMPDEST SWAP1 POP PUSH2 0x133F JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x12C0 SWAP1 PUSH2 0x1C1F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x12EC SWAP1 PUSH2 0x1C1F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1337 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x130E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1337 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x131A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH0 SHR GT ISZERO PUSH2 0x13C1 JUMPI PUSH0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1462 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x13E4 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DE8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1404 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1455 JUMPI PUSH0 PUSH1 0x1 PUSH0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x1462 JUMP JUMPDEST DUP1 PUSH0 DUP1 PUSH0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x147F JUMPI PUSH2 0x147E PUSH2 0x1E2B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1492 JUMPI PUSH2 0x1491 PUSH2 0x1E2B JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x15CA JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x14AC JUMPI PUSH2 0x14AB PUSH2 0x1E2B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x14BF JUMPI PUSH2 0x14BE PUSH2 0x1E2B JUMP JUMPDEST JUMPDEST SUB PUSH2 0x14F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x150A JUMPI PUSH2 0x1509 PUSH2 0x1E2B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x151D JUMPI PUSH2 0x151C PUSH2 0x1E2B JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1561 JUMPI DUP1 PUSH0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1558 SWAP2 SWAP1 PUSH2 0x182F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x1574 JUMPI PUSH2 0x1573 PUSH2 0x1E2B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1587 JUMPI PUSH2 0x1586 PUSH2 0x1E2B JUMP JUMPDEST JUMPDEST SUB PUSH2 0x15C9 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C0 SWAP2 SWAP1 PUSH2 0x18E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x15DA DUP4 PUSH2 0x1640 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15F8 JUMPI PUSH2 0x15F7 PUSH2 0x1C4F JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x162A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xFF DUP4 PUSH0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x1685 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16D0 DUP3 PUSH2 0x168E JUMP JUMPDEST PUSH2 0x16DA DUP2 DUP6 PUSH2 0x1698 JUMP JUMPDEST SWAP4 POP PUSH2 0x16EA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x16A8 JUMP JUMPDEST PUSH2 0x16F3 DUP2 PUSH2 0x16B6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1716 DUP2 DUP5 PUSH2 0x16C6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x174B DUP3 PUSH2 0x1722 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x175B DUP2 PUSH2 0x1741 JUMP JUMPDEST DUP2 EQ PUSH2 0x1765 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1776 DUP2 PUSH2 0x1752 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x178E DUP2 PUSH2 0x177C JUMP JUMPDEST DUP2 EQ PUSH2 0x1798 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17A9 DUP2 PUSH2 0x1785 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17C5 JUMPI PUSH2 0x17C4 PUSH2 0x171E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17D2 DUP6 DUP3 DUP7 ADD PUSH2 0x1768 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17E3 DUP6 DUP3 DUP7 ADD PUSH2 0x179B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1801 DUP2 PUSH2 0x17ED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x181A PUSH0 DUP4 ADD DUP5 PUSH2 0x17F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1829 DUP2 PUSH2 0x177C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1842 PUSH0 DUP4 ADD DUP5 PUSH2 0x1820 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x185F JUMPI PUSH2 0x185E PUSH2 0x171E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x186C DUP7 DUP3 DUP8 ADD PUSH2 0x1768 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x187D DUP7 DUP3 DUP8 ADD PUSH2 0x1768 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x188E DUP7 DUP3 DUP8 ADD PUSH2 0x179B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18AD DUP2 PUSH2 0x1898 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18C6 PUSH0 DUP4 ADD DUP5 PUSH2 0x18A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18DE DUP2 PUSH2 0x18CC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18F7 PUSH0 DUP4 ADD DUP5 PUSH2 0x18D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1912 JUMPI PUSH2 0x1911 PUSH2 0x171E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x191F DUP5 DUP3 DUP6 ADD PUSH2 0x1768 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x195C DUP2 PUSH2 0x1928 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x196B DUP2 PUSH2 0x1741 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19A3 DUP2 PUSH2 0x177C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x19B4 DUP4 DUP4 PUSH2 0x199A JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19D6 DUP3 PUSH2 0x1971 JUMP JUMPDEST PUSH2 0x19E0 DUP2 DUP6 PUSH2 0x197B JUMP JUMPDEST SWAP4 POP PUSH2 0x19EB DUP4 PUSH2 0x198B JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A1B JUMPI DUP2 MLOAD PUSH2 0x1A02 DUP9 DUP3 PUSH2 0x19A9 JUMP JUMPDEST SWAP8 POP PUSH2 0x1A0D DUP4 PUSH2 0x19C0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x19EE JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x1A3B PUSH0 DUP4 ADD DUP11 PUSH2 0x1953 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1A4D DUP2 DUP10 PUSH2 0x16C6 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1A61 DUP2 DUP9 PUSH2 0x16C6 JUMP JUMPDEST SWAP1 POP PUSH2 0x1A70 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x1820 JUMP JUMPDEST PUSH2 0x1A7D PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x1962 JUMP JUMPDEST PUSH2 0x1A8A PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x18D5 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x1A9C DUP2 DUP5 PUSH2 0x19CC JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1ABD PUSH0 DUP4 ADD DUP5 PUSH2 0x1962 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1ACC DUP2 PUSH2 0x1898 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AD6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AE7 DUP2 PUSH2 0x1AC3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AF6 DUP2 PUSH2 0x18CC JUMP JUMPDEST DUP2 EQ PUSH2 0x1B00 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B11 DUP2 PUSH2 0x1AED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1B32 JUMPI PUSH2 0x1B31 PUSH2 0x171E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B3F DUP11 DUP3 DUP12 ADD PUSH2 0x1768 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1B50 DUP11 DUP3 DUP12 ADD PUSH2 0x1768 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x1B61 DUP11 DUP3 DUP12 ADD PUSH2 0x179B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x1B72 DUP11 DUP3 DUP12 ADD PUSH2 0x179B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x1B83 DUP11 DUP3 DUP12 ADD PUSH2 0x1AD9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x1B94 DUP11 DUP3 DUP12 ADD PUSH2 0x1B03 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x1BA5 DUP11 DUP3 DUP12 ADD PUSH2 0x1B03 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BCA JUMPI PUSH2 0x1BC9 PUSH2 0x171E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BD7 DUP6 DUP3 DUP7 ADD PUSH2 0x1768 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1BE8 DUP6 DUP3 DUP7 ADD PUSH2 0x1768 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1C36 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1C49 JUMPI PUSH2 0x1C48 PUSH2 0x1BF2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x1C8F PUSH0 DUP4 ADD DUP10 PUSH2 0x18D5 JUMP JUMPDEST PUSH2 0x1C9C PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x1962 JUMP JUMPDEST PUSH2 0x1CA9 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1962 JUMP JUMPDEST PUSH2 0x1CB6 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1820 JUMP JUMPDEST PUSH2 0x1CC3 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1820 JUMP JUMPDEST PUSH2 0x1CD0 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x1820 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1CEE PUSH0 DUP4 ADD DUP6 PUSH2 0x1962 JUMP JUMPDEST PUSH2 0x1CFB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1962 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1D15 PUSH0 DUP4 ADD DUP7 PUSH2 0x1962 JUMP JUMPDEST PUSH2 0x1D22 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1820 JUMP JUMPDEST PUSH2 0x1D2F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1820 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1D6E DUP3 PUSH2 0x177C JUMP JUMPDEST SWAP2 POP PUSH2 0x1D79 DUP4 PUSH2 0x177C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D91 JUMPI PUSH2 0x1D90 PUSH2 0x1D37 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1DAA PUSH0 DUP4 ADD DUP9 PUSH2 0x18D5 JUMP JUMPDEST PUSH2 0x1DB7 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x18D5 JUMP JUMPDEST PUSH2 0x1DC4 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x18D5 JUMP JUMPDEST PUSH2 0x1DD1 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1820 JUMP JUMPDEST PUSH2 0x1DDE PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1962 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1DFB PUSH0 DUP4 ADD DUP8 PUSH2 0x18D5 JUMP JUMPDEST PUSH2 0x1E08 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x18A4 JUMP JUMPDEST PUSH2 0x1E15 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x18D5 JUMP JUMPDEST PUSH2 0x1E22 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x18D5 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0xE2E20912DCA0D813AF96BCECFBB0 SMOD LOG1 ISZERO EXTCODECOPY PUSH18 0xD7F757426BD99304DEA4325764736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "79675:364:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12966:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15185:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14036:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15931:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13894:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;79395:112;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;79944:93;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;14191:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;24305:101;;;:::i;:::-;;79145:143;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;73973:557;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;23650:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13168:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14502:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;78419:672;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;14738:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;24555:215;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;12966:89;13011:13;13043:5;13036:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12966:89;:::o;15185:186::-;15258:4;15274:13;15290:12;:10;:12::i;:::-;15274:28;;15312:31;15321:5;15328:7;15337:5;15312:8;:31::i;:::-;15360:4;15353:11;;;15185:186;;;;:::o;14036:97::-;14088:7;14114:12;;14107:19;;14036:97;:::o;15931:244::-;16018:4;16034:15;16052:12;:10;:12::i;:::-;16034:30;;16074:37;16090:4;16096:7;16105:5;16074:15;:37::i;:::-;16121:26;16131:4;16137:2;16141:5;16121:9;:26::i;:::-;16164:4;16157:11;;;15931:244;;;;;:::o;13894:82::-;13943:5;13967:2;13960:9;;13894:82;:::o;79395:112::-;79454:7;79480:20;:18;:20::i;:::-;79473:27;;79395:112;:::o;79944:93::-;23543:13;:11;:13::i;:::-;80013:17:::1;80019:2;80023:6;80013:5;:17::i;:::-;79944:93:::0;;:::o;14191:116::-;14256:7;14282:9;:18;14292:7;14282:18;;;;;;;;;;;;;;;;14275:25;;14191:116;;;:::o;24305:101::-;23543:13;:11;:13::i;:::-;24369:30:::1;24396:1;24369:18;:30::i;:::-;24305:101::o:0;79145:143::-;79236:7;79262:19;79275:5;79262:12;:19::i;:::-;79255:26;;79145:143;;;:::o;73973:557::-;74071:13;74098:18;74130:21;74165:15;74194:25;74233:12;74259:27;74362:13;:11;:13::i;:::-;74389:16;:14;:16::i;:::-;74419:13;74454:4;74481:1;74473:10;;74511:1;74497:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;74311:212;;;;;;;;;;;;;;;;;;;;;73973:557;;;;;;;:::o;23650:85::-;23696:7;23722:6;;;;;;;;;;;23715:13;;23650:85;:::o;13168:93::-;13215:13;13247:7;13240:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13168:93;:::o;14502:178::-;14571:4;14587:13;14603:12;:10;:12::i;:::-;14587:28;;14625:27;14635:5;14642:2;14646:5;14625:9;:27::i;:::-;14669:4;14662:11;;;14502:178;;;;:::o;78419:672::-;78640:8;78622:15;:26;78618:97;;;78695:8;78671:33;;;;;;;;;;;:::i;:::-;;;;;;;;78618:97;78725:18;77761:95;78784:5;78791:7;78800:5;78807:16;78817:5;78807:9;:16::i;:::-;78825:8;78756:78;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;78746:89;;;;;;78725:110;;78846:12;78861:28;78878:10;78861:16;:28::i;:::-;78846:43;;78900:14;78917:28;78931:4;78937:1;78940;78943;78917:13;:28::i;:::-;78900:45;;78969:5;78959:15;;:6;:15;;;78955:88;;79018:6;79026:5;78997:35;;;;;;;;;;;;:::i;:::-;;;;;;;;78955:88;79053:31;79062:5;79069:7;79078:5;79053:8;:31::i;:::-;78608:483;;;78419:672;;;;;;;:::o;14738:140::-;14818:7;14844:11;:18;14856:5;14844:18;;;;;;;;;;;;;;;:27;14863:7;14844:27;;;;;;;;;;;;;;;;14837:34;;14738:140;;;;:::o;24555:215::-;23543:13;:11;:13::i;:::-;24659:1:::1;24639:22;;:8;:22;;::::0;24635:91:::1;;24712:1;24684:31;;;;;;;;;;;:::i;:::-;;;;;;;;24635:91;24735:28;24754:8;24735:18;:28::i;:::-;24555:215:::0;:::o;4206:96::-;4259:7;4285:10;4278:17;;4206:96;:::o;19881:128::-;19965:37;19974:5;19981:7;19990:5;19997:4;19965:8;:37::i;:::-;19881:128;;;:::o;21555:477::-;21654:24;21681:25;21691:5;21698:7;21681:9;:25::i;:::-;21654:52;;21740:17;21720:16;:37;21716:310;;21796:5;21777:16;:24;21773:130;;;21855:7;21864:16;21882:5;21828:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;21773:130;21944:57;21953:5;21960:7;21988:5;21969:16;:24;21995:5;21944:8;:57::i;:::-;21716:310;21644:388;21555:477;;;:::o;16548:300::-;16647:1;16631:18;;:4;:18;;;16627:86;;16699:1;16672:30;;;;;;;;;;;:::i;:::-;;;;;;;;16627:86;16740:1;16726:16;;:2;:16;;;16722:86;;16794:1;16765:32;;;;;;;;;;;:::i;:::-;;;;;;;;16722:86;16817:24;16825:4;16831:2;16835:5;16817:7;:24::i;:::-;16548:300;;;:::o;72674:262::-;72727:7;72767:11;72750:28;;72758:4;72750:28;;;:63;;;;;72799:14;72782:13;:31;72750:63;72746:184;;;72836:22;72829:29;;;;72746:184;72896:23;:21;:23::i;:::-;72889:30;;72674:262;;:::o;23808:162::-;23878:12;:10;:12::i;:::-;23867:23;;:7;:5;:7::i;:::-;:23;;;23863:101;;23940:12;:10;:12::i;:::-;23913:40;;;;;;;;;;;:::i;:::-;;;;;;;;23863:101;23808:162::o;18613:208::-;18702:1;18683:21;;:7;:21;;;18679:91;;18756:1;18727:32;;;;;;;;;;;:::i;:::-;;;;;;;;18679:91;18779:35;18795:1;18799:7;18808:5;18779:7;:35::i;:::-;18613:208;;:::o;24924:187::-;24997:16;25016:6;;;;;;;;;;;24997:25;;25041:8;25032:6;;:17;;;;;;;;;;;;;;;;;;25095:8;25064:40;;25085:8;25064:40;;;;;;;;;;;;24987:124;24924:187;:::o;75999:107::-;76059:7;76085;:14;76093:5;76085:14;;;;;;;;;;;;;;;;76078:21;;75999:107;;;:::o;74850:126::-;74896:13;74928:41;74955:13;74928:5;:26;;:41;;;;:::i;:::-;74921:48;;74850:126;:::o;75302:135::-;75351:13;75383:47;75413:16;75383:8;:29;;:47;;;;:::i;:::-;75376:54;;75302:135;:::o;76220:395::-;76280:7;76582;:14;76590:5;76582:14;;;;;;;;;;;;;;;;:16;;;;;;;;;;;;76575:23;;76220:395;;;:::o;73746:176::-;73823:7;73849:66;73882:20;:18;:20::i;:::-;73904:10;73849:32;:66::i;:::-;73842:73;;73746:176;;;:::o;35797:260::-;35882:7;35902:17;35921:18;35941:16;35961:25;35972:4;35978:1;35981;35984;35961:10;:25::i;:::-;35901:85;;;;;;35996:28;36008:5;36015:8;35996:11;:28::i;:::-;36041:9;36034:16;;;;;35797:260;;;;;;:::o;20841:432::-;20970:1;20953:19;;:5;:19;;;20949:89;;21024:1;20995:32;;;;;;;;;;;:::i;:::-;;;;;;;;20949:89;21070:1;21051:21;;:7;:21;;;21047:90;;21123:1;21095:31;;;;;;;;;;;:::i;:::-;;;;;;;;21047:90;21176:5;21146:11;:18;21158:5;21146:18;;;;;;;;;;;;;;;:27;21165:7;21146:27;;;;;;;;;;;;;;;:35;;;;21195:9;21191:76;;;21241:7;21225:31;;21234:5;21225:31;;;21250:5;21225:31;;;;;;:::i;:::-;;;;;;;;21191:76;20841:432;;;;:::o;17163:1107::-;17268:1;17252:18;;:4;:18;;;17248:540;;17404:5;17388:12;;:21;;;;;;;:::i;:::-;;;;;;;;17248:540;;;17440:19;17462:9;:15;17472:4;17462:15;;;;;;;;;;;;;;;;17440:37;;17509:5;17495:11;:19;17491:115;;;17566:4;17572:11;17585:5;17541:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;17491:115;17758:5;17744:11;:19;17726:9;:15;17736:4;17726:15;;;;;;;;;;;;;;;:37;;;;17426:362;17248:540;17816:1;17802:16;;:2;:16;;;17798:425;;17981:5;17965:12;;:21;;;;;;;;;;;17798:425;;;18193:5;18176:9;:13;18186:2;18176:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;17798:425;18253:2;18238:25;;18247:4;18238:25;;;18257:5;18238:25;;;;;;:::i;:::-;;;;;;;;17163:1107;;;:::o;72942:179::-;72997:7;70908:95;73055:11;73068:14;73084:13;73107:4;73033:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;73023:91;;;;;;73016:98;;72942:179;:::o;67278:267::-;67372:13;65283:66;67430:17;;67420:5;67401:46;67397:142;;67470:15;67479:5;67470:8;:15::i;:::-;67463:22;;;;67397:142;67523:5;67516:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;67278:267;;;;;:::o;59552:401::-;59645:14;59754:4;59748:11;59784:10;59779:3;59772:23;59831:15;59824:4;59819:3;59815:14;59808:39;59883:10;59876:4;59871:3;59867:14;59860:34;59932:4;59927:3;59917:20;59907:30;;59723:224;59552:401;;;;:::o;34134:1530::-;34260:7;34269:12;34283:7;35193:66;35188:1;35180:10;;:79;35176:164;;;35291:1;35295:30;35327:1;35275:54;;;;;;;;35176:164;35434:14;35451:24;35461:4;35467:1;35470;35473;35451:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35434:41;;35507:1;35489:20;;:6;:20;;;35485:113;;35541:1;35545:29;35584:1;35576:10;;35525:62;;;;;;;;;35485:113;35616:6;35624:20;35654:1;35646:10;;35608:49;;;;;;;34134:1530;;;;;;;;;:::o;36190:532::-;36285:20;36276:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;36272:444;36321:7;36272:444;36381:29;36372:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;36368:348;;36433:23;;;;;;;;;;;;;;36368:348;36486:35;36477:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;36473:243;;36580:8;36572:17;;36544:46;;;;;;;;;;;:::i;:::-;;;;;;;;36473:243;36620:30;36611:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;36607:109;;36696:8;36673:32;;;;;;;;;;;:::i;:::-;;;;;;;;36607:109;36190:532;;;:::o;65971:405::-;66030:13;66055:11;66069:16;66080:4;66069:10;:16::i;:::-;66055:30;;66173:17;66204:2;66193:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;66173:34;;66295:3;66290;66283:16;66335:4;66328;66323:3;66319:14;66312:28;66366:3;66359:10;;;;65971:405;;;:::o;66448:245::-;66509:7;66528:14;66581:4;66572;66545:33;;:40;66528:57;;66608:2;66599:6;:11;66595:69;;;66633:20;;;;;;;;;;;;;;66595:69;66680:6;66673:13;;;66448:245;;;:::o;7:99:1:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:77::-;4783:7;4812:5;4801:16;;4746:77;;;:::o;4829:118::-;4916:24;4934:5;4916:24;:::i;:::-;4911:3;4904:37;4829:118;;:::o;4953:222::-;5046:4;5084:2;5073:9;5069:18;5061:26;;5097:71;5165:1;5154:9;5150:17;5141:6;5097:71;:::i;:::-;4953:222;;;;:::o;5181:329::-;5240:6;5289:2;5277:9;5268:7;5264:23;5260:32;5257:119;;;5295:79;;:::i;:::-;5257:119;5415:1;5440:53;5485:7;5476:6;5465:9;5461:22;5440:53;:::i;:::-;5430:63;;5386:117;5181:329;;;;:::o;5516:149::-;5552:7;5592:66;5585:5;5581:78;5570:89;;5516:149;;;:::o;5671:115::-;5756:23;5773:5;5756:23;:::i;:::-;5751:3;5744:36;5671:115;;:::o;5792:118::-;5879:24;5897:5;5879:24;:::i;:::-;5874:3;5867:37;5792:118;;:::o;5916:114::-;5983:6;6017:5;6011:12;6001:22;;5916:114;;;:::o;6036:184::-;6135:11;6169:6;6164:3;6157:19;6209:4;6204:3;6200:14;6185:29;;6036:184;;;;:::o;6226:132::-;6293:4;6316:3;6308:11;;6346:4;6341:3;6337:14;6329:22;;6226:132;;;:::o;6364:108::-;6441:24;6459:5;6441:24;:::i;:::-;6436:3;6429:37;6364:108;;:::o;6478:179::-;6547:10;6568:46;6610:3;6602:6;6568:46;:::i;:::-;6646:4;6641:3;6637:14;6623:28;;6478:179;;;;:::o;6663:113::-;6733:4;6765;6760:3;6756:14;6748:22;;6663:113;;;:::o;6812:732::-;6931:3;6960:54;7008:5;6960:54;:::i;:::-;7030:86;7109:6;7104:3;7030:86;:::i;:::-;7023:93;;7140:56;7190:5;7140:56;:::i;:::-;7219:7;7250:1;7235:284;7260:6;7257:1;7254:13;7235:284;;;7336:6;7330:13;7363:63;7422:3;7407:13;7363:63;:::i;:::-;7356:70;;7449:60;7502:6;7449:60;:::i;:::-;7439:70;;7295:224;7282:1;7279;7275:9;7270:14;;7235:284;;;7239:14;7535:3;7528:10;;6936:608;;;6812:732;;;;:::o;7550:1215::-;7899:4;7937:3;7926:9;7922:19;7914:27;;7951:69;8017:1;8006:9;8002:17;7993:6;7951:69;:::i;:::-;8067:9;8061:4;8057:20;8052:2;8041:9;8037:18;8030:48;8095:78;8168:4;8159:6;8095:78;:::i;:::-;8087:86;;8220:9;8214:4;8210:20;8205:2;8194:9;8190:18;8183:48;8248:78;8321:4;8312:6;8248:78;:::i;:::-;8240:86;;8336:72;8404:2;8393:9;8389:18;8380:6;8336:72;:::i;:::-;8418:73;8486:3;8475:9;8471:19;8462:6;8418:73;:::i;:::-;8501;8569:3;8558:9;8554:19;8545:6;8501:73;:::i;:::-;8622:9;8616:4;8612:20;8606:3;8595:9;8591:19;8584:49;8650:108;8753:4;8744:6;8650:108;:::i;:::-;8642:116;;7550:1215;;;;;;;;;;:::o;8771:222::-;8864:4;8902:2;8891:9;8887:18;8879:26;;8915:71;8983:1;8972:9;8968:17;8959:6;8915:71;:::i;:::-;8771:222;;;;:::o;8999:118::-;9070:22;9086:5;9070:22;:::i;:::-;9063:5;9060:33;9050:61;;9107:1;9104;9097:12;9050:61;8999:118;:::o;9123:135::-;9167:5;9205:6;9192:20;9183:29;;9221:31;9246:5;9221:31;:::i;:::-;9123:135;;;;:::o;9264:122::-;9337:24;9355:5;9337:24;:::i;:::-;9330:5;9327:35;9317:63;;9376:1;9373;9366:12;9317:63;9264:122;:::o;9392:139::-;9438:5;9476:6;9463:20;9454:29;;9492:33;9519:5;9492:33;:::i;:::-;9392:139;;;;:::o;9537:1199::-;9648:6;9656;9664;9672;9680;9688;9696;9745:3;9733:9;9724:7;9720:23;9716:33;9713:120;;;9752:79;;:::i;:::-;9713:120;9872:1;9897:53;9942:7;9933:6;9922:9;9918:22;9897:53;:::i;:::-;9887:63;;9843:117;9999:2;10025:53;10070:7;10061:6;10050:9;10046:22;10025:53;:::i;:::-;10015:63;;9970:118;10127:2;10153:53;10198:7;10189:6;10178:9;10174:22;10153:53;:::i;:::-;10143:63;;10098:118;10255:2;10281:53;10326:7;10317:6;10306:9;10302:22;10281:53;:::i;:::-;10271:63;;10226:118;10383:3;10410:51;10453:7;10444:6;10433:9;10429:22;10410:51;:::i;:::-;10400:61;;10354:117;10510:3;10537:53;10582:7;10573:6;10562:9;10558:22;10537:53;:::i;:::-;10527:63;;10481:119;10639:3;10666:53;10711:7;10702:6;10691:9;10687:22;10666:53;:::i;:::-;10656:63;;10610:119;9537:1199;;;;;;;;;;:::o;10742:474::-;10810:6;10818;10867:2;10855:9;10846:7;10842:23;10838:32;10835:119;;;10873:79;;:::i;:::-;10835:119;10993:1;11018:53;11063:7;11054:6;11043:9;11039:22;11018:53;:::i;:::-;11008:63;;10964:117;11120:2;11146:53;11191:7;11182:6;11171:9;11167:22;11146:53;:::i;:::-;11136:63;;11091:118;10742:474;;;;;:::o;11222:180::-;11270:77;11267:1;11260:88;11367:4;11364:1;11357:15;11391:4;11388:1;11381:15;11408:320;11452:6;11489:1;11483:4;11479:12;11469:22;;11536:1;11530:4;11526:12;11557:18;11547:81;;11613:4;11605:6;11601:17;11591:27;;11547:81;11675:2;11667:6;11664:14;11644:18;11641:38;11638:84;;11694:18;;:::i;:::-;11638:84;11459:269;11408:320;;;:::o;11734:180::-;11782:77;11779:1;11772:88;11879:4;11876:1;11869:15;11903:4;11900:1;11893:15;11920:775;12153:4;12191:3;12180:9;12176:19;12168:27;;12205:71;12273:1;12262:9;12258:17;12249:6;12205:71;:::i;:::-;12286:72;12354:2;12343:9;12339:18;12330:6;12286:72;:::i;:::-;12368;12436:2;12425:9;12421:18;12412:6;12368:72;:::i;:::-;12450;12518:2;12507:9;12503:18;12494:6;12450:72;:::i;:::-;12532:73;12600:3;12589:9;12585:19;12576:6;12532:73;:::i;:::-;12615;12683:3;12672:9;12668:19;12659:6;12615:73;:::i;:::-;11920:775;;;;;;;;;:::o;12701:332::-;12822:4;12860:2;12849:9;12845:18;12837:26;;12873:71;12941:1;12930:9;12926:17;12917:6;12873:71;:::i;:::-;12954:72;13022:2;13011:9;13007:18;12998:6;12954:72;:::i;:::-;12701:332;;;;;:::o;13039:442::-;13188:4;13226:2;13215:9;13211:18;13203:26;;13239:71;13307:1;13296:9;13292:17;13283:6;13239:71;:::i;:::-;13320:72;13388:2;13377:9;13373:18;13364:6;13320:72;:::i;:::-;13402;13470:2;13459:9;13455:18;13446:6;13402:72;:::i;:::-;13039:442;;;;;;:::o;13487:180::-;13535:77;13532:1;13525:88;13632:4;13629:1;13622:15;13656:4;13653:1;13646:15;13673:191;13713:3;13732:20;13750:1;13732:20;:::i;:::-;13727:25;;13766:20;13784:1;13766:20;:::i;:::-;13761:25;;13809:1;13806;13802:9;13795:16;;13830:3;13827:1;13824:10;13821:36;;;13837:18;;:::i;:::-;13821:36;13673:191;;;;:::o;13870:664::-;14075:4;14113:3;14102:9;14098:19;14090:27;;14127:71;14195:1;14184:9;14180:17;14171:6;14127:71;:::i;:::-;14208:72;14276:2;14265:9;14261:18;14252:6;14208:72;:::i;:::-;14290;14358:2;14347:9;14343:18;14334:6;14290:72;:::i;:::-;14372;14440:2;14429:9;14425:18;14416:6;14372:72;:::i;:::-;14454:73;14522:3;14511:9;14507:19;14498:6;14454:73;:::i;:::-;13870:664;;;;;;;;:::o;14540:545::-;14713:4;14751:3;14740:9;14736:19;14728:27;;14765:71;14833:1;14822:9;14818:17;14809:6;14765:71;:::i;:::-;14846:68;14910:2;14899:9;14895:18;14886:6;14846:68;:::i;:::-;14924:72;14992:2;14981:9;14977:18;14968:6;14924:72;:::i;:::-;15006;15074:2;15063:9;15059:18;15050:6;15006:72;:::i;:::-;14540:545;;;;;;;:::o;15091:180::-;15139:77;15136:1;15129:88;15236:4;15233:1;15226:15;15260:4;15257:1;15250:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1564400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2918",
								"decimals()": "361",
								"eip712Domain()": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"nonces(address)": "2916",
								"owner()": "2604",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 79675,
									"end": 80039,
									"name": "PUSH",
									"source": 0,
									"value": "160"
								},
								{
									"begin": 79675,
									"end": 80039,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 79675,
									"end": 80039,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 79736,
									"end": 79938,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 79736,
									"end": 79938,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 79736,
									"end": 79938,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 79736,
									"end": 79938,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 79736,
									"end": 79938,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 79736,
									"end": 79938,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 79736,
									"end": 79938,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 79736,
									"end": 79938,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 79736,
									"end": 79938,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 79736,
									"end": 79938,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 79736,
									"end": 79938,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 79736,
									"end": 79938,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 79736,
									"end": 79938,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 79736,
									"end": 79938,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 79736,
									"end": 79938,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 79736,
									"end": 79938,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 79736,
									"end": 79938,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 79736,
									"end": 79938,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 79736,
									"end": 79938,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 79736,
									"end": 79938,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 79736,
									"end": 79938,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 79736,
									"end": 79938,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 79736,
									"end": 79938,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 79736,
									"end": 79938,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 79736,
									"end": 79938,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 79736,
									"end": 79938,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 79736,
									"end": 79938,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 79736,
									"end": 79938,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 79736,
									"end": 79938,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 79736,
									"end": 79938,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 79736,
									"end": 79938,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 79736,
									"end": 79938,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 79736,
									"end": 79938,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 79736,
									"end": 79938,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 79736,
									"end": 79938,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 78313,
									"end": 78365,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 78313,
									"end": 78365,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 78313,
									"end": 78365,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 78313,
									"end": 78365,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 78313,
									"end": 78365,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 78313,
									"end": 78365,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 78313,
									"end": 78365,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 78313,
									"end": 78365,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 78313,
									"end": 78365,
									"name": "PUSH",
									"source": 0,
									"value": "D"
								},
								{
									"begin": 78313,
									"end": 78365,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 78313,
									"end": 78365,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 78313,
									"end": 78365,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 78313,
									"end": 78365,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 78313,
									"end": 78365,
									"name": "PUSH",
									"source": 0,
									"value": "436C6172656E6365446F6C617200000000000000000000000000000000000000"
								},
								{
									"begin": 78313,
									"end": 78365,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 78313,
									"end": 78365,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 78313,
									"end": 78365,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 78352,
									"end": 78356,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 72157,
									"end": 72588,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 72157,
									"end": 72588,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 72157,
									"end": 72588,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 72157,
									"end": 72588,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 72157,
									"end": 72588,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 72157,
									"end": 72588,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 72157,
									"end": 72588,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 72157,
									"end": 72588,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 72157,
									"end": 72588,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 72157,
									"end": 72588,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72157,
									"end": 72588,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 72157,
									"end": 72588,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 72157,
									"end": 72588,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 72157,
									"end": 72588,
									"name": "PUSH",
									"source": 0,
									"value": "3100000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 72157,
									"end": 72588,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72157,
									"end": 72588,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 72157,
									"end": 72588,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 79824,
									"end": 79836,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "PUSH",
									"source": 0,
									"value": "D"
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "PUSH",
									"source": 0,
									"value": "436C6172656E6365446F6C617200000000000000000000000000000000000000"
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "PUSH",
									"source": 0,
									"value": "434C440000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12862,
									"end": 12867,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12854,
									"end": 12859,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 12854,
									"end": 12867,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12854,
									"end": 12867,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12854,
									"end": 12867,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 12854,
									"end": 12867,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12854,
									"end": 12867,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12854,
									"end": 12867,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 12854,
									"end": 12867,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12854,
									"end": 12867,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 12854,
									"end": 12867,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12854,
									"end": 12867,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12887,
									"end": 12894,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12877,
									"end": 12884,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12877,
									"end": 12894,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12877,
									"end": 12894,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12877,
									"end": 12894,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 12877,
									"end": 12894,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12877,
									"end": 12894,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12877,
									"end": 12894,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 12877,
									"end": 12894,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12877,
									"end": 12894,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 12877,
									"end": 12894,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12877,
									"end": 12894,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12788,
									"end": 12901,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 23309,
									"end": 23310,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23285,
									"end": 23311,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 23285,
									"end": 23311,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 23285,
									"end": 23297,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23285,
									"end": 23311,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 23285,
									"end": 23311,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 23285,
									"end": 23311,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 23281,
									"end": 23376,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 23281,
									"end": 23376,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 23362,
									"end": 23363,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23334,
									"end": 23365,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 23334,
									"end": 23365,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 23334,
									"end": 23365,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 23334,
									"end": 23365,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23334,
									"end": 23365,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 23334,
									"end": 23365,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 23334,
									"end": 23365,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 23334,
									"end": 23365,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 23334,
									"end": 23365,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 23334,
									"end": 23365,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23334,
									"end": 23365,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 23334,
									"end": 23365,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 23334,
									"end": 23365,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 23334,
									"end": 23365,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23334,
									"end": 23365,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 23334,
									"end": 23365,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 23334,
									"end": 23365,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23334,
									"end": 23365,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 23334,
									"end": 23365,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 23334,
									"end": 23365,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23334,
									"end": 23365,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 23281,
									"end": 23376,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 23281,
									"end": 23376,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23385,
									"end": 23417,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 23404,
									"end": 23416,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23385,
									"end": 23403,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 23385,
									"end": 23403,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 23385,
									"end": 23403,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 23385,
									"end": 23417,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 23385,
									"end": 23417,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 23385,
									"end": 23417,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 23385,
									"end": 23417,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 23385,
									"end": 23417,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23237,
									"end": 23424,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 72230,
									"end": 72275,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 72261,
									"end": 72274,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 72230,
									"end": 72234,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 72230,
									"end": 72260,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 72230,
									"end": 72260,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 72230,
									"end": 72260,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 72230,
									"end": 72260,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 72230,
									"end": 72275,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 72230,
									"end": 72275,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 72230,
									"end": 72275,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 72230,
									"end": 72275,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 72230,
									"end": 72275,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 72230,
									"end": 72275,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 72230,
									"end": 72275,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 72222,
									"end": 72275,
									"name": "PUSH",
									"source": 0,
									"value": "120"
								},
								{
									"begin": 72222,
									"end": 72275,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72222,
									"end": 72275,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72222,
									"end": 72275,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 72222,
									"end": 72275,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 72222,
									"end": 72275,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 72296,
									"end": 72347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 72330,
									"end": 72346,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 72296,
									"end": 72303,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 72296,
									"end": 72329,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 72296,
									"end": 72329,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 72296,
									"end": 72329,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 72296,
									"end": 72329,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 72296,
									"end": 72347,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 72296,
									"end": 72347,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 72296,
									"end": 72347,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 72296,
									"end": 72347,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 72296,
									"end": 72347,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 72296,
									"end": 72347,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 72296,
									"end": 72347,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 72285,
									"end": 72347,
									"name": "PUSH",
									"source": 0,
									"value": "140"
								},
								{
									"begin": 72285,
									"end": 72347,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72285,
									"end": 72347,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72285,
									"end": 72347,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 72285,
									"end": 72347,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 72285,
									"end": 72347,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 72387,
									"end": 72391,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72371,
									"end": 72393,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 72371,
									"end": 72393,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 72371,
									"end": 72393,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 72371,
									"end": 72393,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 72371,
									"end": 72393,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 72371,
									"end": 72393,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 72357,
									"end": 72393,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 72357,
									"end": 72393,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72357,
									"end": 72393,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72357,
									"end": 72393,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 72357,
									"end": 72393,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 72357,
									"end": 72393,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 72436,
									"end": 72443,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 72420,
									"end": 72445,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 72420,
									"end": 72445,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 72420,
									"end": 72445,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 72420,
									"end": 72445,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 72420,
									"end": 72445,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 72420,
									"end": 72445,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 72403,
									"end": 72445,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 72403,
									"end": 72445,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72403,
									"end": 72445,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72403,
									"end": 72445,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 72403,
									"end": 72445,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 72403,
									"end": 72445,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 72473,
									"end": 72486,
									"name": "CHAINID",
									"source": 0
								},
								{
									"begin": 72456,
									"end": 72486,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 72456,
									"end": 72486,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72456,
									"end": 72486,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72456,
									"end": 72486,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 72456,
									"end": 72486,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 72456,
									"end": 72486,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 72521,
									"end": 72544,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 72521,
									"end": 72542,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 72521,
									"end": 72542,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 72521,
									"end": 72542,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 72521,
									"end": 72544,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 72521,
									"end": 72544,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 72521,
									"end": 72544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 72521,
									"end": 72544,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 72521,
									"end": 72544,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 72496,
									"end": 72544,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 72496,
									"end": 72544,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72496,
									"end": 72544,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72496,
									"end": 72544,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 72496,
									"end": 72544,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 72496,
									"end": 72544,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 72576,
									"end": 72580,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 72554,
									"end": 72581,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 72554,
									"end": 72581,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 72554,
									"end": 72581,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 72554,
									"end": 72581,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72554,
									"end": 72581,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 72554,
									"end": 72581,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 72554,
									"end": 72581,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72554,
									"end": 72581,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 72554,
									"end": 72581,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 72554,
									"end": 72581,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 72157,
									"end": 72588,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 72157,
									"end": 72588,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 78313,
									"end": 78365,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 79889,
									"end": 79931,
									"modifierDepth": 3,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 79895,
									"end": 79905,
									"modifierDepth": 3,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 79920,
									"end": 79930,
									"modifierDepth": 3,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 79920,
									"end": 79928,
									"modifierDepth": 3,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 79920,
									"end": 79928,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 79920,
									"end": 79928,
									"modifierDepth": 3,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 79920,
									"end": 79930,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 79920,
									"end": 79930,
									"modifierDepth": 3,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 79920,
									"end": 79930,
									"jumpType": "[in]",
									"modifierDepth": 3,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 79920,
									"end": 79930,
									"modifierDepth": 3,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 79920,
									"end": 79930,
									"modifierDepth": 3,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 79914,
									"end": 79916,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 79914,
									"end": 79930,
									"modifierDepth": 3,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 79914,
									"end": 79930,
									"modifierDepth": 3,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 79914,
									"end": 79930,
									"modifierDepth": 3,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 79914,
									"end": 79930,
									"modifierDepth": 3,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 79914,
									"end": 79930,
									"jumpType": "[in]",
									"modifierDepth": 3,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 79914,
									"end": 79930,
									"modifierDepth": 3,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 79914,
									"end": 79930,
									"modifierDepth": 3,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 79907,
									"end": 79911,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 0,
									"value": "3E8"
								},
								{
									"begin": 79907,
									"end": 79930,
									"modifierDepth": 3,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 79907,
									"end": 79930,
									"modifierDepth": 3,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 79907,
									"end": 79930,
									"modifierDepth": 3,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 79907,
									"end": 79930,
									"modifierDepth": 3,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 79907,
									"end": 79930,
									"jumpType": "[in]",
									"modifierDepth": 3,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 79907,
									"end": 79930,
									"modifierDepth": 3,
									"name": "tag",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 79907,
									"end": 79930,
									"modifierDepth": 3,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 79889,
									"end": 79894,
									"modifierDepth": 3,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 79889,
									"end": 79894,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 79889,
									"end": 79894,
									"modifierDepth": 3,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 79889,
									"end": 79931,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 79889,
									"end": 79931,
									"modifierDepth": 3,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 79889,
									"end": 79931,
									"jumpType": "[in]",
									"modifierDepth": 3,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 79889,
									"end": 79931,
									"modifierDepth": 3,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 79889,
									"end": 79931,
									"modifierDepth": 3,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 79736,
									"end": 79938,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 79675,
									"end": 80039,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 79675,
									"end": 80039,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 24924,
									"end": 25111,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 24924,
									"end": 25111,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24997,
									"end": 25013,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25016,
									"end": 25022,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 25016,
									"end": 25022,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25016,
									"end": 25022,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25016,
									"end": 25022,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 25016,
									"end": 25022,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25016,
									"end": 25022,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 25016,
									"end": 25022,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 25016,
									"end": 25022,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25016,
									"end": 25022,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 25016,
									"end": 25022,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 25016,
									"end": 25022,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24997,
									"end": 25022,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24997,
									"end": 25022,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25041,
									"end": 25049,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25032,
									"end": 25038,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 25032,
									"end": 25038,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25032,
									"end": 25049,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 25032,
									"end": 25049,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 25032,
									"end": 25049,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25032,
									"end": 25049,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 25032,
									"end": 25049,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25032,
									"end": 25049,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 25032,
									"end": 25049,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 25032,
									"end": 25049,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 25032,
									"end": 25049,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 25032,
									"end": 25049,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25032,
									"end": 25049,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 25032,
									"end": 25049,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 25032,
									"end": 25049,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 25032,
									"end": 25049,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 25032,
									"end": 25049,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 25032,
									"end": 25049,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25032,
									"end": 25049,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 25032,
									"end": 25049,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25095,
									"end": 25103,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25064,
									"end": 25104,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 25064,
									"end": 25104,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 25085,
									"end": 25093,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25064,
									"end": 25104,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 25064,
									"end": 25104,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 25064,
									"end": 25104,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 25064,
									"end": 25104,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25064,
									"end": 25104,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 25064,
									"end": 25104,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25064,
									"end": 25104,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 25064,
									"end": 25104,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25064,
									"end": 25104,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 25064,
									"end": 25104,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 25064,
									"end": 25104,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25064,
									"end": 25104,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 24987,
									"end": 25111,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24924,
									"end": 25111,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24924,
									"end": 25111,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 66807,
									"end": 67147,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 66807,
									"end": 67147,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 66903,
									"end": 66914,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66952,
									"end": 66954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 66936,
									"end": 66941,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 66930,
									"end": 66949,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 66930,
									"end": 66954,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 66926,
									"end": 67141,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 66926,
									"end": 67141,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 66926,
									"end": 67141,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 66977,
									"end": 66997,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 66991,
									"end": 66996,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 66977,
									"end": 66990,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 66977,
									"end": 66990,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 66977,
									"end": 66990,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 66977,
									"end": 66997,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 66977,
									"end": 66997,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 66977,
									"end": 66997,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 66977,
									"end": 66997,
									"name": "tag",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 66977,
									"end": 66997,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 66970,
									"end": 66997,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 66970,
									"end": 66997,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 66970,
									"end": 66997,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 66970,
									"end": 66997,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 66926,
									"end": 67141,
									"name": "tag",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 66926,
									"end": 67141,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 67069,
									"end": 67074,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 67028,
									"end": 67060,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 67054,
									"end": 67059,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 67028,
									"end": 67053,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 67028,
									"end": 67053,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 67028,
									"end": 67053,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 67028,
									"end": 67060,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 67028,
									"end": 67060,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 67028,
									"end": 67060,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 67028,
									"end": 67060,
									"name": "tag",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 67028,
									"end": 67060,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 67028,
									"end": 67066,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 67028,
									"end": 67066,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 67028,
									"end": 67074,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 67028,
									"end": 67074,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 67028,
									"end": 67074,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 67028,
									"end": 67074,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 67028,
									"end": 67074,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 67028,
									"end": 67074,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 67028,
									"end": 67074,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 67028,
									"end": 67074,
									"name": "tag",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 67028,
									"end": 67074,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 67028,
									"end": 67074,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 65283,
									"end": 65349,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 67112,
									"end": 67129,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 67112,
									"end": 67129,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 67088,
									"end": 67130,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 67088,
									"end": 67130,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 66807,
									"end": 67147,
									"name": "tag",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 66807,
									"end": 67147,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 66807,
									"end": 67147,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 66807,
									"end": 67147,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 66807,
									"end": 67147,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 66807,
									"end": 67147,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 66807,
									"end": 67147,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 72942,
									"end": 73121,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 72942,
									"end": 73121,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 72997,
									"end": 73004,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 70908,
									"end": 71003,
									"name": "PUSH",
									"source": 0,
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 73055,
									"end": 73066,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 73055,
									"end": 73066,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 73068,
									"end": 73082,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 73068,
									"end": 73082,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 73084,
									"end": 73097,
									"name": "CHAINID",
									"source": 0
								},
								{
									"begin": 73107,
									"end": 73111,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 73033,
									"end": 73113,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 73033,
									"end": 73113,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 73033,
									"end": 73113,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 73033,
									"end": 73113,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 73033,
									"end": 73113,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 73033,
									"end": 73113,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": 73033,
									"end": 73113,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 73033,
									"end": 73113,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 73033,
									"end": 73113,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 73033,
									"end": 73113,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 73033,
									"end": 73113,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 73033,
									"end": 73113,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "47"
								},
								{
									"begin": 73033,
									"end": 73113,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 73033,
									"end": 73113,
									"name": "tag",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 73033,
									"end": 73113,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 73033,
									"end": 73113,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 73033,
									"end": 73113,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 73033,
									"end": 73113,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 73033,
									"end": 73113,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 73033,
									"end": 73113,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 73033,
									"end": 73113,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 73033,
									"end": 73113,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 73033,
									"end": 73113,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 73033,
									"end": 73113,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 73033,
									"end": 73113,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 73033,
									"end": 73113,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 73033,
									"end": 73113,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 73023,
									"end": 73114,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 73023,
									"end": 73114,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 73023,
									"end": 73114,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 73023,
									"end": 73114,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 73023,
									"end": 73114,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 73023,
									"end": 73114,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 73016,
									"end": 73114,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 73016,
									"end": 73114,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 72942,
									"end": 73121,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 72942,
									"end": 73121,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 13894,
									"end": 13976,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 13894,
									"end": 13976,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13943,
									"end": 13948,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13967,
									"end": 13969,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 13960,
									"end": 13969,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13960,
									"end": 13969,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13894,
									"end": 13976,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13894,
									"end": 13976,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18613,
									"end": 18821,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 18613,
									"end": 18821,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18702,
									"end": 18703,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18683,
									"end": 18704,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 18683,
									"end": 18704,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18683,
									"end": 18690,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18683,
									"end": 18704,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 18683,
									"end": 18704,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18683,
									"end": 18704,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 18679,
									"end": 18770,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "50"
								},
								{
									"begin": 18679,
									"end": 18770,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 18756,
									"end": 18757,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18727,
									"end": 18759,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18727,
									"end": 18759,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18727,
									"end": 18759,
									"name": "PUSH",
									"source": 0,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 18727,
									"end": 18759,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18727,
									"end": 18759,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18727,
									"end": 18759,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 18727,
									"end": 18759,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 18727,
									"end": 18759,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "51"
								},
								{
									"begin": 18727,
									"end": 18759,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 18727,
									"end": 18759,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18727,
									"end": 18759,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 18727,
									"end": 18759,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18727,
									"end": 18759,
									"name": "tag",
									"source": 0,
									"value": "51"
								},
								{
									"begin": 18727,
									"end": 18759,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18727,
									"end": 18759,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18727,
									"end": 18759,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18727,
									"end": 18759,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18727,
									"end": 18759,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 18727,
									"end": 18759,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 18727,
									"end": 18759,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18727,
									"end": 18759,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 18679,
									"end": 18770,
									"name": "tag",
									"source": 0,
									"value": "50"
								},
								{
									"begin": 18679,
									"end": 18770,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18779,
									"end": 18814,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "52"
								},
								{
									"begin": 18795,
									"end": 18796,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18799,
									"end": 18806,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18808,
									"end": 18813,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18779,
									"end": 18786,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "53"
								},
								{
									"begin": 18779,
									"end": 18786,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18779,
									"end": 18786,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 18779,
									"end": 18814,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18779,
									"end": 18814,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 18779,
									"end": 18814,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18779,
									"end": 18814,
									"name": "tag",
									"source": 0,
									"value": "52"
								},
								{
									"begin": 18779,
									"end": 18814,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18613,
									"end": 18821,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18613,
									"end": 18821,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18613,
									"end": 18821,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 65601,
									"end": 65887,
									"name": "tag",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 65601,
									"end": 65887,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 65666,
									"end": 65677,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 65689,
									"end": 65706,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 65715,
									"end": 65718,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 65689,
									"end": 65719,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 65689,
									"end": 65719,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 65747,
									"end": 65749,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 65733,
									"end": 65737,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 65733,
									"end": 65744,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 65733,
									"end": 65749,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 65729,
									"end": 65801,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 65729,
									"end": 65801,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "55"
								},
								{
									"begin": 65729,
									"end": 65801,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 65786,
									"end": 65789,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 65772,
									"end": 65790,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 65772,
									"end": 65790,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 65772,
									"end": 65790,
									"name": "PUSH",
									"source": 0,
									"value": "305A27A900000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 65772,
									"end": 65790,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 65772,
									"end": 65790,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 65772,
									"end": 65790,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 65772,
									"end": 65790,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 65772,
									"end": 65790,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "56"
								},
								{
									"begin": 65772,
									"end": 65790,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 65772,
									"end": 65790,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 65772,
									"end": 65790,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "57"
								},
								{
									"begin": 65772,
									"end": 65790,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 65772,
									"end": 65790,
									"name": "tag",
									"source": 0,
									"value": "56"
								},
								{
									"begin": 65772,
									"end": 65790,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 65772,
									"end": 65790,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 65772,
									"end": 65790,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 65772,
									"end": 65790,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 65772,
									"end": 65790,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 65772,
									"end": 65790,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 65772,
									"end": 65790,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 65772,
									"end": 65790,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 65729,
									"end": 65801,
									"name": "tag",
									"source": 0,
									"value": "55"
								},
								{
									"begin": 65729,
									"end": 65801,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 65867,
									"end": 65871,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 65867,
									"end": 65878,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 65858,
									"end": 65862,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 65850,
									"end": 65863,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "58"
								},
								{
									"begin": 65850,
									"end": 65863,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 65850,
									"end": 65863,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "59"
								},
								{
									"begin": 65850,
									"end": 65863,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 65850,
									"end": 65863,
									"name": "tag",
									"source": 0,
									"value": "58"
								},
								{
									"begin": 65850,
									"end": 65863,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 65842,
									"end": 65864,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 65842,
									"end": 65864,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 65842,
									"end": 65878,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 65834,
									"end": 65879,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 65834,
									"end": 65879,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 65810,
									"end": 65880,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 65810,
									"end": 65880,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 65810,
									"end": 65880,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 65601,
									"end": 65887,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 65601,
									"end": 65887,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 65601,
									"end": 65887,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 65601,
									"end": 65887,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 63117,
									"end": 63319,
									"name": "tag",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 63117,
									"end": 63319,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 63185,
									"end": 63205,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63293,
									"end": 63303,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 63283,
									"end": 63303,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 63283,
									"end": 63303,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 63117,
									"end": 63319,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 63117,
									"end": 63319,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 63117,
									"end": 63319,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 63117,
									"end": 63319,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17163,
									"end": 18270,
									"name": "tag",
									"source": 0,
									"value": "53"
								},
								{
									"begin": 17163,
									"end": 18270,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17268,
									"end": 17269,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17252,
									"end": 17270,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17252,
									"end": 17270,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17252,
									"end": 17256,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17252,
									"end": 17270,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17252,
									"end": 17270,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17252,
									"end": 17270,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17248,
									"end": 17788,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "62"
								},
								{
									"begin": 17248,
									"end": 17788,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17404,
									"end": 17409,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17388,
									"end": 17400,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 17388,
									"end": 17400,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17388,
									"end": 17409,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17388,
									"end": 17409,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17388,
									"end": 17409,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17388,
									"end": 17409,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "63"
								},
								{
									"begin": 17388,
									"end": 17409,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17388,
									"end": 17409,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17388,
									"end": 17409,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "64"
								},
								{
									"begin": 17388,
									"end": 17409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17388,
									"end": 17409,
									"name": "tag",
									"source": 0,
									"value": "63"
								},
								{
									"begin": 17388,
									"end": 17409,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17388,
									"end": 17409,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 17388,
									"end": 17409,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17388,
									"end": 17409,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17388,
									"end": 17409,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17388,
									"end": 17409,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17388,
									"end": 17409,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17388,
									"end": 17409,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17248,
									"end": 17788,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "65"
								},
								{
									"begin": 17248,
									"end": 17788,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17248,
									"end": 17788,
									"name": "tag",
									"source": 0,
									"value": "62"
								},
								{
									"begin": 17248,
									"end": 17788,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17440,
									"end": 17459,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17462,
									"end": 17471,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17462,
									"end": 17477,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17472,
									"end": 17476,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 17462,
									"end": 17477,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17462,
									"end": 17477,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17462,
									"end": 17477,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17462,
									"end": 17477,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17462,
									"end": 17477,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17462,
									"end": 17477,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17462,
									"end": 17477,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17462,
									"end": 17477,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17462,
									"end": 17477,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17462,
									"end": 17477,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17462,
									"end": 17477,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17462,
									"end": 17477,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17462,
									"end": 17477,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17462,
									"end": 17477,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17462,
									"end": 17477,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17462,
									"end": 17477,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17440,
									"end": 17477,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17440,
									"end": 17477,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17509,
									"end": 17514,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17495,
									"end": 17506,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17495,
									"end": 17514,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 17491,
									"end": 17606,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 17491,
									"end": 17606,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "66"
								},
								{
									"begin": 17491,
									"end": 17606,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17566,
									"end": 17570,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17572,
									"end": 17583,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17585,
									"end": 17590,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17541,
									"end": 17591,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17541,
									"end": 17591,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17541,
									"end": 17591,
									"name": "PUSH",
									"source": 0,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 17541,
									"end": 17591,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17541,
									"end": 17591,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17541,
									"end": 17591,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 17541,
									"end": 17591,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17541,
									"end": 17591,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "67"
								},
								{
									"begin": 17541,
									"end": 17591,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 17541,
									"end": 17591,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 17541,
									"end": 17591,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17541,
									"end": 17591,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17541,
									"end": 17591,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "68"
								},
								{
									"begin": 17541,
									"end": 17591,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17541,
									"end": 17591,
									"name": "tag",
									"source": 0,
									"value": "67"
								},
								{
									"begin": 17541,
									"end": 17591,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17541,
									"end": 17591,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17541,
									"end": 17591,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17541,
									"end": 17591,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17541,
									"end": 17591,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17541,
									"end": 17591,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17541,
									"end": 17591,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17541,
									"end": 17591,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 17491,
									"end": 17606,
									"name": "tag",
									"source": 0,
									"value": "66"
								},
								{
									"begin": 17491,
									"end": 17606,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17758,
									"end": 17763,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17744,
									"end": 17755,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17744,
									"end": 17763,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17726,
									"end": 17735,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17726,
									"end": 17741,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17736,
									"end": 17740,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 17726,
									"end": 17741,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17726,
									"end": 17741,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17726,
									"end": 17741,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17726,
									"end": 17741,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17726,
									"end": 17741,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17726,
									"end": 17741,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17726,
									"end": 17741,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17726,
									"end": 17741,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17726,
									"end": 17741,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17726,
									"end": 17741,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17726,
									"end": 17741,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17726,
									"end": 17741,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17726,
									"end": 17741,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17726,
									"end": 17741,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17726,
									"end": 17741,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17726,
									"end": 17763,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17726,
									"end": 17763,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17726,
									"end": 17763,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17726,
									"end": 17763,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17426,
									"end": 17788,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17248,
									"end": 17788,
									"name": "tag",
									"source": 0,
									"value": "65"
								},
								{
									"begin": 17248,
									"end": 17788,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17816,
									"end": 17817,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17802,
									"end": 17818,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17802,
									"end": 17818,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17802,
									"end": 17804,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17802,
									"end": 17818,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17802,
									"end": 17818,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17802,
									"end": 17818,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17798,
									"end": 18223,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "69"
								},
								{
									"begin": 17798,
									"end": 18223,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17981,
									"end": 17986,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17965,
									"end": 17977,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 17965,
									"end": 17977,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17965,
									"end": 17986,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17965,
									"end": 17986,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17965,
									"end": 17986,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17965,
									"end": 17986,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17965,
									"end": 17986,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 17965,
									"end": 17986,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17965,
									"end": 17986,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17965,
									"end": 17986,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17965,
									"end": 17986,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17965,
									"end": 17986,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17965,
									"end": 17986,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17798,
									"end": 18223,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "70"
								},
								{
									"begin": 17798,
									"end": 18223,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17798,
									"end": 18223,
									"name": "tag",
									"source": 0,
									"value": "69"
								},
								{
									"begin": 17798,
									"end": 18223,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18193,
									"end": 18198,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18176,
									"end": 18185,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18176,
									"end": 18189,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18186,
									"end": 18188,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 18176,
									"end": 18189,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 18176,
									"end": 18189,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18176,
									"end": 18189,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 18176,
									"end": 18189,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18176,
									"end": 18189,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18176,
									"end": 18189,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18176,
									"end": 18189,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18176,
									"end": 18189,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 18176,
									"end": 18189,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18176,
									"end": 18189,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18176,
									"end": 18189,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18176,
									"end": 18189,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18176,
									"end": 18189,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 18176,
									"end": 18189,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18176,
									"end": 18189,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 18176,
									"end": 18189,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18176,
									"end": 18198,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18176,
									"end": 18198,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18176,
									"end": 18198,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 18176,
									"end": 18198,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 18176,
									"end": 18198,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 18176,
									"end": 18198,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18176,
									"end": 18198,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18176,
									"end": 18198,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18176,
									"end": 18198,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18176,
									"end": 18198,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 18176,
									"end": 18198,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17798,
									"end": 18223,
									"name": "tag",
									"source": 0,
									"value": "70"
								},
								{
									"begin": 17798,
									"end": 18223,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18253,
									"end": 18255,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18238,
									"end": 18263,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 18238,
									"end": 18263,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18247,
									"end": 18251,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18238,
									"end": 18263,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 18238,
									"end": 18263,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18238,
									"end": 18263,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 18257,
									"end": 18262,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18238,
									"end": 18263,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18238,
									"end": 18263,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18238,
									"end": 18263,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "71"
								},
								{
									"begin": 18238,
									"end": 18263,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 18238,
									"end": 18263,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18238,
									"end": 18263,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "72"
								},
								{
									"begin": 18238,
									"end": 18263,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18238,
									"end": 18263,
									"name": "tag",
									"source": 0,
									"value": "71"
								},
								{
									"begin": 18238,
									"end": 18263,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18238,
									"end": 18263,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18238,
									"end": 18263,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18238,
									"end": 18263,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18238,
									"end": 18263,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 18238,
									"end": 18263,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 18238,
									"end": 18263,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18238,
									"end": 18263,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 17163,
									"end": 18270,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17163,
									"end": 18270,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17163,
									"end": 18270,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17163,
									"end": 18270,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "122"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 1,
									"value": "122"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "124"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 1,
									"value": "124"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "125"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 1,
									"value": "125"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "127"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 1,
									"value": "127"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "129"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "130"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 1,
									"value": "130"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 1,
									"value": "129"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "131"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 1,
									"value": "131"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "tag",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1254,
									"end": 1260,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1293,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1282,
									"end": 1294,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1301,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "tag",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1355,
									"end": 1432,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1352,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1345,
									"end": 1433,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1452,
									"end": 1456,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1449,
									"end": 1450,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1442,
									"end": 1457,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1476,
									"end": 1480,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1473,
									"end": 1474,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1466,
									"end": 1481,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "tag",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1541,
									"end": 1618,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1531,
									"end": 1619,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1638,
									"end": 1642,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1635,
									"end": 1636,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1628,
									"end": 1643,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1662,
									"end": 1666,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1659,
									"end": 1660,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1652,
									"end": 1667,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "tag",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1723,
									"end": 1729,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1760,
									"end": 1761,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1754,
									"end": 1758,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1750,
									"end": 1762,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1807,
									"end": 1808,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1801,
									"end": 1805,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1797,
									"end": 1809,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1828,
									"end": 1846,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "136"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1884,
									"end": 1888,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 1876,
									"end": 1882,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1872,
									"end": 1889,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "tag",
									"source": 1,
									"value": "136"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 1948,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1938,
									"end": 1944,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1935,
									"end": 1949,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1915,
									"end": 1933,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1912,
									"end": 1950,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "137"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "138"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 1965,
									"end": 1983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "tag",
									"source": 1,
									"value": "138"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "tag",
									"source": 1,
									"value": "137"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1730,
									"end": 1999,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1999,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "tag",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2054,
									"end": 2058,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2077,
									"end": 2080,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2100,
									"end": 2103,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2097,
									"end": 2098,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2090,
									"end": 2104,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2134,
									"end": 2138,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2131,
									"end": 2132,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2005,
									"end": 2146,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "tag",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2189,
									"end": 2195,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2236,
									"end": 2238,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2231,
									"end": 2233,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2224,
									"end": 2229,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2220,
									"end": 2234,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2216,
									"end": 2239,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2245,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "tag",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2295,
									"end": 2303,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2345,
									"end": 2350,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2339,
									"end": 2343,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2335,
									"end": 2351,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2358,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "tag",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2471,
									"end": 2481,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2467,
									"end": 2485,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "143"
								},
								{
									"begin": 2536,
									"end": 2602,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2534,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 2506,
									"end": 2603,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "tag",
									"source": 1,
									"value": "143"
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "144"
								},
								{
									"begin": 2654,
									"end": 2662,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2643,
									"end": 2652,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 2624,
									"end": 2663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "tag",
									"source": 1,
									"value": "144"
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2696,
									"end": 2700,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2692,
									"end": 2701,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2685,
									"end": 2690,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2681,
									"end": 2702,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2745,
									"end": 2749,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2735,
									"end": 2743,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2731,
									"end": 2750,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2724,
									"end": 2729,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2721,
									"end": 2751,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "tag",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2800,
									"end": 2807,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2829,
									"end": 2834,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2763,
									"end": 2840,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "tag",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2874,
									"end": 2877,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2895,
									"end": 2900,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2846,
									"end": 2906,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "tag",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2962,
									"end": 2971,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "148"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "149"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "150"
								},
								{
									"begin": 3040,
									"end": 3045,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 3022,
									"end": 3046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "tag",
									"source": 1,
									"value": "150"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 3013,
									"end": 3047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "tag",
									"source": 1,
									"value": "149"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 2995,
									"end": 3048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "tag",
									"source": 1,
									"value": "148"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "tag",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3103,
									"end": 3106,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3124,
									"end": 3129,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3060,
									"end": 3135,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "tag",
									"source": 1,
									"value": "92"
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "153"
								},
								{
									"begin": 3282,
									"end": 3289,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 3251,
									"end": 3290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "tag",
									"source": 1,
									"value": "153"
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "154"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "155"
								},
								{
									"begin": 3385,
									"end": 3401,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 3361,
									"end": 3402,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "tag",
									"source": 1,
									"value": "155"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3353,
									"end": 3359,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3346,
									"end": 3350,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3340,
									"end": 3351,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 3312,
									"end": 3403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "tag",
									"source": 1,
									"value": "154"
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3306,
									"end": 3310,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3299,
									"end": 3404,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3217,
									"end": 3410,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3141,
									"end": 3410,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "tag",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3461,
									"end": 3464,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3416,
									"end": 3489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "tag",
									"source": 1,
									"value": "94"
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "158"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 3572,
									"end": 3604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "tag",
									"source": 1,
									"value": "158"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "159"
								},
								{
									"begin": 3671,
									"end": 3677,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3663,
									"end": 3669,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3657,
									"end": 3661,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "92"
								},
								{
									"begin": 3613,
									"end": 3678,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "tag",
									"source": 1,
									"value": "159"
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3548,
									"end": 3684,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3495,
									"end": 3684,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "tag",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 1,
									"value": "161"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3767,
									"end": 3770,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3760,
									"end": 3765,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3757,
									"end": 3771,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "163"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "164"
								},
								{
									"begin": 3858,
									"end": 3859,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3851,
									"end": 3856,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "94"
								},
								{
									"begin": 3821,
									"end": 3860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "tag",
									"source": 1,
									"value": "164"
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3794,
									"end": 3795,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3787,
									"end": 3792,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3783,
									"end": 3796,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "161"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 1,
									"value": "163"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3690,
									"end": 3876,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "tag",
									"source": 1,
									"value": "96"
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3983,
									"end": 3985,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 3978,
									"end": 3981,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3975,
									"end": 3986,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "166"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "167"
								},
								{
									"begin": 4049,
									"end": 4054,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 4017,
									"end": 4055,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "tag",
									"source": 1,
									"value": "167"
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "168"
								},
								{
									"begin": 4119,
									"end": 4129,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 4101,
									"end": 4130,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "tag",
									"source": 1,
									"value": "168"
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4091,
									"end": 4099,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4087,
									"end": 4131,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4284,
									"end": 4286,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4272,
									"end": 4282,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "169"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4305,
									"end": 4313,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "tag",
									"source": 1,
									"value": "169"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "170"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "171"
								},
								{
									"begin": 4402,
									"end": 4405,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 4384,
									"end": 4406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "tag",
									"source": 1,
									"value": "171"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4374,
									"end": 4382,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4370,
									"end": 4407,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4357,
									"end": 4368,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 4328,
									"end": 4408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "tag",
									"source": 1,
									"value": "170"
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "tag",
									"source": 1,
									"value": "166"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3882,
									"end": 4425,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "tag",
									"source": 1,
									"value": "97"
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4485,
									"end": 4493,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4535,
									"end": 4540,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4529,
									"end": 4533,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4525,
									"end": 4541,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "tag",
									"source": 1,
									"value": "98"
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4598,
									"end": 4604,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "174"
								},
								{
									"begin": 4679,
									"end": 4680,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4675,
									"end": 4681,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 4667,
									"end": 4672,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4664,
									"end": 4665,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 4660,
									"end": 4673,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "97"
								},
								{
									"begin": 4631,
									"end": 4682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "tag",
									"source": 1,
									"value": "174"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4627,
									"end": 4683,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 4712,
									"end": 4716,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4706,
									"end": 4710,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4702,
									"end": 4717,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4605,
									"end": 4723,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4723,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "tag",
									"source": 1,
									"value": "99"
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4804,
									"end": 4808,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "176"
								},
								{
									"begin": 4975,
									"end": 4978,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4969,
									"end": 4973,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "98"
								},
								{
									"begin": 4950,
									"end": 4979,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "tag",
									"source": 1,
									"value": "176"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5012,
									"end": 5015,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5009,
									"end": 5010,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 5005,
									"end": 5016,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4999,
									"end": 5003,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4996,
									"end": 5017,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 5023,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "178"
								},
								{
									"begin": 5178,
									"end": 5181,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 5145,
									"end": 5182,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "tag",
									"source": 1,
									"value": "178"
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5247,
									"end": 5265,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5239,
									"end": 5245,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5236,
									"end": 5266,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "179"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "180"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 5269,
									"end": 5287,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "tag",
									"source": 1,
									"value": "180"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "tag",
									"source": 1,
									"value": "179"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "181"
								},
								{
									"begin": 5345,
									"end": 5349,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5339,
									"end": 5350,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 5313,
									"end": 5351,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "tag",
									"source": 1,
									"value": "181"
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "182"
								},
								{
									"begin": 5458,
									"end": 5464,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5450,
									"end": 5456,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5444,
									"end": 5448,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "96"
								},
								{
									"begin": 5398,
									"end": 5465,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "tag",
									"source": 1,
									"value": "182"
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5492,
									"end": 5493,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5516,
									"end": 5520,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5548,
									"end": 5550,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 5540,
									"end": 5546,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5537,
									"end": 5551,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 5565,
									"end": 5566,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "184"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6222,
									"end": 6223,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6239,
									"end": 6245,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "185"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6283,
									"end": 6286,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 6279,
									"end": 6298,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6273,
									"end": 6299,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "tag",
									"source": 1,
									"value": "185"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "186"
								},
								{
									"begin": 6399,
									"end": 6405,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6392,
									"end": 6397,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "99"
								},
								{
									"begin": 6339,
									"end": 6406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "tag",
									"source": 1,
									"value": "186"
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6333,
									"end": 6337,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 6326,
									"end": 6407,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6195,
									"end": 6417,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "183"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "tag",
									"source": 1,
									"value": "184"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5612,
									"end": 5616,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 5608,
									"end": 5617,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 5600,
									"end": 5606,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5596,
									"end": 5618,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "187"
								},
								{
									"begin": 5678,
									"end": 5682,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 5646,
									"end": 5683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "tag",
									"source": 1,
									"value": "187"
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5705,
									"end": 5706,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 1,
									"value": "188"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5733,
									"end": 5740,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5730,
									"end": 5731,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5727,
									"end": 5741,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "190"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5812,
									"end": 5821,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5807,
									"end": 5810,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 5803,
									"end": 5822,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5797,
									"end": 5823,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5789,
									"end": 5795,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5782,
									"end": 5824,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5863,
									"end": 5864,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 5855,
									"end": 5861,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5851,
									"end": 5865,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5910,
									"end": 5912,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5899,
									"end": 5908,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5895,
									"end": 5913,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5756,
									"end": 5760,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5753,
									"end": 5754,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5749,
									"end": 5761,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "188"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 1,
									"value": "190"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5955,
									"end": 5961,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5946,
									"end": 5953,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5943,
									"end": 5962,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "191"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6013,
									"end": 6022,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6008,
									"end": 6011,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 6004,
									"end": 6023,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5998,
									"end": 6024,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "192"
								},
								{
									"begin": 6098,
									"end": 6102,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 6090,
									"end": 6096,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 6086,
									"end": 6103,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6075,
									"end": 6084,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "98"
								},
								{
									"begin": 6056,
									"end": 6104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "tag",
									"source": 1,
									"value": "192"
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6048,
									"end": 6054,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6041,
									"end": 6105,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5963,
									"end": 6119,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "tag",
									"source": 1,
									"value": "191"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6165,
									"end": 6166,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 6161,
									"end": 6162,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6153,
									"end": 6159,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 6149,
									"end": 6163,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 6145,
									"end": 6167,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6139,
									"end": 6143,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 6132,
									"end": 6168,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "tag",
									"source": 1,
									"value": "183"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5028,
									"end": 6423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "tag",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "194"
								},
								{
									"begin": 6534,
									"end": 6539,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 6516,
									"end": 6540,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "tag",
									"source": 1,
									"value": "194"
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6511,
									"end": 6514,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6504,
									"end": 6541,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6429,
									"end": 6547,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6646,
									"end": 6650,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6684,
									"end": 6686,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6673,
									"end": 6682,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6669,
									"end": 6687,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "196"
								},
								{
									"begin": 6765,
									"end": 6766,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6754,
									"end": 6763,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6750,
									"end": 6767,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6741,
									"end": 6747,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 6697,
									"end": 6768,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "tag",
									"source": 1,
									"value": "196"
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6781,
									"end": 6961,
									"name": "tag",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 6781,
									"end": 6961,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6829,
									"end": 6906,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6826,
									"end": 6827,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6819,
									"end": 6907,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6926,
									"end": 6930,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 6923,
									"end": 6924,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 6916,
									"end": 6931,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6950,
									"end": 6954,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 6947,
									"end": 6948,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6940,
									"end": 6955,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 6967,
									"end": 7069,
									"name": "tag",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 6967,
									"end": 7069,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7009,
									"end": 7017,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7056,
									"end": 7061,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7053,
									"end": 7054,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 7049,
									"end": 7062,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 7028,
									"end": 7062,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7028,
									"end": 7062,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6967,
									"end": 7069,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6967,
									"end": 7069,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6967,
									"end": 7069,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6967,
									"end": 7069,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "tag",
									"source": 1,
									"value": "103"
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7136,
									"end": 7141,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7143,
									"end": 7147,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7167,
									"end": 7173,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7158,
									"end": 7173,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7158,
									"end": 7173,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7191,
									"end": 7196,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7182,
									"end": 7196,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7182,
									"end": 7196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "tag",
									"source": 1,
									"value": "200"
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7226,
									"end": 7227,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 7216,
									"end": 7224,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 7213,
									"end": 7228,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "202"
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7321,
									"end": 7325,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7316,
									"end": 7319,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 7312,
									"end": 7326,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 7306,
									"end": 7310,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7303,
									"end": 7327,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 7300,
									"end": 7350,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7300,
									"end": 7350,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "203"
								},
								{
									"begin": 7300,
									"end": 7350,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7330,
									"end": 7348,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "204"
								},
								{
									"begin": 7330,
									"end": 7348,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 7330,
									"end": 7348,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7330,
									"end": 7348,
									"name": "tag",
									"source": 1,
									"value": "204"
								},
								{
									"begin": 7330,
									"end": 7348,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7300,
									"end": 7350,
									"name": "tag",
									"source": 1,
									"value": "203"
								},
								{
									"begin": 7300,
									"end": 7350,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7380,
									"end": 7381,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 7370,
									"end": 7378,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 7366,
									"end": 7382,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7363,
									"end": 7814,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7363,
									"end": 7814,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "205"
								},
								{
									"begin": 7363,
									"end": 7814,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7795,
									"end": 7799,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7788,
									"end": 7793,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7784,
									"end": 7800,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 7775,
									"end": 7800,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7775,
									"end": 7800,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7363,
									"end": 7814,
									"name": "tag",
									"source": 1,
									"value": "205"
								},
								{
									"begin": 7363,
									"end": 7814,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7845,
									"end": 7849,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7839,
									"end": 7843,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7850,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 7827,
									"end": 7850,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7827,
									"end": 7850,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7875,
									"end": 7907,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "206"
								},
								{
									"begin": 7898,
									"end": 7906,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 7875,
									"end": 7907,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 7875,
									"end": 7907,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7875,
									"end": 7907,
									"name": "tag",
									"source": 1,
									"value": "206"
								},
								{
									"begin": 7875,
									"end": 7907,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7863,
									"end": 7907,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 7863,
									"end": 7907,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "200"
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "tag",
									"source": 1,
									"value": "202"
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7075,
									"end": 7923,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "tag",
									"source": 1,
									"value": "104"
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7983,
									"end": 7988,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8174,
									"end": 8182,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8164,
									"end": 8204,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "208"
								},
								{
									"begin": 8164,
									"end": 8204,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8195,
									"end": 8196,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 8186,
									"end": 8196,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8186,
									"end": 8196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8197,
									"end": 8202,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "207"
								},
								{
									"begin": 8197,
									"end": 8202,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8164,
									"end": 8204,
									"name": "tag",
									"source": 1,
									"value": "208"
								},
								{
									"begin": 8164,
									"end": 8204,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8223,
									"end": 8227,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8213,
									"end": 8249,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "209"
								},
								{
									"begin": 8213,
									"end": 8249,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8240,
									"end": 8241,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8231,
									"end": 8241,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8231,
									"end": 8241,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8242,
									"end": 8247,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "207"
								},
								{
									"begin": 8242,
									"end": 8247,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8213,
									"end": 8249,
									"name": "tag",
									"source": 1,
									"value": "209"
								},
								{
									"begin": 8213,
									"end": 8249,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8309,
									"end": 8313,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8357,
									"end": 8358,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 8352,
									"end": 8379,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8352,
									"end": 8379,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 8352,
									"end": 8379,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "211"
								},
								{
									"begin": 8352,
									"end": 8379,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8393,
									"end": 8394,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 8388,
									"end": 8579,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8388,
									"end": 8579,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 8388,
									"end": 8579,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "212"
								},
								{
									"begin": 8388,
									"end": 8579,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8302,
									"end": 8579,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "210"
								},
								{
									"begin": 8302,
									"end": 8579,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8352,
									"end": 8379,
									"name": "tag",
									"source": 1,
									"value": "211"
								},
								{
									"begin": 8352,
									"end": 8379,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8370,
									"end": 8371,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 8361,
									"end": 8371,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8361,
									"end": 8371,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8372,
									"end": 8377,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8372,
									"end": 8377,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "207"
								},
								{
									"begin": 8372,
									"end": 8377,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8388,
									"end": 8579,
									"name": "tag",
									"source": 1,
									"value": "212"
								},
								{
									"begin": 8388,
									"end": 8579,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8433,
									"end": 8436,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 8423,
									"end": 8431,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8420,
									"end": 8437,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 8417,
									"end": 8460,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8417,
									"end": 8460,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "213"
								},
								{
									"begin": 8417,
									"end": 8460,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8440,
									"end": 8458,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "214"
								},
								{
									"begin": 8440,
									"end": 8458,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 8440,
									"end": 8458,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8440,
									"end": 8458,
									"name": "tag",
									"source": 1,
									"value": "214"
								},
								{
									"begin": 8440,
									"end": 8458,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8417,
									"end": 8460,
									"name": "tag",
									"source": 1,
									"value": "213"
								},
								{
									"begin": 8417,
									"end": 8460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8489,
									"end": 8497,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8486,
									"end": 8487,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 8482,
									"end": 8498,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 8473,
									"end": 8498,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8473,
									"end": 8498,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8524,
									"end": 8527,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8517,
									"end": 8522,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8514,
									"end": 8528,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 8511,
									"end": 8551,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8511,
									"end": 8551,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "215"
								},
								{
									"begin": 8511,
									"end": 8551,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8531,
									"end": 8549,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "216"
								},
								{
									"begin": 8531,
									"end": 8549,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 8531,
									"end": 8549,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8531,
									"end": 8549,
									"name": "tag",
									"source": 1,
									"value": "216"
								},
								{
									"begin": 8531,
									"end": 8549,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8511,
									"end": 8551,
									"name": "tag",
									"source": 1,
									"value": "215"
								},
								{
									"begin": 8511,
									"end": 8551,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8564,
									"end": 8569,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8564,
									"end": 8569,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "207"
								},
								{
									"begin": 8564,
									"end": 8569,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8302,
									"end": 8579,
									"name": "tag",
									"source": 1,
									"value": "210"
								},
								{
									"begin": 8302,
									"end": 8579,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8302,
									"end": 8579,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8688,
									"end": 8690,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8678,
									"end": 8686,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8675,
									"end": 8691,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 8669,
									"end": 8672,
									"name": "PUSH",
									"source": 1,
									"value": "133"
								},
								{
									"begin": 8663,
									"end": 8667,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8660,
									"end": 8673,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 8656,
									"end": 8692,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8638,
									"end": 8640,
									"name": "PUSH",
									"source": 1,
									"value": "4E"
								},
								{
									"begin": 8628,
									"end": 8636,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8625,
									"end": 8641,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 8620,
									"end": 8622,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 8614,
									"end": 8618,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8611,
									"end": 8623,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 8607,
									"end": 8642,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8591,
									"end": 8702,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 8588,
									"end": 8834,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8588,
									"end": 8834,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "217"
								},
								{
									"begin": 8588,
									"end": 8834,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8744,
									"end": 8752,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8738,
									"end": 8742,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8734,
									"end": 8753,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 8725,
									"end": 8753,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8725,
									"end": 8753,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8779,
									"end": 8782,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8772,
									"end": 8777,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8769,
									"end": 8783,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 8766,
									"end": 8806,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8766,
									"end": 8806,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "218"
								},
								{
									"begin": 8766,
									"end": 8806,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8786,
									"end": 8804,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "219"
								},
								{
									"begin": 8786,
									"end": 8804,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 8786,
									"end": 8804,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8786,
									"end": 8804,
									"name": "tag",
									"source": 1,
									"value": "219"
								},
								{
									"begin": 8786,
									"end": 8804,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8766,
									"end": 8806,
									"name": "tag",
									"source": 1,
									"value": "218"
								},
								{
									"begin": 8766,
									"end": 8806,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8819,
									"end": 8824,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "207"
								},
								{
									"begin": 8819,
									"end": 8824,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8588,
									"end": 8834,
									"name": "tag",
									"source": 1,
									"value": "217"
								},
								{
									"begin": 8588,
									"end": 8834,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8859,
									"end": 8901,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "220"
								},
								{
									"begin": 8897,
									"end": 8900,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8887,
									"end": 8895,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8881,
									"end": 8885,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8878,
									"end": 8879,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 8859,
									"end": 8901,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "103"
								},
								{
									"begin": 8859,
									"end": 8901,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8859,
									"end": 8901,
									"name": "tag",
									"source": 1,
									"value": "220"
								},
								{
									"begin": 8859,
									"end": 8901,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8844,
									"end": 8901,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 8844,
									"end": 8901,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8844,
									"end": 8901,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8844,
									"end": 8901,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8933,
									"end": 8937,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8928,
									"end": 8931,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8924,
									"end": 8938,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 8917,
									"end": 8922,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8914,
									"end": 8939,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 8911,
									"end": 8962,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8911,
									"end": 8962,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "221"
								},
								{
									"begin": 8911,
									"end": 8962,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8942,
									"end": 8960,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "222"
								},
								{
									"begin": 8942,
									"end": 8960,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 8942,
									"end": 8960,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8942,
									"end": 8960,
									"name": "tag",
									"source": 1,
									"value": "222"
								},
								{
									"begin": 8942,
									"end": 8960,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8911,
									"end": 8962,
									"name": "tag",
									"source": 1,
									"value": "221"
								},
								{
									"begin": 8911,
									"end": 8962,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8991,
									"end": 8995,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8984,
									"end": 8989,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8980,
									"end": 8996,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 8971,
									"end": 8996,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8971,
									"end": 8996,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "tag",
									"source": 1,
									"value": "207"
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7929,
									"end": 9002,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9008,
									"end": 9094,
									"name": "tag",
									"source": 1,
									"value": "105"
								},
								{
									"begin": 9008,
									"end": 9094,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9043,
									"end": 9050,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9083,
									"end": 9087,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 9076,
									"end": 9081,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9072,
									"end": 9088,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 9061,
									"end": 9088,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9061,
									"end": 9088,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9008,
									"end": 9094,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9008,
									"end": 9094,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9008,
									"end": 9094,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9008,
									"end": 9094,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9100,
									"end": 9381,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 9100,
									"end": 9381,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9158,
									"end": 9163,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9182,
									"end": 9205,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "225"
								},
								{
									"begin": 9200,
									"end": 9204,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9182,
									"end": 9205,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 9182,
									"end": 9205,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9182,
									"end": 9205,
									"name": "tag",
									"source": 1,
									"value": "225"
								},
								{
									"begin": 9182,
									"end": 9205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9174,
									"end": 9205,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9174,
									"end": 9205,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9226,
									"end": 9251,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "226"
								},
								{
									"begin": 9242,
									"end": 9250,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9226,
									"end": 9251,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "105"
								},
								{
									"begin": 9226,
									"end": 9251,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9226,
									"end": 9251,
									"name": "tag",
									"source": 1,
									"value": "226"
								},
								{
									"begin": 9226,
									"end": 9251,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9214,
									"end": 9251,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 9214,
									"end": 9251,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9270,
									"end": 9374,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "227"
								},
								{
									"begin": 9307,
									"end": 9373,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9297,
									"end": 9305,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 9291,
									"end": 9295,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 9270,
									"end": 9374,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "104"
								},
								{
									"begin": 9270,
									"end": 9374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9270,
									"end": 9374,
									"name": "tag",
									"source": 1,
									"value": "227"
								},
								{
									"begin": 9270,
									"end": 9374,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9261,
									"end": 9374,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9261,
									"end": 9374,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9100,
									"end": 9381,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 9100,
									"end": 9381,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9100,
									"end": 9381,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9100,
									"end": 9381,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9100,
									"end": 9381,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9387,
									"end": 9797,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 9387,
									"end": 9797,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9427,
									"end": 9434,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9450,
									"end": 9470,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "229"
								},
								{
									"begin": 9468,
									"end": 9469,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9450,
									"end": 9470,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 9450,
									"end": 9470,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9450,
									"end": 9470,
									"name": "tag",
									"source": 1,
									"value": "229"
								},
								{
									"begin": 9450,
									"end": 9470,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9445,
									"end": 9470,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9445,
									"end": 9470,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9484,
									"end": 9504,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "230"
								},
								{
									"begin": 9502,
									"end": 9503,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9484,
									"end": 9504,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 9484,
									"end": 9504,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9484,
									"end": 9504,
									"name": "tag",
									"source": 1,
									"value": "230"
								},
								{
									"begin": 9484,
									"end": 9504,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9479,
									"end": 9504,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 9479,
									"end": 9504,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9539,
									"end": 9540,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9536,
									"end": 9537,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9532,
									"end": 9541,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 9561,
									"end": 9591,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "231"
								},
								{
									"begin": 9579,
									"end": 9590,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 9561,
									"end": 9591,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 9561,
									"end": 9591,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9561,
									"end": 9591,
									"name": "tag",
									"source": 1,
									"value": "231"
								},
								{
									"begin": 9561,
									"end": 9591,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9550,
									"end": 9591,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9550,
									"end": 9591,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9740,
									"end": 9741,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9731,
									"end": 9738,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9727,
									"end": 9742,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 9724,
									"end": 9725,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 9721,
									"end": 9743,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 9701,
									"end": 9702,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9694,
									"end": 9703,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 9674,
									"end": 9757,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 9651,
									"end": 9790,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "232"
								},
								{
									"begin": 9651,
									"end": 9790,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 9770,
									"end": 9788,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "233"
								},
								{
									"begin": 9770,
									"end": 9788,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 9770,
									"end": 9788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9770,
									"end": 9788,
									"name": "tag",
									"source": 1,
									"value": "233"
								},
								{
									"begin": 9770,
									"end": 9788,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9651,
									"end": 9790,
									"name": "tag",
									"source": 1,
									"value": "232"
								},
								{
									"begin": 9651,
									"end": 9790,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9435,
									"end": 9797,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9387,
									"end": 9797,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 9387,
									"end": 9797,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9387,
									"end": 9797,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9387,
									"end": 9797,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9387,
									"end": 9797,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9803,
									"end": 9880,
									"name": "tag",
									"source": 1,
									"value": "106"
								},
								{
									"begin": 9803,
									"end": 9880,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9840,
									"end": 9847,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9869,
									"end": 9874,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 9858,
									"end": 9874,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9858,
									"end": 9874,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9803,
									"end": 9880,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9803,
									"end": 9880,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9803,
									"end": 9880,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9803,
									"end": 9880,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9886,
									"end": 10004,
									"name": "tag",
									"source": 1,
									"value": "107"
								},
								{
									"begin": 9886,
									"end": 10004,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9973,
									"end": 9997,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "236"
								},
								{
									"begin": 9991,
									"end": 9996,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 9973,
									"end": 9997,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "106"
								},
								{
									"begin": 9973,
									"end": 9997,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9973,
									"end": 9997,
									"name": "tag",
									"source": 1,
									"value": "236"
								},
								{
									"begin": 9973,
									"end": 9997,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9968,
									"end": 9971,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9961,
									"end": 9998,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 9886,
									"end": 10004,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9886,
									"end": 10004,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9886,
									"end": 10004,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10010,
									"end": 10128,
									"name": "tag",
									"source": 1,
									"value": "108"
								},
								{
									"begin": 10010,
									"end": 10128,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10097,
									"end": 10121,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "238"
								},
								{
									"begin": 10115,
									"end": 10120,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 10097,
									"end": 10121,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 10097,
									"end": 10121,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10097,
									"end": 10121,
									"name": "tag",
									"source": 1,
									"value": "238"
								},
								{
									"begin": 10097,
									"end": 10121,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10092,
									"end": 10095,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 10085,
									"end": 10122,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 10010,
									"end": 10128,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10010,
									"end": 10128,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10010,
									"end": 10128,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10134,
									"end": 10798,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 10134,
									"end": 10798,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10339,
									"end": 10343,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 10377,
									"end": 10380,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 10366,
									"end": 10375,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 10362,
									"end": 10381,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10354,
									"end": 10381,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 10354,
									"end": 10381,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10391,
									"end": 10462,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "240"
								},
								{
									"begin": 10459,
									"end": 10460,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 10448,
									"end": 10457,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 10444,
									"end": 10461,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10435,
									"end": 10441,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 10391,
									"end": 10462,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "107"
								},
								{
									"begin": 10391,
									"end": 10462,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10391,
									"end": 10462,
									"name": "tag",
									"source": 1,
									"value": "240"
								},
								{
									"begin": 10391,
									"end": 10462,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10472,
									"end": 10544,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "241"
								},
								{
									"begin": 10540,
									"end": 10542,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 10529,
									"end": 10538,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 10525,
									"end": 10543,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10516,
									"end": 10522,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 10472,
									"end": 10544,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "107"
								},
								{
									"begin": 10472,
									"end": 10544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10472,
									"end": 10544,
									"name": "tag",
									"source": 1,
									"value": "241"
								},
								{
									"begin": 10472,
									"end": 10544,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10554,
									"end": 10626,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "242"
								},
								{
									"begin": 10622,
									"end": 10624,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 10611,
									"end": 10620,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 10607,
									"end": 10625,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10598,
									"end": 10604,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 10554,
									"end": 10626,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "107"
								},
								{
									"begin": 10554,
									"end": 10626,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10554,
									"end": 10626,
									"name": "tag",
									"source": 1,
									"value": "242"
								},
								{
									"begin": 10554,
									"end": 10626,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10636,
									"end": 10708,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "243"
								},
								{
									"begin": 10704,
									"end": 10706,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 10693,
									"end": 10702,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 10689,
									"end": 10707,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10680,
									"end": 10686,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 10636,
									"end": 10708,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "108"
								},
								{
									"begin": 10636,
									"end": 10708,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10636,
									"end": 10708,
									"name": "tag",
									"source": 1,
									"value": "243"
								},
								{
									"begin": 10636,
									"end": 10708,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10718,
									"end": 10791,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "244"
								},
								{
									"begin": 10786,
									"end": 10789,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 10775,
									"end": 10784,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 10771,
									"end": 10790,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10762,
									"end": 10768,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 10718,
									"end": 10791,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 10718,
									"end": 10791,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10718,
									"end": 10791,
									"name": "tag",
									"source": 1,
									"value": "244"
								},
								{
									"begin": 10718,
									"end": 10791,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10134,
									"end": 10798,
									"name": "SWAP7",
									"source": 1
								},
								{
									"begin": 10134,
									"end": 10798,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 10134,
									"end": 10798,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10134,
									"end": 10798,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10134,
									"end": 10798,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10134,
									"end": 10798,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10134,
									"end": 10798,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10134,
									"end": 10798,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10134,
									"end": 10798,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10804,
									"end": 10973,
									"name": "tag",
									"source": 1,
									"value": "109"
								},
								{
									"begin": 10804,
									"end": 10973,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10888,
									"end": 10899,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 10922,
									"end": 10928,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 10917,
									"end": 10920,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 10910,
									"end": 10929,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 10962,
									"end": 10966,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 10957,
									"end": 10960,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 10953,
									"end": 10967,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10938,
									"end": 10967,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 10938,
									"end": 10967,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10804,
									"end": 10973,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 10804,
									"end": 10973,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 10804,
									"end": 10973,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10804,
									"end": 10973,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10804,
									"end": 10973,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10979,
									"end": 11118,
									"name": "tag",
									"source": 1,
									"value": "110"
								},
								{
									"begin": 10979,
									"end": 11118,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11068,
									"end": 11074,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 11063,
									"end": 11066,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 11058,
									"end": 11061,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 11052,
									"end": 11075,
									"name": "MCOPY",
									"source": 1
								},
								{
									"begin": 11109,
									"end": 11110,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 11100,
									"end": 11106,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 11095,
									"end": 11098,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 11091,
									"end": 11107,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 11084,
									"end": 11111,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 10979,
									"end": 11118,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10979,
									"end": 11118,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10979,
									"end": 11118,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10979,
									"end": 11118,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11124,
									"end": 11226,
									"name": "tag",
									"source": 1,
									"value": "111"
								},
								{
									"begin": 11124,
									"end": 11226,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11165,
									"end": 11171,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 11216,
									"end": 11218,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 11212,
									"end": 11219,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 11207,
									"end": 11209,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 11200,
									"end": 11205,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 11196,
									"end": 11210,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 11192,
									"end": 11220,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 11182,
									"end": 11220,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 11182,
									"end": 11220,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11124,
									"end": 11226,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 11124,
									"end": 11226,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 11124,
									"end": 11226,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11124,
									"end": 11226,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11232,
									"end": 11609,
									"name": "tag",
									"source": 1,
									"value": "112"
								},
								{
									"begin": 11232,
									"end": 11609,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11320,
									"end": 11323,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 11348,
									"end": 11387,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "249"
								},
								{
									"begin": 11381,
									"end": 11386,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 11348,
									"end": 11387,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 11348,
									"end": 11387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11348,
									"end": 11387,
									"name": "tag",
									"source": 1,
									"value": "249"
								},
								{
									"begin": 11348,
									"end": 11387,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11403,
									"end": 11474,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "250"
								},
								{
									"begin": 11467,
									"end": 11473,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 11462,
									"end": 11465,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 11403,
									"end": 11474,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "109"
								},
								{
									"begin": 11403,
									"end": 11474,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11403,
									"end": 11474,
									"name": "tag",
									"source": 1,
									"value": "250"
								},
								{
									"begin": 11403,
									"end": 11474,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11396,
									"end": 11474,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 11396,
									"end": 11474,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11483,
									"end": 11548,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "251"
								},
								{
									"begin": 11541,
									"end": 11547,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 11536,
									"end": 11539,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 11529,
									"end": 11533,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 11522,
									"end": 11527,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 11518,
									"end": 11534,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 11483,
									"end": 11548,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "110"
								},
								{
									"begin": 11483,
									"end": 11548,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11483,
									"end": 11548,
									"name": "tag",
									"source": 1,
									"value": "251"
								},
								{
									"begin": 11483,
									"end": 11548,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11573,
									"end": 11602,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "252"
								},
								{
									"begin": 11595,
									"end": 11601,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 11573,
									"end": 11602,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "111"
								},
								{
									"begin": 11573,
									"end": 11602,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11573,
									"end": 11602,
									"name": "tag",
									"source": 1,
									"value": "252"
								},
								{
									"begin": 11573,
									"end": 11602,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11568,
									"end": 11571,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 11564,
									"end": 11603,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 11557,
									"end": 11603,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 11557,
									"end": 11603,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11324,
									"end": 11609,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11232,
									"end": 11609,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 11232,
									"end": 11609,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 11232,
									"end": 11609,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11232,
									"end": 11609,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11232,
									"end": 11609,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11615,
									"end": 11928,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 11615,
									"end": 11928,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11728,
									"end": 11732,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 11766,
									"end": 11768,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 11755,
									"end": 11764,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 11751,
									"end": 11769,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 11743,
									"end": 11769,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 11743,
									"end": 11769,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11815,
									"end": 11824,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 11809,
									"end": 11813,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 11805,
									"end": 11825,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 11801,
									"end": 11802,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 11790,
									"end": 11799,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 11786,
									"end": 11803,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 11779,
									"end": 11826,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 11843,
									"end": 11921,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "254"
								},
								{
									"begin": 11916,
									"end": 11920,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 11907,
									"end": 11913,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 11843,
									"end": 11921,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "112"
								},
								{
									"begin": 11843,
									"end": 11921,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11843,
									"end": 11921,
									"name": "tag",
									"source": 1,
									"value": "254"
								},
								{
									"begin": 11843,
									"end": 11921,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11835,
									"end": 11921,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 11835,
									"end": 11921,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11615,
									"end": 11928,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 11615,
									"end": 11928,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 11615,
									"end": 11928,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11615,
									"end": 11928,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11615,
									"end": 11928,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11934,
									"end": 12032,
									"name": "tag",
									"source": 1,
									"value": "113"
								},
								{
									"begin": 11934,
									"end": 12032,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11985,
									"end": 11991,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 12019,
									"end": 12024,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 12013,
									"end": 12025,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 12003,
									"end": 12025,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 12003,
									"end": 12025,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11934,
									"end": 12032,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 11934,
									"end": 12032,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 11934,
									"end": 12032,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11934,
									"end": 12032,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 12038,
									"end": 12154,
									"name": "tag",
									"source": 1,
									"value": "114"
								},
								{
									"begin": 12038,
									"end": 12154,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 12089,
									"end": 12093,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 12112,
									"end": 12115,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 12104,
									"end": 12115,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 12104,
									"end": 12115,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12142,
									"end": 12146,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 12137,
									"end": 12140,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 12133,
									"end": 12147,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 12125,
									"end": 12147,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 12125,
									"end": 12147,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12038,
									"end": 12154,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 12038,
									"end": 12154,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 12038,
									"end": 12154,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12038,
									"end": 12154,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 12160,
									"end": 12314,
									"name": "tag",
									"source": 1,
									"value": "115"
								},
								{
									"begin": 12160,
									"end": 12314,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 12203,
									"end": 12214,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 12239,
									"end": 12268,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "258"
								},
								{
									"begin": 12263,
									"end": 12266,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 12257,
									"end": 12267,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 12239,
									"end": 12268,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "106"
								},
								{
									"begin": 12239,
									"end": 12268,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 12239,
									"end": 12268,
									"name": "tag",
									"source": 1,
									"value": "258"
								},
								{
									"begin": 12239,
									"end": 12268,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 12302,
									"end": 12307,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 12278,
									"end": 12307,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 12278,
									"end": 12307,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12215,
									"end": 12314,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12160,
									"end": 12314,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 12160,
									"end": 12314,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 12160,
									"end": 12314,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12160,
									"end": 12314,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 12320,
									"end": 12914,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 12320,
									"end": 12914,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 12404,
									"end": 12409,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 12435,
									"end": 12473,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "260"
								},
								{
									"begin": 12467,
									"end": 12472,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 12435,
									"end": 12473,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "113"
								},
								{
									"begin": 12435,
									"end": 12473,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 12435,
									"end": 12473,
									"name": "tag",
									"source": 1,
									"value": "260"
								},
								{
									"begin": 12435,
									"end": 12473,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 12498,
									"end": 12503,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 12525,
									"end": 12565,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "261"
								},
								{
									"begin": 12559,
									"end": 12564,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 12525,
									"end": 12565,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "114"
								},
								{
									"begin": 12525,
									"end": 12565,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 12525,
									"end": 12565,
									"name": "tag",
									"source": 1,
									"value": "261"
								},
								{
									"begin": 12525,
									"end": 12565,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 12513,
									"end": 12565,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 12513,
									"end": 12565,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12584,
									"end": 12619,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "262"
								},
								{
									"begin": 12610,
									"end": 12618,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 12584,
									"end": 12619,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "115"
								},
								{
									"begin": 12584,
									"end": 12619,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 12584,
									"end": 12619,
									"name": "tag",
									"source": 1,
									"value": "262"
								},
								{
									"begin": 12584,
									"end": 12619,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 12575,
									"end": 12619,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 12575,
									"end": 12619,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12643,
									"end": 12645,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 12635,
									"end": 12641,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 12632,
									"end": 12646,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 12629,
									"end": 12907,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 12629,
									"end": 12907,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "263"
								},
								{
									"begin": 12629,
									"end": 12907,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 12714,
									"end": 12883,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "264"
								},
								{
									"begin": 12799,
									"end": 12865,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 12769,
									"end": 12775,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 12765,
									"end": 12767,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 12761,
									"end": 12776,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 12758,
									"end": 12759,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 12754,
									"end": 12777,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 12714,
									"end": 12883,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 12714,
									"end": 12883,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 12714,
									"end": 12883,
									"name": "tag",
									"source": 1,
									"value": "264"
								},
								{
									"begin": 12714,
									"end": 12883,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 12691,
									"end": 12696,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 12670,
									"end": 12897,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 12661,
									"end": 12897,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 12661,
									"end": 12897,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12629,
									"end": 12907,
									"name": "tag",
									"source": 1,
									"value": "263"
								},
								{
									"begin": 12629,
									"end": 12907,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 12410,
									"end": 12914,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12410,
									"end": 12914,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12320,
									"end": 12914,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 12320,
									"end": 12914,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 12320,
									"end": 12914,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12320,
									"end": 12914,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 12920,
									"end": 13111,
									"name": "tag",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 12920,
									"end": 13111,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 12960,
									"end": 12963,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 12979,
									"end": 12999,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "266"
								},
								{
									"begin": 12997,
									"end": 12998,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 12979,
									"end": 12999,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 12979,
									"end": 12999,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 12979,
									"end": 12999,
									"name": "tag",
									"source": 1,
									"value": "266"
								},
								{
									"begin": 12979,
									"end": 12999,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 12974,
									"end": 12999,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 12974,
									"end": 12999,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13013,
									"end": 13033,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "267"
								},
								{
									"begin": 13031,
									"end": 13032,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 13013,
									"end": 13033,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 13013,
									"end": 13033,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 13013,
									"end": 13033,
									"name": "tag",
									"source": 1,
									"value": "267"
								},
								{
									"begin": 13013,
									"end": 13033,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13008,
									"end": 13033,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 13008,
									"end": 13033,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13056,
									"end": 13057,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 13053,
									"end": 13054,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 13049,
									"end": 13058,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 13042,
									"end": 13058,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 13042,
									"end": 13058,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13077,
									"end": 13080,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 13074,
									"end": 13075,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 13071,
									"end": 13081,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 13068,
									"end": 13104,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 13068,
									"end": 13104,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "268"
								},
								{
									"begin": 13068,
									"end": 13104,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 13084,
									"end": 13102,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "269"
								},
								{
									"begin": 13084,
									"end": 13102,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 13084,
									"end": 13102,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 13084,
									"end": 13102,
									"name": "tag",
									"source": 1,
									"value": "269"
								},
								{
									"begin": 13084,
									"end": 13102,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13068,
									"end": 13104,
									"name": "tag",
									"source": 1,
									"value": "268"
								},
								{
									"begin": 13068,
									"end": 13104,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 12920,
									"end": 13111,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 12920,
									"end": 13111,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 12920,
									"end": 13111,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12920,
									"end": 13111,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12920,
									"end": 13111,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 13117,
									"end": 13559,
									"name": "tag",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 13117,
									"end": 13559,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13266,
									"end": 13270,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 13304,
									"end": 13306,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 13293,
									"end": 13302,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 13289,
									"end": 13307,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 13281,
									"end": 13307,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 13281,
									"end": 13307,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13317,
									"end": 13388,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "271"
								},
								{
									"begin": 13385,
									"end": 13386,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 13374,
									"end": 13383,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 13370,
									"end": 13387,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 13361,
									"end": 13367,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 13317,
									"end": 13388,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 13317,
									"end": 13388,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 13317,
									"end": 13388,
									"name": "tag",
									"source": 1,
									"value": "271"
								},
								{
									"begin": 13317,
									"end": 13388,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13398,
									"end": 13470,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "272"
								},
								{
									"begin": 13466,
									"end": 13468,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 13455,
									"end": 13464,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 13451,
									"end": 13469,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 13442,
									"end": 13448,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 13398,
									"end": 13470,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "108"
								},
								{
									"begin": 13398,
									"end": 13470,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 13398,
									"end": 13470,
									"name": "tag",
									"source": 1,
									"value": "272"
								},
								{
									"begin": 13398,
									"end": 13470,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13480,
									"end": 13552,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "273"
								},
								{
									"begin": 13548,
									"end": 13550,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 13537,
									"end": 13546,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 13533,
									"end": 13551,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 13524,
									"end": 13530,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 13480,
									"end": 13552,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "108"
								},
								{
									"begin": 13480,
									"end": 13552,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 13480,
									"end": 13552,
									"name": "tag",
									"source": 1,
									"value": "273"
								},
								{
									"begin": 13480,
									"end": 13552,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13117,
									"end": 13559,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 13117,
									"end": 13559,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 13117,
									"end": 13559,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13117,
									"end": 13559,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13117,
									"end": 13559,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13117,
									"end": 13559,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13117,
									"end": 13559,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 13565,
									"end": 13787,
									"name": "tag",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 13565,
									"end": 13787,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13658,
									"end": 13662,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 13696,
									"end": 13698,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 13685,
									"end": 13694,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 13681,
									"end": 13699,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 13673,
									"end": 13699,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 13673,
									"end": 13699,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13709,
									"end": 13780,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "275"
								},
								{
									"begin": 13777,
									"end": 13778,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 13766,
									"end": 13775,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 13762,
									"end": 13779,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 13753,
									"end": 13759,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 13709,
									"end": 13780,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "108"
								},
								{
									"begin": 13709,
									"end": 13780,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 13709,
									"end": 13780,
									"name": "tag",
									"source": 1,
									"value": "275"
								},
								{
									"begin": 13709,
									"end": 13780,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13565,
									"end": 13787,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 13565,
									"end": 13787,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 13565,
									"end": 13787,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13565,
									"end": 13787,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13565,
									"end": 13787,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 79675,
									"end": 80039,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 79675,
									"end": 80039,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 79675,
									"end": 80039,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 79675,
									"end": 80039,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 79675,
									"end": 80039,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 79675,
									"end": 80039,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 79675,
									"end": 80039,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 79675,
									"end": 80039,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 79675,
									"end": 80039,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 79675,
									"end": 80039,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 79675,
									"end": 80039,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 79675,
									"end": 80039,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 79675,
									"end": 80039,
									"name": "PUSH",
									"source": 0,
									"value": "120"
								},
								{
									"begin": 79675,
									"end": 80039,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 79675,
									"end": 80039,
									"name": "PUSH",
									"source": 0,
									"value": "140"
								},
								{
									"begin": 79675,
									"end": 80039,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 79675,
									"end": 80039,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 79675,
									"end": 80039,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 79675,
									"end": 80039,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 79675,
									"end": 80039,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 79675,
									"end": 80039,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 79675,
									"end": 80039,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "3150"
								},
								{
									"begin": 79675,
									"end": 80039,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 79675,
									"end": 80039,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "3147"
								},
								{
									"begin": 79675,
									"end": 80039,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 79675,
									"end": 80039,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "3144"
								},
								{
									"begin": 79675,
									"end": 80039,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 79675,
									"end": 80039,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "3142"
								},
								{
									"begin": 79675,
									"end": 80039,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 79675,
									"end": 80039,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "3140"
								},
								{
									"begin": 79675,
									"end": 80039,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 79675,
									"end": 80039,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "3138"
								},
								{
									"begin": 79675,
									"end": 80039,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 79675,
									"end": 80039,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "3136"
								},
								{
									"begin": 79675,
									"end": 80039,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 79675,
									"end": 80039,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 79675,
									"end": 80039,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206de2e20912dca0d813af96bcecfbb007a1153c71d7f757426bd99304dea4325764736f6c634300081a0033",
									".code": [
										{
											"begin": 79675,
											"end": 80039,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "PUSH",
											"source": 0,
											"value": "D505ACCF"
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "PUSH",
											"source": 0,
											"value": "7ECEBE00"
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "PUSH",
											"source": 0,
											"value": "84B0196E"
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "PUSH",
											"source": 0,
											"value": "3644E515"
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79675,
											"end": 80039,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12966,
											"end": 13055,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12966,
											"end": 13055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12966,
											"end": 13055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 12966,
											"end": 13055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 12966,
											"end": 13055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12966,
											"end": 13055,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 12966,
											"end": 13055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12966,
											"end": 13055,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12966,
											"end": 13055,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12966,
											"end": 13055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 12966,
											"end": 13055,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12966,
											"end": 13055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12966,
											"end": 13055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 12966,
											"end": 13055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12966,
											"end": 13055,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 12966,
											"end": 13055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12966,
											"end": 13055,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12966,
											"end": 13055,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12966,
											"end": 13055,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12966,
											"end": 13055,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12966,
											"end": 13055,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12966,
											"end": 13055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12966,
											"end": 13055,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 15185,
											"end": 15371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 15185,
											"end": 15371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 15185,
											"end": 15371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14036,
											"end": 14133,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 14036,
											"end": 14133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14036,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 14036,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 14036,
											"end": 14133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14036,
											"end": 14133,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 14036,
											"end": 14133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14036,
											"end": 14133,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14036,
											"end": 14133,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14036,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 14036,
											"end": 14133,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14036,
											"end": 14133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14036,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 14036,
											"end": 14133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14036,
											"end": 14133,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 14036,
											"end": 14133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14036,
											"end": 14133,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14036,
											"end": 14133,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14036,
											"end": 14133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14036,
											"end": 14133,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14036,
											"end": 14133,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14036,
											"end": 14133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14036,
											"end": 14133,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 15931,
											"end": 16175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15931,
											"end": 16175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 15931,
											"end": 16175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13894,
											"end": 13976,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 13894,
											"end": 13976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13894,
											"end": 13976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 13894,
											"end": 13976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 13894,
											"end": 13976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13894,
											"end": 13976,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 13894,
											"end": 13976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13894,
											"end": 13976,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13894,
											"end": 13976,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13894,
											"end": 13976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 13894,
											"end": 13976,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13894,
											"end": 13976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13894,
											"end": 13976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 13894,
											"end": 13976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13894,
											"end": 13976,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 13894,
											"end": 13976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13894,
											"end": 13976,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13894,
											"end": 13976,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13894,
											"end": 13976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13894,
											"end": 13976,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13894,
											"end": 13976,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13894,
											"end": 13976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13894,
											"end": 13976,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 79395,
											"end": 79507,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 79395,
											"end": 79507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79395,
											"end": 79507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 79395,
											"end": 79507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 79395,
											"end": 79507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79395,
											"end": 79507,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 79395,
											"end": 79507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79395,
											"end": 79507,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 79395,
											"end": 79507,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 79395,
											"end": 79507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 79395,
											"end": 79507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 79395,
											"end": 79507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79395,
											"end": 79507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 79395,
											"end": 79507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79395,
											"end": 79507,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 79395,
											"end": 79507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79395,
											"end": 79507,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 79395,
											"end": 79507,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 79395,
											"end": 79507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79395,
											"end": 79507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 79395,
											"end": 79507,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 79395,
											"end": 79507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79395,
											"end": 79507,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 79944,
											"end": 80037,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 79944,
											"end": 80037,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79944,
											"end": 80037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 79944,
											"end": 80037,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 79944,
											"end": 80037,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79944,
											"end": 80037,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 79944,
											"end": 80037,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 79944,
											"end": 80037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 79944,
											"end": 80037,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 79944,
											"end": 80037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79944,
											"end": 80037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 79944,
											"end": 80037,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 79944,
											"end": 80037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79944,
											"end": 80037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 79944,
											"end": 80037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79944,
											"end": 80037,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 79944,
											"end": 80037,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79944,
											"end": 80037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 79944,
											"end": 80037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79944,
											"end": 80037,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 79944,
											"end": 80037,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79944,
											"end": 80037,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 14191,
											"end": 14307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 14191,
											"end": 14307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 14191,
											"end": 14307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 24305,
											"end": 24406,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 24305,
											"end": 24406,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24305,
											"end": 24406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 24305,
											"end": 24406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 24305,
											"end": 24406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24305,
											"end": 24406,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 24305,
											"end": 24406,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24305,
											"end": 24406,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 79145,
											"end": 79288,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 79145,
											"end": 79288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79145,
											"end": 79288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 79145,
											"end": 79288,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 79145,
											"end": 79288,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79145,
											"end": 79288,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 79145,
											"end": 79288,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 79145,
											"end": 79288,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 79145,
											"end": 79288,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 79145,
											"end": 79288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79145,
											"end": 79288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 79145,
											"end": 79288,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 79145,
											"end": 79288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79145,
											"end": 79288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 79145,
											"end": 79288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79145,
											"end": 79288,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 79145,
											"end": 79288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79145,
											"end": 79288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 79145,
											"end": 79288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79145,
											"end": 79288,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 79145,
											"end": 79288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79145,
											"end": 79288,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 79145,
											"end": 79288,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 79145,
											"end": 79288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 79145,
											"end": 79288,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 79145,
											"end": 79288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79145,
											"end": 79288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 79145,
											"end": 79288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79145,
											"end": 79288,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 79145,
											"end": 79288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79145,
											"end": 79288,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 79145,
											"end": 79288,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 79145,
											"end": 79288,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79145,
											"end": 79288,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 79145,
											"end": 79288,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 79145,
											"end": 79288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79145,
											"end": 79288,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 73973,
											"end": 74530,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 73973,
											"end": 74530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 73973,
											"end": 74530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 73973,
											"end": 74530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 73973,
											"end": 74530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 73973,
											"end": 74530,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 73973,
											"end": 74530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 73973,
											"end": 74530,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 73973,
											"end": 74530,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 73973,
											"end": 74530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 73973,
											"end": 74530,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 73973,
											"end": 74530,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 73973,
											"end": 74530,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 73973,
											"end": 74530,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 73973,
											"end": 74530,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 73973,
											"end": 74530,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 73973,
											"end": 74530,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 73973,
											"end": 74530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 73973,
											"end": 74530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 73973,
											"end": 74530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 73973,
											"end": 74530,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 73973,
											"end": 74530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 73973,
											"end": 74530,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 73973,
											"end": 74530,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 73973,
											"end": 74530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 73973,
											"end": 74530,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 73973,
											"end": 74530,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 73973,
											"end": 74530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 73973,
											"end": 74530,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 23650,
											"end": 23735,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 23650,
											"end": 23735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23650,
											"end": 23735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 23650,
											"end": 23735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 23650,
											"end": 23735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23650,
											"end": 23735,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 23650,
											"end": 23735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23650,
											"end": 23735,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23650,
											"end": 23735,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23650,
											"end": 23735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 23650,
											"end": 23735,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23650,
											"end": 23735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23650,
											"end": 23735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 23650,
											"end": 23735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23650,
											"end": 23735,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 23650,
											"end": 23735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23650,
											"end": 23735,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23650,
											"end": 23735,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23650,
											"end": 23735,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23650,
											"end": 23735,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23650,
											"end": 23735,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23650,
											"end": 23735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23650,
											"end": 23735,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13168,
											"end": 13261,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 13168,
											"end": 13261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13168,
											"end": 13261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 13168,
											"end": 13261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 13168,
											"end": 13261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13168,
											"end": 13261,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 13168,
											"end": 13261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13168,
											"end": 13261,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13168,
											"end": 13261,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13168,
											"end": 13261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 13168,
											"end": 13261,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13168,
											"end": 13261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13168,
											"end": 13261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 13168,
											"end": 13261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13168,
											"end": 13261,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 13168,
											"end": 13261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13168,
											"end": 13261,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13168,
											"end": 13261,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13168,
											"end": 13261,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13168,
											"end": 13261,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13168,
											"end": 13261,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13168,
											"end": 13261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13168,
											"end": 13261,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 14502,
											"end": 14680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 14502,
											"end": 14680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 14502,
											"end": 14680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 78419,
											"end": 79091,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 78419,
											"end": 79091,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78419,
											"end": 79091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 78419,
											"end": 79091,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 78419,
											"end": 79091,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78419,
											"end": 79091,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 78419,
											"end": 79091,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 78419,
											"end": 79091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78419,
											"end": 79091,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78419,
											"end": 79091,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78419,
											"end": 79091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 78419,
											"end": 79091,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 78419,
											"end": 79091,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78419,
											"end": 79091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 78419,
											"end": 79091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78419,
											"end": 79091,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 78419,
											"end": 79091,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78419,
											"end": 79091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 78419,
											"end": 79091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78419,
											"end": 79091,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 78419,
											"end": 79091,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78419,
											"end": 79091,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 14738,
											"end": 14878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 14738,
											"end": 14878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 14738,
											"end": 14878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 24555,
											"end": 24770,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 24555,
											"end": 24770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24555,
											"end": 24770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 24555,
											"end": 24770,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24555,
											"end": 24770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24555,
											"end": 24770,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24555,
											"end": 24770,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24555,
											"end": 24770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24555,
											"end": 24770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24555,
											"end": 24770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24555,
											"end": 24770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 24555,
											"end": 24770,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24555,
											"end": 24770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24555,
											"end": 24770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 24555,
											"end": 24770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24555,
											"end": 24770,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 24555,
											"end": 24770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24555,
											"end": 24770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 24555,
											"end": 24770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24555,
											"end": 24770,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 24555,
											"end": 24770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24555,
											"end": 24770,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 12966,
											"end": 13055,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 12966,
											"end": 13055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13011,
											"end": 13024,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13043,
											"end": 13048,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 13036,
											"end": 13048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 13036,
											"end": 13048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13048,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12966,
											"end": 13055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12966,
											"end": 13055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15258,
											"end": 15262,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15274,
											"end": 15287,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15290,
											"end": 15302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 15290,
											"end": 15300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 15290,
											"end": 15302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15290,
											"end": 15302,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 15290,
											"end": 15302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15274,
											"end": 15302,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15274,
											"end": 15302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15312,
											"end": 15343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 15321,
											"end": 15326,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15328,
											"end": 15335,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15337,
											"end": 15342,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15312,
											"end": 15320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 15312,
											"end": 15343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15312,
											"end": 15343,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 15312,
											"end": 15343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15360,
											"end": 15364,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15353,
											"end": 15364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15353,
											"end": 15364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15353,
											"end": 15364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15371,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15185,
											"end": 15371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14036,
											"end": 14133,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 14036,
											"end": 14133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14088,
											"end": 14095,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14114,
											"end": 14126,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14114,
											"end": 14126,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14107,
											"end": 14126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14107,
											"end": 14126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14036,
											"end": 14133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14036,
											"end": 14133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16018,
											"end": 16022,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16034,
											"end": 16049,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16052,
											"end": 16064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 16052,
											"end": 16062,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 16052,
											"end": 16064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16052,
											"end": 16064,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 16052,
											"end": 16064,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16034,
											"end": 16064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16034,
											"end": 16064,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16074,
											"end": 16111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 16090,
											"end": 16094,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16096,
											"end": 16103,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16105,
											"end": 16110,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16074,
											"end": 16089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 16074,
											"end": 16111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16074,
											"end": 16111,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 16074,
											"end": 16111,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16121,
											"end": 16147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 16131,
											"end": 16135,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16137,
											"end": 16139,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16141,
											"end": 16146,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16121,
											"end": 16130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 16121,
											"end": 16147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16121,
											"end": 16147,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 16121,
											"end": 16147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16164,
											"end": 16168,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16157,
											"end": 16168,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16157,
											"end": 16168,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16157,
											"end": 16168,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15931,
											"end": 16175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13894,
											"end": 13976,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 13894,
											"end": 13976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13943,
											"end": 13948,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13967,
											"end": 13969,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 13960,
											"end": 13969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13960,
											"end": 13969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13894,
											"end": 13976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13894,
											"end": 13976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79395,
											"end": 79507,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 79395,
											"end": 79507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79454,
											"end": 79461,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 79480,
											"end": 79500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 79480,
											"end": 79498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 79480,
											"end": 79500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79480,
											"end": 79500,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 79480,
											"end": 79500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79473,
											"end": 79500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79473,
											"end": 79500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 79395,
											"end": 79507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79395,
											"end": 79507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79944,
											"end": 80037,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 79944,
											"end": 80037,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23543,
											"end": 23556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 23543,
											"end": 23554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 23543,
											"end": 23556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23543,
											"end": 23556,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 23543,
											"end": 23556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80013,
											"end": 80030,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 80019,
											"end": 80021,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 80023,
											"end": 80029,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 80013,
											"end": 80018,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 80013,
											"end": 80030,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 80013,
											"end": 80030,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 80013,
											"end": 80030,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79944,
											"end": 80037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 79944,
											"end": 80037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 79944,
											"end": 80037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14256,
											"end": 14263,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14282,
											"end": 14291,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14282,
											"end": 14300,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14292,
											"end": 14299,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14282,
											"end": 14300,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14282,
											"end": 14300,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14282,
											"end": 14300,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14282,
											"end": 14300,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14282,
											"end": 14300,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14282,
											"end": 14300,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14282,
											"end": 14300,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14282,
											"end": 14300,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14282,
											"end": 14300,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14282,
											"end": 14300,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14282,
											"end": 14300,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14282,
											"end": 14300,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14282,
											"end": 14300,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14282,
											"end": 14300,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14282,
											"end": 14300,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14282,
											"end": 14300,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14275,
											"end": 14300,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14275,
											"end": 14300,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14191,
											"end": 14307,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14191,
											"end": 14307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24305,
											"end": 24406,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 24305,
											"end": 24406,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23543,
											"end": 23556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 23543,
											"end": 23554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 23543,
											"end": 23556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23543,
											"end": 23556,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 23543,
											"end": 23556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24369,
											"end": 24399,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 24396,
											"end": 24397,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24369,
											"end": 24387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 24369,
											"end": 24399,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24369,
											"end": 24399,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 24369,
											"end": 24399,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24305,
											"end": 24406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79145,
											"end": 79288,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 79145,
											"end": 79288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79236,
											"end": 79243,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 79262,
											"end": 79281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 79275,
											"end": 79280,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 79262,
											"end": 79274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 79262,
											"end": 79281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79262,
											"end": 79281,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 79262,
											"end": 79281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79255,
											"end": 79281,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79255,
											"end": 79281,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 79145,
											"end": 79288,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 79145,
											"end": 79288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79145,
											"end": 79288,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 79145,
											"end": 79288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 73973,
											"end": 74530,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 73973,
											"end": 74530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74071,
											"end": 74084,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74098,
											"end": 74116,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 74130,
											"end": 74151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74165,
											"end": 74180,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74194,
											"end": 74219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74233,
											"end": 74245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74259,
											"end": 74286,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 74362,
											"end": 74375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 74362,
											"end": 74373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 74362,
											"end": 74375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 74362,
											"end": 74375,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 74362,
											"end": 74375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74389,
											"end": 74405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 74389,
											"end": 74403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 74389,
											"end": 74405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 74389,
											"end": 74405,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 74389,
											"end": 74405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74419,
											"end": 74432,
											"name": "CHAINID",
											"source": 0
										},
										{
											"begin": 74454,
											"end": 74458,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 74481,
											"end": 74482,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74473,
											"end": 74483,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74473,
											"end": 74483,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 74511,
											"end": 74512,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74497,
											"end": 74513,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 74497,
											"end": 74513,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 74497,
											"end": 74513,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 74497,
											"end": 74513,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 74497,
											"end": 74513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 74497,
											"end": 74513,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 74497,
											"end": 74513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 74497,
											"end": 74513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 74497,
											"end": 74513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 74497,
											"end": 74513,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 74497,
											"end": 74513,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74497,
											"end": 74513,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 74497,
											"end": 74513,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74497,
											"end": 74513,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 74497,
											"end": 74513,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 74497,
											"end": 74513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74497,
											"end": 74513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74497,
											"end": 74513,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 74497,
											"end": 74513,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 74497,
											"end": 74513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74497,
											"end": 74513,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 74497,
											"end": 74513,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 74497,
											"end": 74513,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 74497,
											"end": 74513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 74497,
											"end": 74513,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 74497,
											"end": 74513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 74497,
											"end": 74513,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 74497,
											"end": 74513,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 74497,
											"end": 74513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74497,
											"end": 74513,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 74497,
											"end": 74513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 74497,
											"end": 74513,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 74497,
											"end": 74513,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 74497,
											"end": 74513,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 74497,
											"end": 74513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 74497,
											"end": 74513,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 74497,
											"end": 74513,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 74497,
											"end": 74513,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 74497,
											"end": 74513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74497,
											"end": 74513,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 74497,
											"end": 74513,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 74497,
											"end": 74513,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 74497,
											"end": 74513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74497,
											"end": 74513,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 74497,
											"end": 74513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 74497,
											"end": 74513,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 74497,
											"end": 74513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 74497,
											"end": 74513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 74497,
											"end": 74513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74497,
											"end": 74513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 74497,
											"end": 74513,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 74497,
											"end": 74513,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74497,
											"end": 74513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 74311,
											"end": 74523,
											"name": "PUSH",
											"source": 0,
											"value": "F00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 74311,
											"end": 74523,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 74311,
											"end": 74523,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 74311,
											"end": 74523,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 74311,
											"end": 74523,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 74311,
											"end": 74523,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 74311,
											"end": 74523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74311,
											"end": 74523,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 74311,
											"end": 74523,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 74311,
											"end": 74523,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 74311,
											"end": 74523,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 74311,
											"end": 74523,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 74311,
											"end": 74523,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 74311,
											"end": 74523,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 74311,
											"end": 74523,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 74311,
											"end": 74523,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 74311,
											"end": 74523,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 74311,
											"end": 74523,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 74311,
											"end": 74523,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 74311,
											"end": 74523,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 74311,
											"end": 74523,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 73973,
											"end": 74530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 73973,
											"end": 74530,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 73973,
											"end": 74530,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 73973,
											"end": 74530,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 73973,
											"end": 74530,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 73973,
											"end": 74530,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 73973,
											"end": 74530,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 73973,
											"end": 74530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23650,
											"end": 23735,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 23650,
											"end": 23735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23696,
											"end": 23703,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23722,
											"end": 23728,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23722,
											"end": 23728,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23722,
											"end": 23728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23722,
											"end": 23728,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23722,
											"end": 23728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23722,
											"end": 23728,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23722,
											"end": 23728,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 23722,
											"end": 23728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23722,
											"end": 23728,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23722,
											"end": 23728,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23722,
											"end": 23728,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23715,
											"end": 23728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23715,
											"end": 23728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23650,
											"end": 23735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23650,
											"end": 23735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13168,
											"end": 13261,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 13168,
											"end": 13261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13215,
											"end": 13228,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13247,
											"end": 13254,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 13240,
											"end": 13254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 13240,
											"end": 13254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13168,
											"end": 13261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13168,
											"end": 13261,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14571,
											"end": 14575,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14587,
											"end": 14600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 14603,
											"end": 14613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 14603,
											"end": 14615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14615,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 14603,
											"end": 14615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14587,
											"end": 14615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14587,
											"end": 14615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14625,
											"end": 14652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 14635,
											"end": 14640,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14642,
											"end": 14644,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14646,
											"end": 14651,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14625,
											"end": 14634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 14625,
											"end": 14652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14625,
											"end": 14652,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 14625,
											"end": 14652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14673,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14662,
											"end": 14673,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14662,
											"end": 14673,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14662,
											"end": 14673,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 14680,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 14680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78419,
											"end": 79091,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 78419,
											"end": 79091,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78640,
											"end": 78648,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 78622,
											"end": 78637,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 78622,
											"end": 78648,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 78618,
											"end": 78715,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 78618,
											"end": 78715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 78618,
											"end": 78715,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 78695,
											"end": 78703,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 78671,
											"end": 78704,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78671,
											"end": 78704,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78671,
											"end": 78704,
											"name": "PUSH",
											"source": 0,
											"value": "6279130200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 78671,
											"end": 78704,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78671,
											"end": 78704,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 78671,
											"end": 78704,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 78671,
											"end": 78704,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78671,
											"end": 78704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 78671,
											"end": 78704,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 78671,
											"end": 78704,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78671,
											"end": 78704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 78671,
											"end": 78704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78671,
											"end": 78704,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 78671,
											"end": 78704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78671,
											"end": 78704,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78671,
											"end": 78704,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78671,
											"end": 78704,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78671,
											"end": 78704,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 78671,
											"end": 78704,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 78671,
											"end": 78704,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78671,
											"end": 78704,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 78618,
											"end": 78715,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 78618,
											"end": 78715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78725,
											"end": 78743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77761,
											"end": 77856,
											"name": "PUSH",
											"source": 0,
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 78784,
											"end": 78789,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 78791,
											"end": 78798,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 78800,
											"end": 78805,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 78807,
											"end": 78823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 78817,
											"end": 78822,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 78807,
											"end": 78816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 78807,
											"end": 78823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78807,
											"end": 78823,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 78807,
											"end": 78823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78825,
											"end": 78833,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 78756,
											"end": 78834,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78756,
											"end": 78834,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78756,
											"end": 78834,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 78756,
											"end": 78834,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78756,
											"end": 78834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 78756,
											"end": 78834,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 78756,
											"end": 78834,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 78756,
											"end": 78834,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 78756,
											"end": 78834,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 78756,
											"end": 78834,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 78756,
											"end": 78834,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 78756,
											"end": 78834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78756,
											"end": 78834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 78756,
											"end": 78834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78756,
											"end": 78834,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 78756,
											"end": 78834,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78756,
											"end": 78834,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78756,
											"end": 78834,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78756,
											"end": 78834,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 78756,
											"end": 78834,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78756,
											"end": 78834,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 78756,
											"end": 78834,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 78756,
											"end": 78834,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 78756,
											"end": 78834,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78756,
											"end": 78834,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 78756,
											"end": 78834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78756,
											"end": 78834,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78756,
											"end": 78834,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 78746,
											"end": 78835,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78746,
											"end": 78835,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78746,
											"end": 78835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78746,
											"end": 78835,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 78746,
											"end": 78835,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78746,
											"end": 78835,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 78725,
											"end": 78835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78725,
											"end": 78835,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78846,
											"end": 78858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 78861,
											"end": 78889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 78878,
											"end": 78888,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 78861,
											"end": 78877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 78861,
											"end": 78889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78861,
											"end": 78889,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 78861,
											"end": 78889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78846,
											"end": 78889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78846,
											"end": 78889,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78900,
											"end": 78914,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 78917,
											"end": 78945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 78931,
											"end": 78935,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 78937,
											"end": 78938,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 78940,
											"end": 78941,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 78943,
											"end": 78944,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 78917,
											"end": 78930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 78917,
											"end": 78945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78917,
											"end": 78945,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 78917,
											"end": 78945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78900,
											"end": 78945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78900,
											"end": 78945,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78969,
											"end": 78974,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 78959,
											"end": 78974,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 78959,
											"end": 78974,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 78959,
											"end": 78965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78959,
											"end": 78974,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 78959,
											"end": 78974,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 78959,
											"end": 78974,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 78955,
											"end": 79043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 78955,
											"end": 79043,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79018,
											"end": 79024,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79026,
											"end": 79031,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 78997,
											"end": 79032,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78997,
											"end": 79032,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78997,
											"end": 79032,
											"name": "PUSH",
											"source": 0,
											"value": "4B800E4600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 78997,
											"end": 79032,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78997,
											"end": 79032,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 78997,
											"end": 79032,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 78997,
											"end": 79032,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78997,
											"end": 79032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 78997,
											"end": 79032,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 78997,
											"end": 79032,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 78997,
											"end": 79032,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78997,
											"end": 79032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 78997,
											"end": 79032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78997,
											"end": 79032,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 78997,
											"end": 79032,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78997,
											"end": 79032,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78997,
											"end": 79032,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78997,
											"end": 79032,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78997,
											"end": 79032,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 78997,
											"end": 79032,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 78997,
											"end": 79032,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78997,
											"end": 79032,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 78955,
											"end": 79043,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 78955,
											"end": 79043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79053,
											"end": 79084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 79062,
											"end": 79067,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 79069,
											"end": 79076,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 79078,
											"end": 79083,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 79053,
											"end": 79061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 79053,
											"end": 79084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79053,
											"end": 79084,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 79053,
											"end": 79084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78608,
											"end": 79091,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78608,
											"end": 79091,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78608,
											"end": 79091,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78419,
											"end": 79091,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78419,
											"end": 79091,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78419,
											"end": 79091,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78419,
											"end": 79091,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78419,
											"end": 79091,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78419,
											"end": 79091,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78419,
											"end": 79091,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78419,
											"end": 79091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14818,
											"end": 14825,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14844,
											"end": 14855,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14844,
											"end": 14862,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14856,
											"end": 14861,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14844,
											"end": 14862,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14844,
											"end": 14862,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14844,
											"end": 14862,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14844,
											"end": 14862,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14844,
											"end": 14862,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14844,
											"end": 14862,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14844,
											"end": 14862,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14844,
											"end": 14862,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14844,
											"end": 14862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14844,
											"end": 14862,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14844,
											"end": 14862,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14844,
											"end": 14862,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14844,
											"end": 14862,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14844,
											"end": 14862,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14844,
											"end": 14862,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14844,
											"end": 14871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14863,
											"end": 14870,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14844,
											"end": 14871,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14844,
											"end": 14871,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14844,
											"end": 14871,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14844,
											"end": 14871,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14844,
											"end": 14871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14844,
											"end": 14871,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14844,
											"end": 14871,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14844,
											"end": 14871,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14844,
											"end": 14871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14844,
											"end": 14871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14844,
											"end": 14871,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14844,
											"end": 14871,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14844,
											"end": 14871,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14844,
											"end": 14871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14844,
											"end": 14871,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14844,
											"end": 14871,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14837,
											"end": 14871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14837,
											"end": 14871,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14878,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14738,
											"end": 14878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24555,
											"end": 24770,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 24555,
											"end": 24770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23543,
											"end": 23556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 23543,
											"end": 23554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 23543,
											"end": 23556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23543,
											"end": 23556,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 23543,
											"end": 23556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24659,
											"end": 24660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24639,
											"end": 24661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24639,
											"end": 24661,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24639,
											"end": 24647,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24639,
											"end": 24661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24639,
											"end": 24661,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24639,
											"end": 24661,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24635,
											"end": 24726,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 24635,
											"end": 24726,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24712,
											"end": 24713,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24684,
											"end": 24715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24684,
											"end": 24715,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24684,
											"end": 24715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24684,
											"end": 24715,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24684,
											"end": 24715,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24684,
											"end": 24715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24684,
											"end": 24715,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24684,
											"end": 24715,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 24684,
											"end": 24715,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24684,
											"end": 24715,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24684,
											"end": 24715,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 24684,
											"end": 24715,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24684,
											"end": 24715,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 24684,
											"end": 24715,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24684,
											"end": 24715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24684,
											"end": 24715,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24684,
											"end": 24715,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24684,
											"end": 24715,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24684,
											"end": 24715,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24684,
											"end": 24715,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24684,
											"end": 24715,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24635,
											"end": 24726,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 24635,
											"end": 24726,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24735,
											"end": 24763,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 24754,
											"end": 24762,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24735,
											"end": 24753,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 24735,
											"end": 24763,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24735,
											"end": 24763,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 24735,
											"end": 24763,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24555,
											"end": 24770,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24555,
											"end": 24770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4206,
											"end": 4302,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4206,
											"end": 4302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4259,
											"end": 4266,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4285,
											"end": 4295,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4278,
											"end": 4295,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4278,
											"end": 4295,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4206,
											"end": 4302,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4206,
											"end": 4302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19881,
											"end": 20009,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 19881,
											"end": 20009,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19965,
											"end": 20002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 19974,
											"end": 19979,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19981,
											"end": 19988,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19990,
											"end": 19995,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19997,
											"end": 20001,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19965,
											"end": 19973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 19965,
											"end": 20002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19965,
											"end": 20002,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 19965,
											"end": 20002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19881,
											"end": 20009,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19881,
											"end": 20009,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19881,
											"end": 20009,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19881,
											"end": 20009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 22032,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 21555,
											"end": 22032,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21654,
											"end": 21678,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21681,
											"end": 21706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 21691,
											"end": 21696,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21698,
											"end": 21705,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21681,
											"end": 21690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 21681,
											"end": 21706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21681,
											"end": 21706,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 21681,
											"end": 21706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21654,
											"end": 21706,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21654,
											"end": 21706,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21740,
											"end": 21757,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21720,
											"end": 21736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21720,
											"end": 21757,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21716,
											"end": 22026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 21716,
											"end": 22026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21796,
											"end": 21801,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21777,
											"end": 21793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21777,
											"end": 21801,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21773,
											"end": 21903,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21773,
											"end": 21903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 21773,
											"end": 21903,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21855,
											"end": 21862,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21864,
											"end": 21880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21882,
											"end": 21887,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21828,
											"end": 21888,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21828,
											"end": 21888,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21828,
											"end": 21888,
											"name": "PUSH",
											"source": 0,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21828,
											"end": 21888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21828,
											"end": 21888,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21828,
											"end": 21888,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21828,
											"end": 21888,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21828,
											"end": 21888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 21828,
											"end": 21888,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21828,
											"end": 21888,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21828,
											"end": 21888,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21828,
											"end": 21888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21828,
											"end": 21888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 21828,
											"end": 21888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21828,
											"end": 21888,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 21828,
											"end": 21888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21828,
											"end": 21888,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21828,
											"end": 21888,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21828,
											"end": 21888,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21828,
											"end": 21888,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21828,
											"end": 21888,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21828,
											"end": 21888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21828,
											"end": 21888,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21773,
											"end": 21903,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 21773,
											"end": 21903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21944,
											"end": 22001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 21953,
											"end": 21958,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21960,
											"end": 21967,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21988,
											"end": 21993,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21969,
											"end": 21985,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21969,
											"end": 21993,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21995,
											"end": 22000,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21944,
											"end": 21952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 21944,
											"end": 22001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21944,
											"end": 22001,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 21944,
											"end": 22001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21716,
											"end": 22026,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 21716,
											"end": 22026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21644,
											"end": 22032,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 22032,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 22032,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 22032,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 22032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16548,
											"end": 16848,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 16548,
											"end": 16848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16647,
											"end": 16648,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16631,
											"end": 16649,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16631,
											"end": 16649,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16631,
											"end": 16635,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16631,
											"end": 16649,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16631,
											"end": 16649,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16631,
											"end": 16649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16627,
											"end": 16713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 16627,
											"end": 16713,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16699,
											"end": 16700,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16672,
											"end": 16702,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16672,
											"end": 16702,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16672,
											"end": 16702,
											"name": "PUSH",
											"source": 0,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16672,
											"end": 16702,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16672,
											"end": 16702,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16672,
											"end": 16702,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16672,
											"end": 16702,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16672,
											"end": 16702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 16672,
											"end": 16702,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16672,
											"end": 16702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16672,
											"end": 16702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 16672,
											"end": 16702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16672,
											"end": 16702,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 16672,
											"end": 16702,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16672,
											"end": 16702,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16672,
											"end": 16702,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16672,
											"end": 16702,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16672,
											"end": 16702,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16672,
											"end": 16702,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16672,
											"end": 16702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16672,
											"end": 16702,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16627,
											"end": 16713,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 16627,
											"end": 16713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16740,
											"end": 16741,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16726,
											"end": 16742,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16726,
											"end": 16742,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16726,
											"end": 16728,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16726,
											"end": 16742,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16726,
											"end": 16742,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16726,
											"end": 16742,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16722,
											"end": 16808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 16722,
											"end": 16808,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16794,
											"end": 16795,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16765,
											"end": 16797,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16765,
											"end": 16797,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16765,
											"end": 16797,
											"name": "PUSH",
											"source": 0,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16765,
											"end": 16797,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16765,
											"end": 16797,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16765,
											"end": 16797,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16765,
											"end": 16797,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16765,
											"end": 16797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 16765,
											"end": 16797,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16765,
											"end": 16797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16765,
											"end": 16797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 16765,
											"end": 16797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16765,
											"end": 16797,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 16765,
											"end": 16797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16765,
											"end": 16797,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16765,
											"end": 16797,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16765,
											"end": 16797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16765,
											"end": 16797,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16765,
											"end": 16797,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16765,
											"end": 16797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16765,
											"end": 16797,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16722,
											"end": 16808,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 16722,
											"end": 16808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16817,
											"end": 16841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 16825,
											"end": 16829,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16831,
											"end": 16833,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16835,
											"end": 16840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16817,
											"end": 16824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 16817,
											"end": 16841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16817,
											"end": 16841,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 16817,
											"end": 16841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16548,
											"end": 16848,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16548,
											"end": 16848,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16548,
											"end": 16848,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16548,
											"end": 16848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 72674,
											"end": 72936,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 72674,
											"end": 72936,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72727,
											"end": 72734,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72767,
											"end": 72778,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "3140"
										},
										{
											"begin": 72750,
											"end": 72778,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 72750,
											"end": 72778,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 72758,
											"end": 72762,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 72750,
											"end": 72778,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 72750,
											"end": 72778,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 72750,
											"end": 72778,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 72750,
											"end": 72813,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72750,
											"end": 72813,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 72750,
											"end": 72813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 72750,
											"end": 72813,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72750,
											"end": 72813,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72799,
											"end": 72813,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "3138"
										},
										{
											"begin": 72782,
											"end": 72795,
											"name": "CHAINID",
											"source": 0
										},
										{
											"begin": 72782,
											"end": 72813,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 72750,
											"end": 72813,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 72750,
											"end": 72813,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72746,
											"end": 72930,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 72746,
											"end": 72930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 72746,
											"end": 72930,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72836,
											"end": 72858,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "3136"
										},
										{
											"begin": 72829,
											"end": 72858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72829,
											"end": 72858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72829,
											"end": 72858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 72829,
											"end": 72858,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 72746,
											"end": 72930,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 72746,
											"end": 72930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72896,
											"end": 72919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 72896,
											"end": 72917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 72896,
											"end": 72919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 72896,
											"end": 72919,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 72896,
											"end": 72919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72889,
											"end": 72919,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72889,
											"end": 72919,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72674,
											"end": 72936,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 72674,
											"end": 72936,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72674,
											"end": 72936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72674,
											"end": 72936,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23808,
											"end": 23970,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 23808,
											"end": 23970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23878,
											"end": 23890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 23878,
											"end": 23888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23878,
											"end": 23890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23878,
											"end": 23890,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 23878,
											"end": 23890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23867,
											"end": 23890,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23867,
											"end": 23890,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23867,
											"end": 23874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 23867,
											"end": 23872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 23867,
											"end": 23874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23867,
											"end": 23874,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 23867,
											"end": 23874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23867,
											"end": 23890,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23867,
											"end": 23890,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23867,
											"end": 23890,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23863,
											"end": 23964,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 23863,
											"end": 23964,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23940,
											"end": 23952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 23940,
											"end": 23950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23940,
											"end": 23952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23940,
											"end": 23952,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 23940,
											"end": 23952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23913,
											"end": 23953,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23913,
											"end": 23953,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23913,
											"end": 23953,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23913,
											"end": 23953,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23913,
											"end": 23953,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23913,
											"end": 23953,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23913,
											"end": 23953,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23913,
											"end": 23953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 23913,
											"end": 23953,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23913,
											"end": 23953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23913,
											"end": 23953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 23913,
											"end": 23953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23913,
											"end": 23953,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 23913,
											"end": 23953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23913,
											"end": 23953,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23913,
											"end": 23953,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23913,
											"end": 23953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23913,
											"end": 23953,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23913,
											"end": 23953,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23913,
											"end": 23953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23913,
											"end": 23953,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23863,
											"end": 23964,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 23863,
											"end": 23964,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23808,
											"end": 23970,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18613,
											"end": 18821,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 18613,
											"end": 18821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18702,
											"end": 18703,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18683,
											"end": 18704,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18683,
											"end": 18704,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18683,
											"end": 18690,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18683,
											"end": 18704,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18683,
											"end": 18704,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18683,
											"end": 18704,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18679,
											"end": 18770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 18679,
											"end": 18770,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18756,
											"end": 18757,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18727,
											"end": 18759,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18727,
											"end": 18759,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18727,
											"end": 18759,
											"name": "PUSH",
											"source": 0,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18727,
											"end": 18759,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18727,
											"end": 18759,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18727,
											"end": 18759,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18727,
											"end": 18759,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18727,
											"end": 18759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 18727,
											"end": 18759,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18727,
											"end": 18759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18727,
											"end": 18759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 18727,
											"end": 18759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18727,
											"end": 18759,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 18727,
											"end": 18759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18727,
											"end": 18759,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18727,
											"end": 18759,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18727,
											"end": 18759,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18727,
											"end": 18759,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18727,
											"end": 18759,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18727,
											"end": 18759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18727,
											"end": 18759,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18679,
											"end": 18770,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 18679,
											"end": 18770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18779,
											"end": 18814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 18795,
											"end": 18796,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18799,
											"end": 18806,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18808,
											"end": 18813,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18779,
											"end": 18786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 18779,
											"end": 18814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18779,
											"end": 18814,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 18779,
											"end": 18814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18613,
											"end": 18821,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18613,
											"end": 18821,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18613,
											"end": 18821,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24924,
											"end": 25111,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 24924,
											"end": 25111,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24997,
											"end": 25013,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25016,
											"end": 25022,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 25016,
											"end": 25022,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25016,
											"end": 25022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25016,
											"end": 25022,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25016,
											"end": 25022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25016,
											"end": 25022,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25016,
											"end": 25022,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 25016,
											"end": 25022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25016,
											"end": 25022,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 25016,
											"end": 25022,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25016,
											"end": 25022,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24997,
											"end": 25022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24997,
											"end": 25022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25041,
											"end": 25049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25032,
											"end": 25038,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 25032,
											"end": 25038,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25032,
											"end": 25049,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25032,
											"end": 25049,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 25032,
											"end": 25049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25032,
											"end": 25049,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25032,
											"end": 25049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25032,
											"end": 25049,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25032,
											"end": 25049,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25032,
											"end": 25049,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 25032,
											"end": 25049,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25032,
											"end": 25049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25032,
											"end": 25049,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25032,
											"end": 25049,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25032,
											"end": 25049,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25032,
											"end": 25049,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25032,
											"end": 25049,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 25032,
											"end": 25049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25032,
											"end": 25049,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25032,
											"end": 25049,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25095,
											"end": 25103,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25064,
											"end": 25104,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25064,
											"end": 25104,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25085,
											"end": 25093,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25064,
											"end": 25104,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25064,
											"end": 25104,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25064,
											"end": 25104,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 25064,
											"end": 25104,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25064,
											"end": 25104,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25064,
											"end": 25104,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25064,
											"end": 25104,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25064,
											"end": 25104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25064,
											"end": 25104,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25064,
											"end": 25104,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25064,
											"end": 25104,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25064,
											"end": 25104,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 24987,
											"end": 25111,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24924,
											"end": 25111,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24924,
											"end": 25111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 75999,
											"end": 76106,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 75999,
											"end": 76106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76059,
											"end": 76066,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76085,
											"end": 76092,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 76085,
											"end": 76099,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76093,
											"end": 76098,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 76085,
											"end": 76099,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 76085,
											"end": 76099,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76085,
											"end": 76099,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 76085,
											"end": 76099,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76085,
											"end": 76099,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76085,
											"end": 76099,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 76085,
											"end": 76099,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 76085,
											"end": 76099,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76085,
											"end": 76099,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76085,
											"end": 76099,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76085,
											"end": 76099,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 76085,
											"end": 76099,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 76085,
											"end": 76099,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76085,
											"end": 76099,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76085,
											"end": 76099,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 76085,
											"end": 76099,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 76078,
											"end": 76099,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76078,
											"end": 76099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75999,
											"end": 76106,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 75999,
											"end": 76106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75999,
											"end": 76106,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75999,
											"end": 76106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 74850,
											"end": 74976,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 74850,
											"end": 74976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74896,
											"end": 74909,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 74928,
											"end": 74969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 74955,
											"end": 74968,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 74928,
											"end": 74933,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "3147"
										},
										{
											"begin": 74928,
											"end": 74954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 74928,
											"end": 74954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74928,
											"end": 74969,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 74928,
											"end": 74969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74928,
											"end": 74969,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 74928,
											"end": 74969,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 74928,
											"end": 74969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 74928,
											"end": 74969,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 74928,
											"end": 74969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74921,
											"end": 74969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74921,
											"end": 74969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 74850,
											"end": 74976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74850,
											"end": 74976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 75302,
											"end": 75437,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 75302,
											"end": 75437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75351,
											"end": 75364,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 75383,
											"end": 75430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 75413,
											"end": 75429,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 75383,
											"end": 75391,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "3150"
										},
										{
											"begin": 75383,
											"end": 75412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 75383,
											"end": 75412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75383,
											"end": 75430,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 75383,
											"end": 75430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75383,
											"end": 75430,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 75383,
											"end": 75430,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75383,
											"end": 75430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 75383,
											"end": 75430,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 75383,
											"end": 75430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75376,
											"end": 75430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75376,
											"end": 75430,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75302,
											"end": 75437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75302,
											"end": 75437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 76220,
											"end": 76615,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 76220,
											"end": 76615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76280,
											"end": 76287,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76582,
											"end": 76589,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 76582,
											"end": 76596,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76590,
											"end": 76595,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 76582,
											"end": 76596,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 76582,
											"end": 76596,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76582,
											"end": 76596,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 76582,
											"end": 76596,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76582,
											"end": 76596,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76582,
											"end": 76596,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 76582,
											"end": 76596,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 76582,
											"end": 76596,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76582,
											"end": 76596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76582,
											"end": 76596,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76582,
											"end": 76596,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 76582,
											"end": 76596,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 76582,
											"end": 76596,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76582,
											"end": 76596,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76582,
											"end": 76596,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 76582,
											"end": 76596,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76582,
											"end": 76598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76582,
											"end": 76598,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 76582,
											"end": 76598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 76582,
											"end": 76598,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 76582,
											"end": 76598,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 76582,
											"end": 76598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76582,
											"end": 76598,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 76582,
											"end": 76598,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76582,
											"end": 76598,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 76582,
											"end": 76598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76582,
											"end": 76598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76582,
											"end": 76598,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 76575,
											"end": 76598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76575,
											"end": 76598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76220,
											"end": 76615,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 76220,
											"end": 76615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76220,
											"end": 76615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76220,
											"end": 76615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 73746,
											"end": 73922,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 73746,
											"end": 73922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 73823,
											"end": 73830,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 73849,
											"end": 73915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 73882,
											"end": 73902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 73882,
											"end": 73900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 73882,
											"end": 73902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 73882,
											"end": 73902,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 73882,
											"end": 73902,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 73904,
											"end": 73914,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 73849,
											"end": 73881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 73849,
											"end": 73915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 73849,
											"end": 73915,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 73849,
											"end": 73915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 73842,
											"end": 73915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 73842,
											"end": 73915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 73746,
											"end": 73922,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 73746,
											"end": 73922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 73746,
											"end": 73922,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 73746,
											"end": 73922,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35797,
											"end": 36057,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 35797,
											"end": 36057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35882,
											"end": 35889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35902,
											"end": 35919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35921,
											"end": 35939,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35941,
											"end": 35957,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35961,
											"end": 35986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 35972,
											"end": 35976,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 35978,
											"end": 35979,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 35981,
											"end": 35982,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 35984,
											"end": 35985,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 35961,
											"end": 35971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 35961,
											"end": 35986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35961,
											"end": 35986,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 35961,
											"end": 35986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35901,
											"end": 35986,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35901,
											"end": 35986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35901,
											"end": 35986,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35901,
											"end": 35986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35901,
											"end": 35986,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35901,
											"end": 35986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35996,
											"end": 36024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 36008,
											"end": 36013,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36015,
											"end": 36023,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35996,
											"end": 36007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 35996,
											"end": 36024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35996,
											"end": 36024,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 35996,
											"end": 36024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36041,
											"end": 36050,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36034,
											"end": 36050,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 36034,
											"end": 36050,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36034,
											"end": 36050,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36034,
											"end": 36050,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36034,
											"end": 36050,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35797,
											"end": 36057,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 35797,
											"end": 36057,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 35797,
											"end": 36057,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35797,
											"end": 36057,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35797,
											"end": 36057,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35797,
											"end": 36057,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35797,
											"end": 36057,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20841,
											"end": 21273,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 20841,
											"end": 21273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20970,
											"end": 20971,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20953,
											"end": 20972,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20953,
											"end": 20972,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20953,
											"end": 20958,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20953,
											"end": 20972,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20953,
											"end": 20972,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20953,
											"end": 20972,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20949,
											"end": 21038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 20949,
											"end": 21038,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21024,
											"end": 21025,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20995,
											"end": 21027,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20995,
											"end": 21027,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20995,
											"end": 21027,
											"name": "PUSH",
											"source": 0,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20995,
											"end": 21027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20995,
											"end": 21027,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20995,
											"end": 21027,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20995,
											"end": 21027,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20995,
											"end": 21027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 20995,
											"end": 21027,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20995,
											"end": 21027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20995,
											"end": 21027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 20995,
											"end": 21027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20995,
											"end": 21027,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 20995,
											"end": 21027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20995,
											"end": 21027,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20995,
											"end": 21027,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20995,
											"end": 21027,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20995,
											"end": 21027,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20995,
											"end": 21027,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20995,
											"end": 21027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20995,
											"end": 21027,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20949,
											"end": 21038,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 20949,
											"end": 21038,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21070,
											"end": 21071,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21051,
											"end": 21072,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21051,
											"end": 21072,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21051,
											"end": 21058,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21051,
											"end": 21072,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21051,
											"end": 21072,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21051,
											"end": 21072,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21047,
											"end": 21137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 21047,
											"end": 21137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21123,
											"end": 21124,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21095,
											"end": 21126,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21095,
											"end": 21126,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21126,
											"name": "PUSH",
											"source": 0,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21095,
											"end": 21126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21126,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21126,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21095,
											"end": 21126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 21095,
											"end": 21126,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 21095,
											"end": 21126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21126,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 21095,
											"end": 21126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21126,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21095,
											"end": 21126,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21126,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21126,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21126,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21047,
											"end": 21137,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 21047,
											"end": 21137,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21176,
											"end": 21181,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21157,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21146,
											"end": 21164,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21158,
											"end": 21163,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21164,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21146,
											"end": 21164,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21164,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21146,
											"end": 21164,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21164,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21146,
											"end": 21164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21164,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21146,
											"end": 21164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21164,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21146,
											"end": 21164,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21173,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21165,
											"end": 21172,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21173,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21146,
											"end": 21173,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21173,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21146,
											"end": 21173,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21173,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21173,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21173,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21146,
											"end": 21173,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21173,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21173,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21173,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21173,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21146,
											"end": 21173,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21173,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21146,
											"end": 21173,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21181,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21181,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21146,
											"end": 21181,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21195,
											"end": 21204,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21191,
											"end": 21267,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21191,
											"end": 21267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 21191,
											"end": 21267,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21241,
											"end": 21248,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21225,
											"end": 21256,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21225,
											"end": 21256,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21234,
											"end": 21239,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21225,
											"end": 21256,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21225,
											"end": 21256,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21225,
											"end": 21256,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 21250,
											"end": 21255,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21225,
											"end": 21256,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21225,
											"end": 21256,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21225,
											"end": 21256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 21225,
											"end": 21256,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21225,
											"end": 21256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21225,
											"end": 21256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 21225,
											"end": 21256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21225,
											"end": 21256,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 21225,
											"end": 21256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21225,
											"end": 21256,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21225,
											"end": 21256,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21225,
											"end": 21256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21225,
											"end": 21256,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21225,
											"end": 21256,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21225,
											"end": 21256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21225,
											"end": 21256,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 21191,
											"end": 21267,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 21191,
											"end": 21267,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20841,
											"end": 21273,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20841,
											"end": 21273,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20841,
											"end": 21273,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20841,
											"end": 21273,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20841,
											"end": 21273,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17163,
											"end": 18270,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 17163,
											"end": 18270,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17268,
											"end": 17269,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17252,
											"end": 17270,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17252,
											"end": 17270,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17252,
											"end": 17256,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17252,
											"end": 17270,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17252,
											"end": 17270,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17252,
											"end": 17270,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17248,
											"end": 17788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 17248,
											"end": 17788,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17404,
											"end": 17409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17388,
											"end": 17400,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17388,
											"end": 17400,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17388,
											"end": 17409,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17388,
											"end": 17409,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17388,
											"end": 17409,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17388,
											"end": 17409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 17388,
											"end": 17409,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17388,
											"end": 17409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17388,
											"end": 17409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 17388,
											"end": 17409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17388,
											"end": 17409,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 17388,
											"end": 17409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17388,
											"end": 17409,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17388,
											"end": 17409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17388,
											"end": 17409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17388,
											"end": 17409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17388,
											"end": 17409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17388,
											"end": 17409,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17388,
											"end": 17409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17248,
											"end": 17788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 17248,
											"end": 17788,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17248,
											"end": 17788,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 17248,
											"end": 17788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17440,
											"end": 17459,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17462,
											"end": 17471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17462,
											"end": 17477,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17472,
											"end": 17476,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17462,
											"end": 17477,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17462,
											"end": 17477,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17462,
											"end": 17477,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17462,
											"end": 17477,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17462,
											"end": 17477,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17462,
											"end": 17477,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17462,
											"end": 17477,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17462,
											"end": 17477,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17462,
											"end": 17477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17462,
											"end": 17477,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17462,
											"end": 17477,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17462,
											"end": 17477,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17462,
											"end": 17477,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17462,
											"end": 17477,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17462,
											"end": 17477,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17462,
											"end": 17477,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17440,
											"end": 17477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17440,
											"end": 17477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17509,
											"end": 17514,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17495,
											"end": 17506,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17495,
											"end": 17514,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17491,
											"end": 17606,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17491,
											"end": 17606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 17491,
											"end": 17606,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17566,
											"end": 17570,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17572,
											"end": 17583,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17585,
											"end": 17590,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17541,
											"end": 17591,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17541,
											"end": 17591,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17541,
											"end": 17591,
											"name": "PUSH",
											"source": 0,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17541,
											"end": 17591,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17541,
											"end": 17591,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17541,
											"end": 17591,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17541,
											"end": 17591,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17541,
											"end": 17591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 17541,
											"end": 17591,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17541,
											"end": 17591,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17541,
											"end": 17591,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17541,
											"end": 17591,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17541,
											"end": 17591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 17541,
											"end": 17591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17541,
											"end": 17591,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 17541,
											"end": 17591,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17541,
											"end": 17591,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17541,
											"end": 17591,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17541,
											"end": 17591,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17541,
											"end": 17591,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17541,
											"end": 17591,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17541,
											"end": 17591,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17541,
											"end": 17591,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17491,
											"end": 17606,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 17491,
											"end": 17606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17758,
											"end": 17763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17744,
											"end": 17755,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17744,
											"end": 17763,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17726,
											"end": 17735,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17726,
											"end": 17741,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17736,
											"end": 17740,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17726,
											"end": 17741,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17726,
											"end": 17741,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17726,
											"end": 17741,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17726,
											"end": 17741,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17726,
											"end": 17741,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17726,
											"end": 17741,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17726,
											"end": 17741,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17726,
											"end": 17741,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17726,
											"end": 17741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17726,
											"end": 17741,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17726,
											"end": 17741,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17726,
											"end": 17741,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17726,
											"end": 17741,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17726,
											"end": 17741,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17726,
											"end": 17741,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17726,
											"end": 17763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17726,
											"end": 17763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17726,
											"end": 17763,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17726,
											"end": 17763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17426,
											"end": 17788,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17248,
											"end": 17788,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 17248,
											"end": 17788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17816,
											"end": 17817,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17802,
											"end": 17818,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17802,
											"end": 17818,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17802,
											"end": 17804,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17802,
											"end": 17818,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17802,
											"end": 17818,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17802,
											"end": 17818,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17798,
											"end": 18223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 17798,
											"end": 18223,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17981,
											"end": 17986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17965,
											"end": 17977,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17965,
											"end": 17977,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17965,
											"end": 17986,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17965,
											"end": 17986,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17965,
											"end": 17986,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17965,
											"end": 17986,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17965,
											"end": 17986,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17965,
											"end": 17986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17965,
											"end": 17986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17965,
											"end": 17986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17965,
											"end": 17986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17965,
											"end": 17986,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17965,
											"end": 17986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17798,
											"end": 18223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 17798,
											"end": 18223,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17798,
											"end": 18223,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 17798,
											"end": 18223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18193,
											"end": 18198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18176,
											"end": 18185,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18176,
											"end": 18189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18186,
											"end": 18188,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18176,
											"end": 18189,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18176,
											"end": 18189,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18176,
											"end": 18189,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18176,
											"end": 18189,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18176,
											"end": 18189,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18176,
											"end": 18189,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18176,
											"end": 18189,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18176,
											"end": 18189,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18176,
											"end": 18189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18176,
											"end": 18189,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18176,
											"end": 18189,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18176,
											"end": 18189,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18176,
											"end": 18189,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18176,
											"end": 18189,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18176,
											"end": 18189,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18176,
											"end": 18189,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18176,
											"end": 18198,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18176,
											"end": 18198,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18176,
											"end": 18198,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18176,
											"end": 18198,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18176,
											"end": 18198,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18176,
											"end": 18198,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18176,
											"end": 18198,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18176,
											"end": 18198,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18176,
											"end": 18198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18176,
											"end": 18198,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 18176,
											"end": 18198,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17798,
											"end": 18223,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 17798,
											"end": 18223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18253,
											"end": 18255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18238,
											"end": 18263,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18238,
											"end": 18263,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18247,
											"end": 18251,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18238,
											"end": 18263,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18238,
											"end": 18263,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18238,
											"end": 18263,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 18257,
											"end": 18262,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18238,
											"end": 18263,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18238,
											"end": 18263,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18238,
											"end": 18263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 18238,
											"end": 18263,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18238,
											"end": 18263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18238,
											"end": 18263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 18238,
											"end": 18263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18238,
											"end": 18263,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 18238,
											"end": 18263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18238,
											"end": 18263,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18238,
											"end": 18263,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18238,
											"end": 18263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18238,
											"end": 18263,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18238,
											"end": 18263,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18238,
											"end": 18263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18238,
											"end": 18263,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 17163,
											"end": 18270,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17163,
											"end": 18270,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17163,
											"end": 18270,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17163,
											"end": 18270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 72942,
											"end": 73121,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 72942,
											"end": 73121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72997,
											"end": 73004,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70908,
											"end": 71003,
											"name": "PUSH",
											"source": 0,
											"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
										},
										{
											"begin": 73055,
											"end": 73066,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "3142"
										},
										{
											"begin": 73068,
											"end": 73082,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "3144"
										},
										{
											"begin": 73084,
											"end": 73097,
											"name": "CHAINID",
											"source": 0
										},
										{
											"begin": 73107,
											"end": 73111,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 73033,
											"end": 73113,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 73033,
											"end": 73113,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 73033,
											"end": 73113,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 73033,
											"end": 73113,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 73033,
											"end": 73113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 73033,
											"end": 73113,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 73033,
											"end": 73113,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 73033,
											"end": 73113,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 73033,
											"end": 73113,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 73033,
											"end": 73113,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 73033,
											"end": 73113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 73033,
											"end": 73113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 73033,
											"end": 73113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 73033,
											"end": 73113,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 73033,
											"end": 73113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 73033,
											"end": 73113,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 73033,
											"end": 73113,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 73033,
											"end": 73113,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 73033,
											"end": 73113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 73033,
											"end": 73113,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 73033,
											"end": 73113,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 73033,
											"end": 73113,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 73033,
											"end": 73113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 73033,
											"end": 73113,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 73033,
											"end": 73113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 73033,
											"end": 73113,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 73033,
											"end": 73113,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 73023,
											"end": 73114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 73023,
											"end": 73114,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 73023,
											"end": 73114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 73023,
											"end": 73114,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 73023,
											"end": 73114,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 73023,
											"end": 73114,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 73016,
											"end": 73114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 73016,
											"end": 73114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72942,
											"end": 73121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72942,
											"end": 73121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 67278,
											"end": 67545,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 67278,
											"end": 67545,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67372,
											"end": 67385,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 65283,
											"end": 65349,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 67430,
											"end": 67447,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 67430,
											"end": 67447,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 67420,
											"end": 67425,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 67401,
											"end": 67447,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 67397,
											"end": 67539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 67397,
											"end": 67539,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 67470,
											"end": 67485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 67479,
											"end": 67484,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 67470,
											"end": 67478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 67470,
											"end": 67485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 67470,
											"end": 67485,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 67470,
											"end": 67485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67463,
											"end": 67485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67463,
											"end": 67485,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 67463,
											"end": 67485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 67463,
											"end": 67485,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 67397,
											"end": 67539,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 67397,
											"end": 67539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67523,
											"end": 67528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 67516,
											"end": 67528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 67516,
											"end": 67528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67516,
											"end": 67528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 67278,
											"end": 67545,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 67278,
											"end": 67545,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67278,
											"end": 67545,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 67278,
											"end": 67545,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 67278,
											"end": 67545,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 67278,
											"end": 67545,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 67278,
											"end": 67545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59552,
											"end": 59953,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 59552,
											"end": 59953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59645,
											"end": 59659,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59754,
											"end": 59758,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59748,
											"end": 59759,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59784,
											"end": 59794,
											"name": "PUSH",
											"source": 0,
											"value": "1901000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 59779,
											"end": 59782,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59772,
											"end": 59795,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59831,
											"end": 59846,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59824,
											"end": 59828,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 59819,
											"end": 59822,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59815,
											"end": 59829,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59808,
											"end": 59847,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59883,
											"end": 59893,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59876,
											"end": 59880,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 59871,
											"end": 59874,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59867,
											"end": 59881,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59860,
											"end": 59894,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59932,
											"end": 59936,
											"name": "PUSH",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 59927,
											"end": 59930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59917,
											"end": 59937,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 59907,
											"end": 59937,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59907,
											"end": 59937,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59723,
											"end": 59947,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59552,
											"end": 59953,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 59552,
											"end": 59953,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59552,
											"end": 59953,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59552,
											"end": 59953,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59552,
											"end": 59953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34134,
											"end": 35664,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 34134,
											"end": 35664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34260,
											"end": 34267,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34269,
											"end": 34281,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34283,
											"end": 34290,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35193,
											"end": 35259,
											"name": "PUSH",
											"source": 0,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
										},
										{
											"begin": 35188,
											"end": 35189,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35180,
											"end": 35190,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35180,
											"end": 35190,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 35180,
											"end": 35259,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 35176,
											"end": 35340,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35176,
											"end": 35340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 35176,
											"end": 35340,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35291,
											"end": 35292,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35295,
											"end": 35325,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 35327,
											"end": 35328,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35275,
											"end": 35329,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35275,
											"end": 35329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35275,
											"end": 35329,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35275,
											"end": 35329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35275,
											"end": 35329,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35275,
											"end": 35329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35275,
											"end": 35329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 35275,
											"end": 35329,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35176,
											"end": 35340,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 35176,
											"end": 35340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35434,
											"end": 35448,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35451,
											"end": 35475,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35461,
											"end": 35465,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 35467,
											"end": 35468,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 35470,
											"end": 35471,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 35473,
											"end": 35474,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 35451,
											"end": 35475,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35451,
											"end": 35475,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35451,
											"end": 35475,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35451,
											"end": 35475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35451,
											"end": 35475,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35451,
											"end": 35475,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35451,
											"end": 35475,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35451,
											"end": 35475,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35451,
											"end": 35475,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35451,
											"end": 35475,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35451,
											"end": 35475,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35451,
											"end": 35475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 35451,
											"end": 35475,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 35451,
											"end": 35475,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 35451,
											"end": 35475,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35451,
											"end": 35475,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35451,
											"end": 35475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35451,
											"end": 35475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 35451,
											"end": 35475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35451,
											"end": 35475,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 35451,
											"end": 35475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35451,
											"end": 35475,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35451,
											"end": 35475,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35451,
											"end": 35475,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35451,
											"end": 35475,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35451,
											"end": 35475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35451,
											"end": 35475,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35451,
											"end": 35475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35451,
											"end": 35475,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35451,
											"end": 35475,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35451,
											"end": 35475,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35451,
											"end": 35475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35451,
											"end": 35475,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35451,
											"end": 35475,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 35451,
											"end": 35475,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 35451,
											"end": 35475,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35451,
											"end": 35475,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35451,
											"end": 35475,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35451,
											"end": 35475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 35451,
											"end": 35475,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35451,
											"end": 35475,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 35451,
											"end": 35475,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35451,
											"end": 35475,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35451,
											"end": 35475,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 35451,
											"end": 35475,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 35451,
											"end": 35475,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35451,
											"end": 35475,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35451,
											"end": 35475,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 35451,
											"end": 35475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35451,
											"end": 35475,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35451,
											"end": 35475,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35451,
											"end": 35475,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35451,
											"end": 35475,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35451,
											"end": 35475,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35451,
											"end": 35475,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35451,
											"end": 35475,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35451,
											"end": 35475,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35434,
											"end": 35475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35434,
											"end": 35475,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35507,
											"end": 35508,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35489,
											"end": 35509,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35489,
											"end": 35509,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35489,
											"end": 35495,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35489,
											"end": 35509,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35489,
											"end": 35509,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35489,
											"end": 35509,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35485,
											"end": 35598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 35485,
											"end": 35598,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35541,
											"end": 35542,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35545,
											"end": 35574,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35584,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35576,
											"end": 35586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35576,
											"end": 35586,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 35525,
											"end": 35587,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 35525,
											"end": 35587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35525,
											"end": 35587,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 35525,
											"end": 35587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35525,
											"end": 35587,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 35525,
											"end": 35587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35525,
											"end": 35587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35525,
											"end": 35587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 35525,
											"end": 35587,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35485,
											"end": 35598,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 35485,
											"end": 35598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35616,
											"end": 35622,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35624,
											"end": 35644,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35654,
											"end": 35655,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35646,
											"end": 35656,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35646,
											"end": 35656,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 35608,
											"end": 35657,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 35608,
											"end": 35657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35608,
											"end": 35657,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 35608,
											"end": 35657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35608,
											"end": 35657,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 35608,
											"end": 35657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35608,
											"end": 35657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34134,
											"end": 35664,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 34134,
											"end": 35664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34134,
											"end": 35664,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 34134,
											"end": 35664,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34134,
											"end": 35664,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 34134,
											"end": 35664,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34134,
											"end": 35664,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 34134,
											"end": 35664,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34134,
											"end": 35664,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34134,
											"end": 35664,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34134,
											"end": 35664,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36190,
											"end": 36722,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 36190,
											"end": 36722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36285,
											"end": 36305,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36276,
											"end": 36305,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 36276,
											"end": 36305,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36276,
											"end": 36305,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 36276,
											"end": 36305,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36276,
											"end": 36305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 36276,
											"end": 36305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36276,
											"end": 36305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 36276,
											"end": 36305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 36276,
											"end": 36305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36276,
											"end": 36305,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 36276,
											"end": 36305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36276,
											"end": 36305,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 36276,
											"end": 36305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36276,
											"end": 36281,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36276,
											"end": 36305,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 36276,
											"end": 36305,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36276,
											"end": 36305,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 36276,
											"end": 36305,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36276,
											"end": 36305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 36276,
											"end": 36305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36276,
											"end": 36305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 36276,
											"end": 36305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 36276,
											"end": 36305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36276,
											"end": 36305,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 36276,
											"end": 36305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36276,
											"end": 36305,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 36276,
											"end": 36305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36276,
											"end": 36305,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36272,
											"end": 36716,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 36272,
											"end": 36716,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36381,
											"end": 36410,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36372,
											"end": 36410,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 36372,
											"end": 36410,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36372,
											"end": 36410,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 36372,
											"end": 36410,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36372,
											"end": 36410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 36372,
											"end": 36410,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36372,
											"end": 36410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 36372,
											"end": 36410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 36372,
											"end": 36410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36372,
											"end": 36410,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 36372,
											"end": 36410,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36372,
											"end": 36410,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 36372,
											"end": 36410,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36372,
											"end": 36377,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36372,
											"end": 36410,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 36372,
											"end": 36410,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36372,
											"end": 36410,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 36372,
											"end": 36410,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36372,
											"end": 36410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 36372,
											"end": 36410,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36372,
											"end": 36410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 36372,
											"end": 36410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 36372,
											"end": 36410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36372,
											"end": 36410,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 36372,
											"end": 36410,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36372,
											"end": 36410,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 36372,
											"end": 36410,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36372,
											"end": 36410,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36368,
											"end": 36716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 36368,
											"end": 36716,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36433,
											"end": 36456,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36433,
											"end": 36456,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36433,
											"end": 36456,
											"name": "PUSH",
											"source": 0,
											"value": "F645EEDF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 36433,
											"end": 36456,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36433,
											"end": 36456,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36433,
											"end": 36456,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36433,
											"end": 36456,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36433,
											"end": 36456,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36433,
											"end": 36456,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36433,
											"end": 36456,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36433,
											"end": 36456,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36433,
											"end": 36456,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36433,
											"end": 36456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36433,
											"end": 36456,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36368,
											"end": 36716,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 36368,
											"end": 36716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36486,
											"end": 36521,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 36477,
											"end": 36521,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 36477,
											"end": 36521,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36477,
											"end": 36521,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 36477,
											"end": 36521,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36477,
											"end": 36521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 36477,
											"end": 36521,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36477,
											"end": 36521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 36477,
											"end": 36521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 36477,
											"end": 36521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36477,
											"end": 36521,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 36477,
											"end": 36521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36477,
											"end": 36521,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 36477,
											"end": 36521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36477,
											"end": 36482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36477,
											"end": 36521,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 36477,
											"end": 36521,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36477,
											"end": 36521,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 36477,
											"end": 36521,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36477,
											"end": 36521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 36477,
											"end": 36521,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36477,
											"end": 36521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 36477,
											"end": 36521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 36477,
											"end": 36521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36477,
											"end": 36521,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 36477,
											"end": 36521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36477,
											"end": 36521,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 36477,
											"end": 36521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36477,
											"end": 36521,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36473,
											"end": 36716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 36473,
											"end": 36716,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36580,
											"end": 36588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36572,
											"end": 36589,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36572,
											"end": 36589,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 36544,
											"end": 36590,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36544,
											"end": 36590,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36544,
											"end": 36590,
											"name": "PUSH",
											"source": 0,
											"value": "FCE698F700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 36544,
											"end": 36590,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36544,
											"end": 36590,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36544,
											"end": 36590,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36544,
											"end": 36590,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36544,
											"end": 36590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 36544,
											"end": 36590,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36544,
											"end": 36590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36544,
											"end": 36590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 36544,
											"end": 36590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36544,
											"end": 36590,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 36544,
											"end": 36590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36544,
											"end": 36590,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36544,
											"end": 36590,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36544,
											"end": 36590,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36544,
											"end": 36590,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36544,
											"end": 36590,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36544,
											"end": 36590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36544,
											"end": 36590,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36473,
											"end": 36716,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 36473,
											"end": 36716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36620,
											"end": 36650,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 36611,
											"end": 36650,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36611,
											"end": 36650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36611,
											"end": 36650,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 36611,
											"end": 36650,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36611,
											"end": 36650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 36611,
											"end": 36650,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36611,
											"end": 36650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 36611,
											"end": 36650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 36611,
											"end": 36650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36611,
											"end": 36650,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 36611,
											"end": 36650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36611,
											"end": 36650,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 36611,
											"end": 36650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36611,
											"end": 36616,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36611,
											"end": 36650,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 36611,
											"end": 36650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36611,
											"end": 36650,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 36611,
											"end": 36650,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36611,
											"end": 36650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 36611,
											"end": 36650,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36611,
											"end": 36650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 36611,
											"end": 36650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 36611,
											"end": 36650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36611,
											"end": 36650,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 36611,
											"end": 36650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36611,
											"end": 36650,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 36611,
											"end": 36650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36611,
											"end": 36650,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36607,
											"end": 36716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 36607,
											"end": 36716,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36696,
											"end": 36704,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36673,
											"end": 36705,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36673,
											"end": 36705,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36673,
											"end": 36705,
											"name": "PUSH",
											"source": 0,
											"value": "D78BCE0C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 36673,
											"end": 36705,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36673,
											"end": 36705,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36673,
											"end": 36705,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36673,
											"end": 36705,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36673,
											"end": 36705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 36673,
											"end": 36705,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36673,
											"end": 36705,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36673,
											"end": 36705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 36673,
											"end": 36705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36673,
											"end": 36705,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 36673,
											"end": 36705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36673,
											"end": 36705,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36673,
											"end": 36705,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36673,
											"end": 36705,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36673,
											"end": 36705,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36673,
											"end": 36705,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36673,
											"end": 36705,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36673,
											"end": 36705,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36607,
											"end": 36716,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 36607,
											"end": 36716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36190,
											"end": 36722,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 36190,
											"end": 36722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36190,
											"end": 36722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36190,
											"end": 36722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36190,
											"end": 36722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 65971,
											"end": 66376,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 65971,
											"end": 66376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66030,
											"end": 66043,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 66055,
											"end": 66066,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 66069,
											"end": 66085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 66080,
											"end": 66084,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 66069,
											"end": 66079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 66069,
											"end": 66085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 66069,
											"end": 66085,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 66069,
											"end": 66085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66055,
											"end": 66085,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 66055,
											"end": 66085,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 66173,
											"end": 66190,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 66204,
											"end": 66206,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 66193,
											"end": 66207,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 66193,
											"end": 66207,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 66193,
											"end": 66207,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 66193,
											"end": 66207,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 66193,
											"end": 66207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 66193,
											"end": 66207,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66193,
											"end": 66207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 66193,
											"end": 66207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 66193,
											"end": 66207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 66193,
											"end": 66207,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 66193,
											"end": 66207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66193,
											"end": 66207,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 66193,
											"end": 66207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66193,
											"end": 66207,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 66193,
											"end": 66207,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 66193,
											"end": 66207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 66193,
											"end": 66207,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66193,
											"end": 66207,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 66193,
											"end": 66207,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 66193,
											"end": 66207,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66193,
											"end": 66207,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 66193,
											"end": 66207,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 66193,
											"end": 66207,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 66193,
											"end": 66207,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 66193,
											"end": 66207,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 66193,
											"end": 66207,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 66193,
											"end": 66207,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 66193,
											"end": 66207,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 66193,
											"end": 66207,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 66193,
											"end": 66207,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 66193,
											"end": 66207,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 66193,
											"end": 66207,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66193,
											"end": 66207,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 66193,
											"end": 66207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 66193,
											"end": 66207,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66193,
											"end": 66207,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 66193,
											"end": 66207,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 66193,
											"end": 66207,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 66193,
											"end": 66207,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 66193,
											"end": 66207,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 66193,
											"end": 66207,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 66193,
											"end": 66207,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66193,
											"end": 66207,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 66193,
											"end": 66207,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 66193,
											"end": 66207,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 66193,
											"end": 66207,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66193,
											"end": 66207,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 66193,
											"end": 66207,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 66193,
											"end": 66207,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 66193,
											"end": 66207,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 66193,
											"end": 66207,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 66193,
											"end": 66207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 66193,
											"end": 66207,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 66193,
											"end": 66207,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 66193,
											"end": 66207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66193,
											"end": 66207,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 66173,
											"end": 66207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 66173,
											"end": 66207,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 66295,
											"end": 66298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 66290,
											"end": 66293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 66283,
											"end": 66299,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 66335,
											"end": 66339,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 66328,
											"end": 66332,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 66323,
											"end": 66326,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 66319,
											"end": 66333,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 66312,
											"end": 66340,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 66366,
											"end": 66369,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66359,
											"end": 66369,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 66359,
											"end": 66369,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 66359,
											"end": 66369,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 66359,
											"end": 66369,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 65971,
											"end": 66376,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 65971,
											"end": 66376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 65971,
											"end": 66376,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 65971,
											"end": 66376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 66448,
											"end": 66693,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 66448,
											"end": 66693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66509,
											"end": 66516,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 66528,
											"end": 66542,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66581,
											"end": 66585,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 66572,
											"end": 66576,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 66545,
											"end": 66578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 66545,
											"end": 66578,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 66545,
											"end": 66585,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 66528,
											"end": 66585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 66528,
											"end": 66585,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 66608,
											"end": 66610,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 66599,
											"end": 66605,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 66599,
											"end": 66610,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 66595,
											"end": 66664,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 66595,
											"end": 66664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 66595,
											"end": 66664,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66633,
											"end": 66653,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 66633,
											"end": 66653,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 66633,
											"end": 66653,
											"name": "PUSH",
											"source": 0,
											"value": "B3512B0C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 66633,
											"end": 66653,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 66633,
											"end": 66653,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 66633,
											"end": 66653,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 66633,
											"end": 66653,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 66633,
											"end": 66653,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 66633,
											"end": 66653,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 66633,
											"end": 66653,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66633,
											"end": 66653,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 66633,
											"end": 66653,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 66633,
											"end": 66653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 66633,
											"end": 66653,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 66595,
											"end": 66664,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 66595,
											"end": 66664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66680,
											"end": 66686,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66673,
											"end": 66686,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 66673,
											"end": 66686,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 66673,
											"end": 66686,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 66448,
											"end": 66693,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 66448,
											"end": 66693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 66448,
											"end": 66693,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 66448,
											"end": 66693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 1
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "tag",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4380,
											"end": 4396,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4316,
											"end": 4402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "tag",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 4491,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "tag",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4479,
											"end": 4514,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4408,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4615,
											"end": 4619,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 4666,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "tag",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4526,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4823,
											"name": "tag",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 4746,
											"end": 4823,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4783,
											"end": 4790,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4812,
											"end": 4817,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4801,
											"end": 4817,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4801,
											"end": 4817,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4823,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4823,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4823,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4823,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4829,
											"end": 4947,
											"name": "tag",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 4829,
											"end": 4947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4916,
											"end": 4940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 4934,
											"end": 4939,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4916,
											"end": 4940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 4916,
											"end": 4940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4916,
											"end": 4940,
											"name": "tag",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 4916,
											"end": 4940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4911,
											"end": 4914,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4904,
											"end": 4941,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4829,
											"end": 4947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4829,
											"end": 4947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4829,
											"end": 4947,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4953,
											"end": 5175,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 4953,
											"end": 5175,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5046,
											"end": 5050,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5084,
											"end": 5086,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5073,
											"end": 5082,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5069,
											"end": 5087,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5061,
											"end": 5087,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5061,
											"end": 5087,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 5165,
											"end": 5166,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5154,
											"end": 5163,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5150,
											"end": 5167,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5141,
											"end": 5147,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 5097,
											"end": 5168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5168,
											"name": "tag",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 5097,
											"end": 5168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4953,
											"end": 5175,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4953,
											"end": 5175,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4953,
											"end": 5175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4953,
											"end": 5175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4953,
											"end": 5175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 5510,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 5181,
											"end": 5510,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5240,
											"end": 5246,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5289,
											"end": 5291,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5277,
											"end": 5286,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5268,
											"end": 5275,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5264,
											"end": 5287,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5260,
											"end": 5292,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5257,
											"end": 5376,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5257,
											"end": 5376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 5257,
											"end": 5376,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5295,
											"end": 5374,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 5295,
											"end": 5374,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 5295,
											"end": 5374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5295,
											"end": 5374,
											"name": "tag",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 5295,
											"end": 5374,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5257,
											"end": 5376,
											"name": "tag",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 5257,
											"end": 5376,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5415,
											"end": 5416,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5440,
											"end": 5493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "394"
										},
										{
											"begin": 5485,
											"end": 5492,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5476,
											"end": 5482,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5465,
											"end": 5474,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5461,
											"end": 5483,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5440,
											"end": 5493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 5440,
											"end": 5493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5440,
											"end": 5493,
											"name": "tag",
											"source": 1,
											"value": "394"
										},
										{
											"begin": 5440,
											"end": 5493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5493,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5493,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5386,
											"end": 5503,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 5510,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 5510,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 5510,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 5510,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 5510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5516,
											"end": 5665,
											"name": "tag",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 5516,
											"end": 5665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5552,
											"end": 5559,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5592,
											"end": 5658,
											"name": "PUSH",
											"source": 1,
											"value": "FF00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5585,
											"end": 5590,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5581,
											"end": 5659,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5659,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5659,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5516,
											"end": 5665,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5516,
											"end": 5665,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5516,
											"end": 5665,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5516,
											"end": 5665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5671,
											"end": 5786,
											"name": "tag",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 5671,
											"end": 5786,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5756,
											"end": 5779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 5773,
											"end": 5778,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5756,
											"end": 5779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 5756,
											"end": 5779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5756,
											"end": 5779,
											"name": "tag",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 5756,
											"end": 5779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5754,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5744,
											"end": 5780,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5671,
											"end": 5786,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5671,
											"end": 5786,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5671,
											"end": 5786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5792,
											"end": 5910,
											"name": "tag",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 5792,
											"end": 5910,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5879,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 5897,
											"end": 5902,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5879,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 5879,
											"end": 5903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5879,
											"end": 5903,
											"name": "tag",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 5879,
											"end": 5903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5874,
											"end": 5877,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5867,
											"end": 5904,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5792,
											"end": 5910,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5792,
											"end": 5910,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5792,
											"end": 5910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5916,
											"end": 6030,
											"name": "tag",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 5916,
											"end": 6030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5983,
											"end": 5989,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6017,
											"end": 6022,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6011,
											"end": 6023,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6001,
											"end": 6023,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6001,
											"end": 6023,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5916,
											"end": 6030,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5916,
											"end": 6030,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5916,
											"end": 6030,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5916,
											"end": 6030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6036,
											"end": 6220,
											"name": "tag",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 6036,
											"end": 6220,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6135,
											"end": 6146,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6169,
											"end": 6175,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6164,
											"end": 6167,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6157,
											"end": 6176,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6209,
											"end": 6213,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6204,
											"end": 6207,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6200,
											"end": 6214,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6185,
											"end": 6214,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6185,
											"end": 6214,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6036,
											"end": 6220,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6036,
											"end": 6220,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6036,
											"end": 6220,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6036,
											"end": 6220,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6036,
											"end": 6220,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6226,
											"end": 6358,
											"name": "tag",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 6226,
											"end": 6358,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6293,
											"end": 6297,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6316,
											"end": 6319,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6308,
											"end": 6319,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6308,
											"end": 6319,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6346,
											"end": 6350,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6341,
											"end": 6344,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6337,
											"end": 6351,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6329,
											"end": 6351,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6329,
											"end": 6351,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6226,
											"end": 6358,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6226,
											"end": 6358,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6226,
											"end": 6358,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6226,
											"end": 6358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6364,
											"end": 6472,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 6364,
											"end": 6472,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6441,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 6459,
											"end": 6464,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6441,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 6441,
											"end": 6465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6441,
											"end": 6465,
											"name": "tag",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 6441,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6436,
											"end": 6439,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6429,
											"end": 6466,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6364,
											"end": 6472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6364,
											"end": 6472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6364,
											"end": 6472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6478,
											"end": 6657,
											"name": "tag",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 6478,
											"end": 6657,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6547,
											"end": 6557,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6568,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "406"
										},
										{
											"begin": 6610,
											"end": 6613,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6602,
											"end": 6608,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6568,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 6568,
											"end": 6614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6568,
											"end": 6614,
											"name": "tag",
											"source": 1,
											"value": "406"
										},
										{
											"begin": 6568,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6646,
											"end": 6650,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6641,
											"end": 6644,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6637,
											"end": 6651,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 6651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 6651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6478,
											"end": 6657,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6478,
											"end": 6657,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6478,
											"end": 6657,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6478,
											"end": 6657,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6478,
											"end": 6657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6663,
											"end": 6776,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 6663,
											"end": 6776,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6733,
											"end": 6737,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6765,
											"end": 6769,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6760,
											"end": 6763,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6756,
											"end": 6770,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6748,
											"end": 6770,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6748,
											"end": 6770,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6663,
											"end": 6776,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6663,
											"end": 6776,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6663,
											"end": 6776,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6663,
											"end": 6776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6812,
											"end": 7544,
											"name": "tag",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 6812,
											"end": 7544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6934,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6960,
											"end": 7014,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 7008,
											"end": 7013,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6960,
											"end": 7014,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 6960,
											"end": 7014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6960,
											"end": 7014,
											"name": "tag",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 6960,
											"end": 7014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7030,
											"end": 7116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 7109,
											"end": 7115,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7104,
											"end": 7107,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7030,
											"end": 7116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 7030,
											"end": 7116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7030,
											"end": 7116,
											"name": "tag",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 7030,
											"end": 7116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7023,
											"end": 7116,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7023,
											"end": 7116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7140,
											"end": 7196,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "411"
										},
										{
											"begin": 7190,
											"end": 7195,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7140,
											"end": 7196,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 7140,
											"end": 7196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7140,
											"end": 7196,
											"name": "tag",
											"source": 1,
											"value": "411"
										},
										{
											"begin": 7140,
											"end": 7196,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7219,
											"end": 7226,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7250,
											"end": 7251,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7235,
											"end": 7519,
											"name": "tag",
											"source": 1,
											"value": "412"
										},
										{
											"begin": 7235,
											"end": 7519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7260,
											"end": 7266,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7257,
											"end": 7258,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7254,
											"end": 7267,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7235,
											"end": 7519,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7235,
											"end": 7519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "414"
										},
										{
											"begin": 7235,
											"end": 7519,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7336,
											"end": 7342,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7330,
											"end": 7343,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7363,
											"end": 7426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 7422,
											"end": 7425,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 7407,
											"end": 7420,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7363,
											"end": 7426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 7363,
											"end": 7426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7363,
											"end": 7426,
											"name": "tag",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 7363,
											"end": 7426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7356,
											"end": 7426,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 7356,
											"end": 7426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7509,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 7502,
											"end": 7508,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7509,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 7449,
											"end": 7509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7509,
											"name": "tag",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 7449,
											"end": 7509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7439,
											"end": 7509,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7439,
											"end": 7509,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7295,
											"end": 7519,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7282,
											"end": 7283,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7279,
											"end": 7280,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7275,
											"end": 7284,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7270,
											"end": 7284,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7270,
											"end": 7284,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7235,
											"end": 7519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "412"
										},
										{
											"begin": 7235,
											"end": 7519,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7235,
											"end": 7519,
											"name": "tag",
											"source": 1,
											"value": "414"
										},
										{
											"begin": 7235,
											"end": 7519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7239,
											"end": 7253,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7535,
											"end": 7538,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7528,
											"end": 7538,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7528,
											"end": 7538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6936,
											"end": 7544,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6936,
											"end": 7544,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6936,
											"end": 7544,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6812,
											"end": 7544,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6812,
											"end": 7544,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6812,
											"end": 7544,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6812,
											"end": 7544,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6812,
											"end": 7544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 8765,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 7550,
											"end": 8765,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7903,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7937,
											"end": 7940,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 7926,
											"end": 7935,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7922,
											"end": 7941,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7914,
											"end": 7941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7914,
											"end": 7941,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7951,
											"end": 8020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "418"
										},
										{
											"begin": 8017,
											"end": 8018,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8006,
											"end": 8015,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8019,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7993,
											"end": 7999,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 7951,
											"end": 8020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 7951,
											"end": 8020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7951,
											"end": 8020,
											"name": "tag",
											"source": 1,
											"value": "418"
										},
										{
											"begin": 7951,
											"end": 8020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8067,
											"end": 8076,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8061,
											"end": 8065,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8057,
											"end": 8077,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8052,
											"end": 8054,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8041,
											"end": 8050,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8037,
											"end": 8055,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8030,
											"end": 8078,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8095,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 8168,
											"end": 8172,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8159,
											"end": 8165,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 8095,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 8095,
											"end": 8173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8095,
											"end": 8173,
											"name": "tag",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 8095,
											"end": 8173,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8087,
											"end": 8173,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8087,
											"end": 8173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8220,
											"end": 8229,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8214,
											"end": 8218,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8210,
											"end": 8230,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8205,
											"end": 8207,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8194,
											"end": 8203,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8190,
											"end": 8208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8183,
											"end": 8231,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8248,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 8321,
											"end": 8325,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8318,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 8248,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 8248,
											"end": 8326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8248,
											"end": 8326,
											"name": "tag",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 8248,
											"end": 8326,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8326,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8326,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8336,
											"end": 8408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 8404,
											"end": 8406,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8393,
											"end": 8402,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8407,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8380,
											"end": 8386,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8336,
											"end": 8408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 8336,
											"end": 8408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8336,
											"end": 8408,
											"name": "tag",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 8336,
											"end": 8408,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8418,
											"end": 8491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "422"
										},
										{
											"begin": 8486,
											"end": 8489,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 8475,
											"end": 8484,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8471,
											"end": 8490,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8462,
											"end": 8468,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8418,
											"end": 8491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 8418,
											"end": 8491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8418,
											"end": 8491,
											"name": "tag",
											"source": 1,
											"value": "422"
										},
										{
											"begin": 8418,
											"end": 8491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8501,
											"end": 8574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 8569,
											"end": 8572,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 8558,
											"end": 8567,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8554,
											"end": 8573,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8545,
											"end": 8551,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8501,
											"end": 8574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 8501,
											"end": 8574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8501,
											"end": 8574,
											"name": "tag",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 8501,
											"end": 8574,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8622,
											"end": 8631,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8616,
											"end": 8620,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8612,
											"end": 8632,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8606,
											"end": 8609,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 8595,
											"end": 8604,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8591,
											"end": 8610,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8584,
											"end": 8633,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8650,
											"end": 8758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 8753,
											"end": 8757,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8744,
											"end": 8750,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8650,
											"end": 8758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 8650,
											"end": 8758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8650,
											"end": 8758,
											"name": "tag",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 8650,
											"end": 8758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8642,
											"end": 8758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8642,
											"end": 8758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 8765,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 8765,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 8765,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 8765,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 8765,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 8765,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 8765,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 8765,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 8765,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 8765,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 8765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8771,
											"end": 8993,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 8771,
											"end": 8993,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8864,
											"end": 8868,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8902,
											"end": 8904,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8891,
											"end": 8900,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8887,
											"end": 8905,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8879,
											"end": 8905,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8879,
											"end": 8905,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8915,
											"end": 8986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 8983,
											"end": 8984,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8972,
											"end": 8981,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8968,
											"end": 8985,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8959,
											"end": 8965,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8915,
											"end": 8986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 8915,
											"end": 8986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8915,
											"end": 8986,
											"name": "tag",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 8915,
											"end": 8986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8771,
											"end": 8993,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8771,
											"end": 8993,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8771,
											"end": 8993,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8771,
											"end": 8993,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8771,
											"end": 8993,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8999,
											"end": 9117,
											"name": "tag",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 8999,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9070,
											"end": 9092,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 9086,
											"end": 9091,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9070,
											"end": 9092,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 9070,
											"end": 9092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9070,
											"end": 9092,
											"name": "tag",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 9070,
											"end": 9092,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9063,
											"end": 9068,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9060,
											"end": 9093,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9050,
											"end": 9111,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 9050,
											"end": 9111,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9107,
											"end": 9108,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9104,
											"end": 9105,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9097,
											"end": 9109,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9050,
											"end": 9111,
											"name": "tag",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 9050,
											"end": 9111,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8999,
											"end": 9117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8999,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9123,
											"end": 9258,
											"name": "tag",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 9123,
											"end": 9258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9167,
											"end": 9172,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9205,
											"end": 9211,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9192,
											"end": 9212,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 9183,
											"end": 9212,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9183,
											"end": 9212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 9246,
											"end": 9251,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 9221,
											"end": 9252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9252,
											"name": "tag",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 9221,
											"end": 9252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9123,
											"end": 9258,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9123,
											"end": 9258,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9123,
											"end": 9258,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9123,
											"end": 9258,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9123,
											"end": 9258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9264,
											"end": 9386,
											"name": "tag",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 9264,
											"end": 9386,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9337,
											"end": 9361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 9355,
											"end": 9360,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9337,
											"end": 9361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 9337,
											"end": 9361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9337,
											"end": 9361,
											"name": "tag",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 9337,
											"end": 9361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9330,
											"end": 9335,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9327,
											"end": 9362,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9317,
											"end": 9380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 9317,
											"end": 9380,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9376,
											"end": 9377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9373,
											"end": 9374,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9366,
											"end": 9378,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9317,
											"end": 9380,
											"name": "tag",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 9317,
											"end": 9380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9264,
											"end": 9386,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9264,
											"end": 9386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9392,
											"end": 9531,
											"name": "tag",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 9392,
											"end": 9531,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9438,
											"end": 9443,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9476,
											"end": 9482,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9463,
											"end": 9483,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 9454,
											"end": 9483,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9454,
											"end": 9483,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9492,
											"end": 9525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 9519,
											"end": 9524,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9492,
											"end": 9525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 9492,
											"end": 9525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9492,
											"end": 9525,
											"name": "tag",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 9492,
											"end": 9525,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9392,
											"end": 9531,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9392,
											"end": 9531,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9392,
											"end": 9531,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9392,
											"end": 9531,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9392,
											"end": 9531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9537,
											"end": 10736,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 9537,
											"end": 10736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9648,
											"end": 9654,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9656,
											"end": 9662,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9664,
											"end": 9670,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9672,
											"end": 9678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9680,
											"end": 9686,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9688,
											"end": 9694,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9696,
											"end": 9702,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9745,
											"end": 9748,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 9733,
											"end": 9742,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 9724,
											"end": 9731,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 9720,
											"end": 9743,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9716,
											"end": 9749,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 9713,
											"end": 9833,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9713,
											"end": 9833,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 9713,
											"end": 9833,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9752,
											"end": 9831,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 9752,
											"end": 9831,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 9752,
											"end": 9831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9752,
											"end": 9831,
											"name": "tag",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 9752,
											"end": 9831,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9713,
											"end": 9833,
											"name": "tag",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 9713,
											"end": 9833,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9872,
											"end": 9873,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9897,
											"end": 9950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "440"
										},
										{
											"begin": 9942,
											"end": 9949,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 9933,
											"end": 9939,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9922,
											"end": 9931,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 9918,
											"end": 9940,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9897,
											"end": 9950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 9897,
											"end": 9950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9897,
											"end": 9950,
											"name": "tag",
											"source": 1,
											"value": "440"
										},
										{
											"begin": 9897,
											"end": 9950,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9887,
											"end": 9950,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 9887,
											"end": 9950,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9843,
											"end": 9960,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9999,
											"end": 10001,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10025,
											"end": 10078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 10070,
											"end": 10077,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10050,
											"end": 10059,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 10046,
											"end": 10068,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10025,
											"end": 10078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 10025,
											"end": 10078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10025,
											"end": 10078,
											"name": "tag",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 10025,
											"end": 10078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10015,
											"end": 10078,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 10015,
											"end": 10078,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9970,
											"end": 10088,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10127,
											"end": 10129,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10153,
											"end": 10206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 10198,
											"end": 10205,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 10189,
											"end": 10195,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10178,
											"end": 10187,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 10174,
											"end": 10196,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10153,
											"end": 10206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 10153,
											"end": 10206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10153,
											"end": 10206,
											"name": "tag",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 10153,
											"end": 10206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10143,
											"end": 10206,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 10143,
											"end": 10206,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10098,
											"end": 10216,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10255,
											"end": 10257,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10281,
											"end": 10334,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 10326,
											"end": 10333,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 10317,
											"end": 10323,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10306,
											"end": 10315,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 10302,
											"end": 10324,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10281,
											"end": 10334,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 10281,
											"end": 10334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10281,
											"end": 10334,
											"name": "tag",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 10281,
											"end": 10334,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10271,
											"end": 10334,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10271,
											"end": 10334,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10226,
											"end": 10344,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10383,
											"end": 10386,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 10410,
											"end": 10461,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 10453,
											"end": 10460,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 10444,
											"end": 10450,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10433,
											"end": 10442,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 10429,
											"end": 10451,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10410,
											"end": 10461,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 10410,
											"end": 10461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10410,
											"end": 10461,
											"name": "tag",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 10410,
											"end": 10461,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10400,
											"end": 10461,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10400,
											"end": 10461,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10354,
											"end": 10471,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10510,
											"end": 10513,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 10537,
											"end": 10590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 10582,
											"end": 10589,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 10573,
											"end": 10579,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10562,
											"end": 10571,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 10558,
											"end": 10580,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10537,
											"end": 10590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 10537,
											"end": 10590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10537,
											"end": 10590,
											"name": "tag",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 10537,
											"end": 10590,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10527,
											"end": 10590,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10527,
											"end": 10590,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10481,
											"end": 10600,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10639,
											"end": 10642,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 10666,
											"end": 10719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 10711,
											"end": 10718,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 10702,
											"end": 10708,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10691,
											"end": 10700,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10709,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10666,
											"end": 10719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 10666,
											"end": 10719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10666,
											"end": 10719,
											"name": "tag",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 10666,
											"end": 10719,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10656,
											"end": 10719,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10656,
											"end": 10719,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10610,
											"end": 10729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9537,
											"end": 10736,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9537,
											"end": 10736,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 9537,
											"end": 10736,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 9537,
											"end": 10736,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9537,
											"end": 10736,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 9537,
											"end": 10736,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 9537,
											"end": 10736,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9537,
											"end": 10736,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9537,
											"end": 10736,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 9537,
											"end": 10736,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9537,
											"end": 10736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10742,
											"end": 11216,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 10742,
											"end": 11216,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10810,
											"end": 10816,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10818,
											"end": 10824,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10867,
											"end": 10869,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10855,
											"end": 10864,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10846,
											"end": 10853,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10842,
											"end": 10865,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10838,
											"end": 10870,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 10835,
											"end": 10954,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10835,
											"end": 10954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 10835,
											"end": 10954,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10873,
											"end": 10952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 10873,
											"end": 10952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 10873,
											"end": 10952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10873,
											"end": 10952,
											"name": "tag",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 10873,
											"end": 10952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10835,
											"end": 10954,
											"name": "tag",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 10835,
											"end": 10954,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10993,
											"end": 10994,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11018,
											"end": 11071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 11063,
											"end": 11070,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11054,
											"end": 11060,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11043,
											"end": 11052,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11039,
											"end": 11061,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11018,
											"end": 11071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 11018,
											"end": 11071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11018,
											"end": 11071,
											"name": "tag",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 11018,
											"end": 11071,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11008,
											"end": 11071,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11008,
											"end": 11071,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10964,
											"end": 11081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11120,
											"end": 11122,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11146,
											"end": 11199,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 11191,
											"end": 11198,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11182,
											"end": 11188,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11171,
											"end": 11180,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11167,
											"end": 11189,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11146,
											"end": 11199,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 11146,
											"end": 11199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11146,
											"end": 11199,
											"name": "tag",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 11146,
											"end": 11199,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11136,
											"end": 11199,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11136,
											"end": 11199,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11091,
											"end": 11209,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10742,
											"end": 11216,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10742,
											"end": 11216,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10742,
											"end": 11216,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10742,
											"end": 11216,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10742,
											"end": 11216,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10742,
											"end": 11216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11222,
											"end": 11402,
											"name": "tag",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 11222,
											"end": 11402,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11270,
											"end": 11347,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11267,
											"end": 11268,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11260,
											"end": 11348,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11367,
											"end": 11371,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 11364,
											"end": 11365,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11357,
											"end": 11372,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11395,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11388,
											"end": 11389,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11381,
											"end": 11396,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11408,
											"end": 11728,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 11408,
											"end": 11728,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11452,
											"end": 11458,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11489,
											"end": 11490,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 11483,
											"end": 11487,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11479,
											"end": 11491,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 11469,
											"end": 11491,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11469,
											"end": 11491,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11536,
											"end": 11537,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11530,
											"end": 11534,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11526,
											"end": 11538,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11557,
											"end": 11575,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11547,
											"end": 11628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 11547,
											"end": 11628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11613,
											"end": 11617,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 11605,
											"end": 11611,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11601,
											"end": 11618,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11591,
											"end": 11618,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11591,
											"end": 11618,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11547,
											"end": 11628,
											"name": "tag",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 11547,
											"end": 11628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11675,
											"end": 11677,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11667,
											"end": 11673,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11664,
											"end": 11678,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11644,
											"end": 11662,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11641,
											"end": 11679,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11638,
											"end": 11722,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "455"
										},
										{
											"begin": 11638,
											"end": 11722,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11694,
											"end": 11712,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 11694,
											"end": 11712,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 11694,
											"end": 11712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11694,
											"end": 11712,
											"name": "tag",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 11694,
											"end": 11712,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11638,
											"end": 11722,
											"name": "tag",
											"source": 1,
											"value": "455"
										},
										{
											"begin": 11638,
											"end": 11722,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11459,
											"end": 11728,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11408,
											"end": 11728,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11408,
											"end": 11728,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11408,
											"end": 11728,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11408,
											"end": 11728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11734,
											"end": 11914,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 11734,
											"end": 11914,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11782,
											"end": 11859,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11779,
											"end": 11780,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11772,
											"end": 11860,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11879,
											"end": 11883,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 11876,
											"end": 11877,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11869,
											"end": 11884,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11903,
											"end": 11907,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11900,
											"end": 11901,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11893,
											"end": 11908,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11920,
											"end": 12695,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 11920,
											"end": 12695,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12153,
											"end": 12157,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12191,
											"end": 12194,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 12180,
											"end": 12189,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12176,
											"end": 12195,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12168,
											"end": 12195,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12168,
											"end": 12195,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12205,
											"end": 12276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 12273,
											"end": 12274,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12262,
											"end": 12271,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12258,
											"end": 12275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12249,
											"end": 12255,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 12205,
											"end": 12276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 12205,
											"end": 12276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12205,
											"end": 12276,
											"name": "tag",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 12205,
											"end": 12276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12286,
											"end": 12358,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 12354,
											"end": 12356,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12343,
											"end": 12352,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12339,
											"end": 12357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12330,
											"end": 12336,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 12286,
											"end": 12358,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 12286,
											"end": 12358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12286,
											"end": 12358,
											"name": "tag",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 12286,
											"end": 12358,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12368,
											"end": 12440,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 12436,
											"end": 12438,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12425,
											"end": 12434,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12421,
											"end": 12439,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12412,
											"end": 12418,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 12368,
											"end": 12440,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 12368,
											"end": 12440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12368,
											"end": 12440,
											"name": "tag",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 12368,
											"end": 12440,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12450,
											"end": 12522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "462"
										},
										{
											"begin": 12518,
											"end": 12520,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 12507,
											"end": 12516,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12503,
											"end": 12521,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12494,
											"end": 12500,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12450,
											"end": 12522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 12450,
											"end": 12522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12450,
											"end": 12522,
											"name": "tag",
											"source": 1,
											"value": "462"
										},
										{
											"begin": 12450,
											"end": 12522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12532,
											"end": 12605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 12600,
											"end": 12603,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 12589,
											"end": 12598,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12585,
											"end": 12604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12576,
											"end": 12582,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12532,
											"end": 12605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 12532,
											"end": 12605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12532,
											"end": 12605,
											"name": "tag",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 12532,
											"end": 12605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12615,
											"end": 12688,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 12683,
											"end": 12686,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 12672,
											"end": 12681,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12668,
											"end": 12687,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12659,
											"end": 12665,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12615,
											"end": 12688,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 12615,
											"end": 12688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12615,
											"end": 12688,
											"name": "tag",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 12615,
											"end": 12688,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11920,
											"end": 12695,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 11920,
											"end": 12695,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 11920,
											"end": 12695,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11920,
											"end": 12695,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11920,
											"end": 12695,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11920,
											"end": 12695,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11920,
											"end": 12695,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11920,
											"end": 12695,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11920,
											"end": 12695,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11920,
											"end": 12695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12701,
											"end": 13033,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 12701,
											"end": 13033,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12822,
											"end": 12826,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12860,
											"end": 12862,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12849,
											"end": 12858,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12845,
											"end": 12863,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12837,
											"end": 12863,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12837,
											"end": 12863,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12873,
											"end": 12944,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 12941,
											"end": 12942,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12930,
											"end": 12939,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12926,
											"end": 12943,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12917,
											"end": 12923,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12873,
											"end": 12944,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 12873,
											"end": 12944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12873,
											"end": 12944,
											"name": "tag",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 12873,
											"end": 12944,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12954,
											"end": 13026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 13022,
											"end": 13024,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13011,
											"end": 13020,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13007,
											"end": 13025,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12998,
											"end": 13004,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12954,
											"end": 13026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 12954,
											"end": 13026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12954,
											"end": 13026,
											"name": "tag",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 12954,
											"end": 13026,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12701,
											"end": 13033,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 12701,
											"end": 13033,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12701,
											"end": 13033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12701,
											"end": 13033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12701,
											"end": 13033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12701,
											"end": 13033,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13039,
											"end": 13481,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 13039,
											"end": 13481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13188,
											"end": 13192,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13226,
											"end": 13228,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 13215,
											"end": 13224,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13211,
											"end": 13229,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13203,
											"end": 13229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13203,
											"end": 13229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13239,
											"end": 13310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 13307,
											"end": 13308,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13296,
											"end": 13305,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13292,
											"end": 13309,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13283,
											"end": 13289,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 13239,
											"end": 13310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 13239,
											"end": 13310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13239,
											"end": 13310,
											"name": "tag",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 13239,
											"end": 13310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13320,
											"end": 13392,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 13388,
											"end": 13390,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13377,
											"end": 13386,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13373,
											"end": 13391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13364,
											"end": 13370,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13320,
											"end": 13392,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 13320,
											"end": 13392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13320,
											"end": 13392,
											"name": "tag",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 13320,
											"end": 13392,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13402,
											"end": 13474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "471"
										},
										{
											"begin": 13470,
											"end": 13472,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13459,
											"end": 13468,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13455,
											"end": 13473,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13446,
											"end": 13452,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13402,
											"end": 13474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 13402,
											"end": 13474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13402,
											"end": 13474,
											"name": "tag",
											"source": 1,
											"value": "471"
										},
										{
											"begin": 13402,
											"end": 13474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13039,
											"end": 13481,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 13039,
											"end": 13481,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 13039,
											"end": 13481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13039,
											"end": 13481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13039,
											"end": 13481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13039,
											"end": 13481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13039,
											"end": 13481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13487,
											"end": 13667,
											"name": "tag",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 13487,
											"end": 13667,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13612,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13532,
											"end": 13533,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13525,
											"end": 13613,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13632,
											"end": 13636,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 13629,
											"end": 13630,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13622,
											"end": 13637,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13656,
											"end": 13660,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13653,
											"end": 13654,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13646,
											"end": 13661,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13673,
											"end": 13864,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 13673,
											"end": 13864,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13713,
											"end": 13716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13732,
											"end": 13752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 13750,
											"end": 13751,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13732,
											"end": 13752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 13732,
											"end": 13752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13732,
											"end": 13752,
											"name": "tag",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 13732,
											"end": 13752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13727,
											"end": 13752,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13727,
											"end": 13752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13766,
											"end": 13786,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 13784,
											"end": 13785,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13766,
											"end": 13786,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 13766,
											"end": 13786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13766,
											"end": 13786,
											"name": "tag",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 13766,
											"end": 13786,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13761,
											"end": 13786,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13761,
											"end": 13786,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13809,
											"end": 13810,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13806,
											"end": 13807,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13802,
											"end": 13811,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13795,
											"end": 13811,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13795,
											"end": 13811,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13830,
											"end": 13833,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13827,
											"end": 13828,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13824,
											"end": 13834,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 13821,
											"end": 13857,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13821,
											"end": 13857,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "476"
										},
										{
											"begin": 13821,
											"end": 13857,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13837,
											"end": 13855,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "477"
										},
										{
											"begin": 13837,
											"end": 13855,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 13837,
											"end": 13855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13837,
											"end": 13855,
											"name": "tag",
											"source": 1,
											"value": "477"
										},
										{
											"begin": 13837,
											"end": 13855,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13821,
											"end": 13857,
											"name": "tag",
											"source": 1,
											"value": "476"
										},
										{
											"begin": 13821,
											"end": 13857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13673,
											"end": 13864,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13673,
											"end": 13864,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13673,
											"end": 13864,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13673,
											"end": 13864,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13673,
											"end": 13864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13870,
											"end": 14534,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 13870,
											"end": 14534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14075,
											"end": 14079,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14113,
											"end": 14116,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 14102,
											"end": 14111,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14098,
											"end": 14117,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14090,
											"end": 14117,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14090,
											"end": 14117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14127,
											"end": 14198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "479"
										},
										{
											"begin": 14195,
											"end": 14196,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14184,
											"end": 14193,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14180,
											"end": 14197,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14171,
											"end": 14177,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 14127,
											"end": 14198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 14127,
											"end": 14198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14127,
											"end": 14198,
											"name": "tag",
											"source": 1,
											"value": "479"
										},
										{
											"begin": 14127,
											"end": 14198,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14208,
											"end": 14280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "480"
										},
										{
											"begin": 14276,
											"end": 14278,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14265,
											"end": 14274,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14261,
											"end": 14279,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14252,
											"end": 14258,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14208,
											"end": 14280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 14208,
											"end": 14280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14208,
											"end": 14280,
											"name": "tag",
											"source": 1,
											"value": "480"
										},
										{
											"begin": 14208,
											"end": 14280,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14290,
											"end": 14362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 14358,
											"end": 14360,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14347,
											"end": 14356,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14343,
											"end": 14361,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14334,
											"end": 14340,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14290,
											"end": 14362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 14290,
											"end": 14362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14290,
											"end": 14362,
											"name": "tag",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 14290,
											"end": 14362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14372,
											"end": 14444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 14440,
											"end": 14442,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 14429,
											"end": 14438,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14425,
											"end": 14443,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14416,
											"end": 14422,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14372,
											"end": 14444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 14372,
											"end": 14444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14372,
											"end": 14444,
											"name": "tag",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 14372,
											"end": 14444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14454,
											"end": 14527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "483"
										},
										{
											"begin": 14522,
											"end": 14525,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 14511,
											"end": 14520,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14507,
											"end": 14526,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14498,
											"end": 14504,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14454,
											"end": 14527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 14454,
											"end": 14527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14454,
											"end": 14527,
											"name": "tag",
											"source": 1,
											"value": "483"
										},
										{
											"begin": 14454,
											"end": 14527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13870,
											"end": 14534,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 13870,
											"end": 14534,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 13870,
											"end": 14534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13870,
											"end": 14534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13870,
											"end": 14534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13870,
											"end": 14534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13870,
											"end": 14534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13870,
											"end": 14534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13870,
											"end": 14534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14540,
											"end": 15085,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 14540,
											"end": 15085,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14713,
											"end": 14717,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14751,
											"end": 14754,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 14740,
											"end": 14749,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14736,
											"end": 14755,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14728,
											"end": 14755,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14728,
											"end": 14755,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14765,
											"end": 14836,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "485"
										},
										{
											"begin": 14833,
											"end": 14834,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14822,
											"end": 14831,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14818,
											"end": 14835,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14809,
											"end": 14815,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14765,
											"end": 14836,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 14765,
											"end": 14836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14765,
											"end": 14836,
											"name": "tag",
											"source": 1,
											"value": "485"
										},
										{
											"begin": 14765,
											"end": 14836,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14846,
											"end": 14914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "486"
										},
										{
											"begin": 14910,
											"end": 14912,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14899,
											"end": 14908,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14895,
											"end": 14913,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14886,
											"end": 14892,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14846,
											"end": 14914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 14846,
											"end": 14914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14846,
											"end": 14914,
											"name": "tag",
											"source": 1,
											"value": "486"
										},
										{
											"begin": 14846,
											"end": 14914,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14924,
											"end": 14996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "487"
										},
										{
											"begin": 14992,
											"end": 14994,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14981,
											"end": 14990,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14977,
											"end": 14995,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14968,
											"end": 14974,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14924,
											"end": 14996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 14924,
											"end": 14996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14924,
											"end": 14996,
											"name": "tag",
											"source": 1,
											"value": "487"
										},
										{
											"begin": 14924,
											"end": 14996,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15006,
											"end": 15078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 15074,
											"end": 15076,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 15063,
											"end": 15072,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15059,
											"end": 15077,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15050,
											"end": 15056,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15006,
											"end": 15078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 15006,
											"end": 15078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15006,
											"end": 15078,
											"name": "tag",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 15006,
											"end": 15078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14540,
											"end": 15085,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 14540,
											"end": 15085,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 14540,
											"end": 15085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14540,
											"end": 15085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14540,
											"end": 15085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14540,
											"end": 15085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14540,
											"end": 15085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14540,
											"end": 15085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15091,
											"end": 15271,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 15091,
											"end": 15271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15139,
											"end": 15216,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15136,
											"end": 15137,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15129,
											"end": 15217,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15236,
											"end": 15240,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 15233,
											"end": 15234,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15226,
											"end": 15241,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15260,
											"end": 15264,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 15257,
											"end": 15258,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15250,
											"end": 15265,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"Clarence_dolar_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"eip712Domain()": "84b0196e",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"owner()": "8da5cb5b",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:security-contact\":\"juand.ramirezr@ecci.edu.co\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Clarence_dolar_flattened.sol\":\"Clarence_dolar\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Clarence_dolar_flattened.sol\":{\"keccak256\":\"0x82341e729e0d25f922a61e2843d3542a40883a1e7c9f7dbbb4275fe85e25fcba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a701dbfb72c55e58edb3f7058d3a9264509f0cccf976a976ec2cc150c0426344\",\"dweb:/ipfs/QmSt65ZBeWxYamPV15QEtuN8gg7Y1wytX4q8rNL5YKcYrC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 279,
								"contract": "Clarence_dolar_flattened.sol:Clarence_dolar",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 285,
								"contract": "Clarence_dolar_flattened.sol:Clarence_dolar",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 287,
								"contract": "Clarence_dolar_flattened.sol:Clarence_dolar",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 289,
								"contract": "Clarence_dolar_flattened.sol:Clarence_dolar",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 291,
								"contract": "Clarence_dolar_flattened.sol:Clarence_dolar",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 777,
								"contract": "Clarence_dolar_flattened.sol:Clarence_dolar",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 3152,
								"contract": "Clarence_dolar_flattened.sol:Clarence_dolar",
								"label": "_nameFallback",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 3154,
								"contract": "Clarence_dolar_flattened.sol:Clarence_dolar",
								"label": "_versionFallback",
								"offset": 0,
								"slot": "7",
								"type": "t_string_storage"
							},
							{
								"astId": 3355,
								"contract": "Clarence_dolar_flattened.sol:Clarence_dolar",
								"label": "_nonces",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Clarence_dolar_flattened.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Clarence_dolar_flattened.sol\":{\"keccak256\":\"0x82341e729e0d25f922a61e2843d3542a40883a1e7c9f7dbbb4275fe85e25fcba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a701dbfb72c55e58edb3f7058d3a9264509f0cccf976a976ec2cc150c0426344\",\"dweb:/ipfs/QmSt65ZBeWxYamPV15QEtuN8gg7Y1wytX4q8rNL5YKcYrC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ECDSA": {
					"abi": [
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.",
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Clarence_dolar_flattened.sol\":29338:36724  library ECDSA {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Clarence_dolar_flattened.sol\":29338:36724  library ECDSA {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bd169c5c282c40ae90d4a64aa60e08c5197ec060918e9f1c7d8fd6e01a2f02e764736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220bd169c5c282c40ae90d4a64aa60e08c5197ec060918e9f1c7d8fd6e01a2f02e764736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD AND SWAP13 TLOAD 0x28 0x2C BLOCKHASH 0xAE SWAP1 0xD4 0xA6 BLOBBASEFEE 0xA6 0xE ADDMOD 0xC5 NOT PUSH31 0xC060918E9F1C7D8FD6E01A2F02E764736F6C634300081A0033000000000000 ",
							"sourceMap": "29338:7386:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220bd169c5c282c40ae90d4a64aa60e08c5197ec060918e9f1c7d8fd6e01a2f02e764736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD AND SWAP13 TLOAD 0x28 0x2C BLOCKHASH 0xAE SWAP1 0xD4 0xA6 BLOBBASEFEE 0xA6 0xE ADDMOD 0xC5 NOT PUSH31 0xC060918E9F1C7D8FD6E01A2F02E764736F6C634300081A0033000000000000 ",
							"sourceMap": "29338:7386:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_throwError(enum ECDSA.RecoverError,bytes32)": "infinite",
								"recover(bytes32,bytes memory)": "infinite",
								"recover(bytes32,bytes32,bytes32)": "infinite",
								"recover(bytes32,uint8,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,bytes memory)": "infinite",
								"tryRecover(bytes32,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,uint8,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 29338,
									"end": 36724,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 29338,
									"end": 36724,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 29338,
									"end": 36724,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 29338,
									"end": 36724,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 29338,
									"end": 36724,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 29338,
									"end": 36724,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 29338,
									"end": 36724,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 29338,
									"end": 36724,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29338,
									"end": 36724,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 29338,
									"end": 36724,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29338,
									"end": 36724,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 29338,
									"end": 36724,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 29338,
									"end": 36724,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 29338,
									"end": 36724,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 29338,
									"end": 36724,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 29338,
									"end": 36724,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 29338,
									"end": 36724,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29338,
									"end": 36724,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 29338,
									"end": 36724,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29338,
									"end": 36724,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 29338,
									"end": 36724,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 29338,
									"end": 36724,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 29338,
									"end": 36724,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29338,
									"end": 36724,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 29338,
									"end": 36724,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 29338,
									"end": 36724,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 29338,
									"end": 36724,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 29338,
									"end": 36724,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29338,
									"end": 36724,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 29338,
									"end": 36724,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 29338,
									"end": 36724,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29338,
									"end": 36724,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 29338,
									"end": 36724,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 29338,
									"end": 36724,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29338,
									"end": 36724,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bd169c5c282c40ae90d4a64aa60e08c5197ec060918e9f1c7d8fd6e01a2f02e764736f6c634300081a0033",
									".code": [
										{
											"begin": 29338,
											"end": 36724,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 29338,
											"end": 36724,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 29338,
											"end": 36724,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29338,
											"end": 36724,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 29338,
											"end": 36724,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29338,
											"end": 36724,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29338,
											"end": 36724,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29338,
											"end": 36724,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29338,
											"end": 36724,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"Clarence_dolar_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Clarence_dolar_flattened.sol\":\"ECDSA\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Clarence_dolar_flattened.sol\":{\"keccak256\":\"0x82341e729e0d25f922a61e2843d3542a40883a1e7c9f7dbbb4275fe85e25fcba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a701dbfb72c55e58edb3f7058d3a9264509f0cccf976a976ec2cc150c0426344\",\"dweb:/ipfs/QmSt65ZBeWxYamPV15QEtuN8gg7Y1wytX4q8rNL5YKcYrC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"EIP712": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "state-variable-immutable",
						"details": "https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.",
						"events": {
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade]."
							},
							"eip712Domain()": {
								"details": "See {IERC-5267}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"eip712Domain()": "84b0196e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Clarence_dolar_flattened.sol\":\"EIP712\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Clarence_dolar_flattened.sol\":{\"keccak256\":\"0x82341e729e0d25f922a61e2843d3542a40883a1e7c9f7dbbb4275fe85e25fcba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a701dbfb72c55e58edb3f7058d3a9264509f0cccf976a976ec2cc150c0426344\",\"dweb:/ipfs/QmSt65ZBeWxYamPV15QEtuN8gg7Y1wytX4q8rNL5YKcYrC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3152,
								"contract": "Clarence_dolar_flattened.sol:EIP712",
								"label": "_nameFallback",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 3154,
								"contract": "Clarence_dolar_flattened.sol:EIP712",
								"label": "_versionFallback",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Clarence_dolar_flattened.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Clarence_dolar_flattened.sol\":{\"keccak256\":\"0x82341e729e0d25f922a61e2843d3542a40883a1e7c9f7dbbb4275fe85e25fcba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a701dbfb72c55e58edb3f7058d3a9264509f0cccf976a976ec2cc150c0426344\",\"dweb:/ipfs/QmSt65ZBeWxYamPV15QEtuN8gg7Y1wytX4q8rNL5YKcYrC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 279,
								"contract": "Clarence_dolar_flattened.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 285,
								"contract": "Clarence_dolar_flattened.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 287,
								"contract": "Clarence_dolar_flattened.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 289,
								"contract": "Clarence_dolar_flattened.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 291,
								"contract": "Clarence_dolar_flattened.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "ERC2612ExpiredSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "signer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC2612InvalidSigner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentNonce",
									"type": "uint256"
								}
							],
							"name": "InvalidAccountNonce",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC2612ExpiredSignature(uint256)": [
								{
									"details": "Permit deadline has expired."
								}
							],
							"ERC2612InvalidSigner(address,address)": [
								{
									"details": "Mismatched signature."
								}
							],
							"InvalidAccountNonce(address,uint256)": [
								{
									"details": "The nonce used for an `account` is not the expected current nonce."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"eip712Domain()": {
								"details": "See {IERC-5267}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"eip712Domain()": "84b0196e",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Clarence_dolar_flattened.sol\":\"ERC20Permit\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Clarence_dolar_flattened.sol\":{\"keccak256\":\"0x82341e729e0d25f922a61e2843d3542a40883a1e7c9f7dbbb4275fe85e25fcba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a701dbfb72c55e58edb3f7058d3a9264509f0cccf976a976ec2cc150c0426344\",\"dweb:/ipfs/QmSt65ZBeWxYamPV15QEtuN8gg7Y1wytX4q8rNL5YKcYrC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 279,
								"contract": "Clarence_dolar_flattened.sol:ERC20Permit",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 285,
								"contract": "Clarence_dolar_flattened.sol:ERC20Permit",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 287,
								"contract": "Clarence_dolar_flattened.sol:ERC20Permit",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 289,
								"contract": "Clarence_dolar_flattened.sol:ERC20Permit",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 291,
								"contract": "Clarence_dolar_flattened.sol:ERC20Permit",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 3152,
								"contract": "Clarence_dolar_flattened.sol:ERC20Permit",
								"label": "_nameFallback",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 3154,
								"contract": "Clarence_dolar_flattened.sol:ERC20Permit",
								"label": "_versionFallback",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 3355,
								"contract": "Clarence_dolar_flattened.sol:ERC20Permit",
								"label": "_nonces",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Clarence_dolar_flattened.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Clarence_dolar_flattened.sol\":{\"keccak256\":\"0x82341e729e0d25f922a61e2843d3542a40883a1e7c9f7dbbb4275fe85e25fcba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a701dbfb72c55e58edb3f7058d3a9264509f0cccf976a976ec2cc150c0426344\",\"dweb:/ipfs/QmSt65ZBeWxYamPV15QEtuN8gg7Y1wytX4q8rNL5YKcYrC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Clarence_dolar_flattened.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Clarence_dolar_flattened.sol\":{\"keccak256\":\"0x82341e729e0d25f922a61e2843d3542a40883a1e7c9f7dbbb4275fe85e25fcba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a701dbfb72c55e58edb3f7058d3a9264509f0cccf976a976ec2cc150c0426344\",\"dweb:/ipfs/QmSt65ZBeWxYamPV15QEtuN8gg7Y1wytX4q8rNL5YKcYrC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Clarence_dolar_flattened.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Clarence_dolar_flattened.sol\":{\"keccak256\":\"0x82341e729e0d25f922a61e2843d3542a40883a1e7c9f7dbbb4275fe85e25fcba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a701dbfb72c55e58edb3f7058d3a9264509f0cccf976a976ec2cc150c0426344\",\"dweb:/ipfs/QmSt65ZBeWxYamPV15QEtuN8gg7Y1wytX4q8rNL5YKcYrC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Clarence_dolar_flattened.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Clarence_dolar_flattened.sol\":{\"keccak256\":\"0x82341e729e0d25f922a61e2843d3542a40883a1e7c9f7dbbb4275fe85e25fcba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a701dbfb72c55e58edb3f7058d3a9264509f0cccf976a976ec2cc150c0426344\",\"dweb:/ipfs/QmSt65ZBeWxYamPV15QEtuN8gg7Y1wytX4q8rNL5YKcYrC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Clarence_dolar_flattened.sol\":\"IERC20Permit\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Clarence_dolar_flattened.sol\":{\"keccak256\":\"0x82341e729e0d25f922a61e2843d3542a40883a1e7c9f7dbbb4275fe85e25fcba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a701dbfb72c55e58edb3f7058d3a9264509f0cccf976a976ec2cc150c0426344\",\"dweb:/ipfs/QmSt65ZBeWxYamPV15QEtuN8gg7Y1wytX4q8rNL5YKcYrC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC5267": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							}
						},
						"kind": "dev",
						"methods": {
							"eip712Domain()": {
								"details": "returns the fields and values that describe the domain separator used by this contract for EIP-712 signature."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"eip712Domain()": "84b0196e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Clarence_dolar_flattened.sol\":\"IERC5267\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Clarence_dolar_flattened.sol\":{\"keccak256\":\"0x82341e729e0d25f922a61e2843d3542a40883a1e7c9f7dbbb4275fe85e25fcba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a701dbfb72c55e58edb3f7058d3a9264509f0cccf976a976ec2cc150c0426344\",\"dweb:/ipfs/QmSt65ZBeWxYamPV15QEtuN8gg7Y1wytX4q8rNL5YKcYrC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Clarence_dolar_flattened.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Clarence_dolar_flattened.sol\":{\"keccak256\":\"0x82341e729e0d25f922a61e2843d3542a40883a1e7c9f7dbbb4275fe85e25fcba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a701dbfb72c55e58edb3f7058d3a9264509f0cccf976a976ec2cc150c0426344\",\"dweb:/ipfs/QmSt65ZBeWxYamPV15QEtuN8gg7Y1wytX4q8rNL5YKcYrC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Clarence_dolar_flattened.sol\":36952:51866  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Clarence_dolar_flattened.sol\":36952:51866  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d4e3ee170326c7319a98b2611d9b152d95b09088c10831746f1941705e5e5f3264736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220d4e3ee170326c7319a98b2611d9b152d95b09088c10831746f1941705e5e5f3264736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 0xE3 0xEE OR SUB 0x26 0xC7 BALANCE SWAP11 SWAP9 0xB2 PUSH2 0x1D9B ISZERO 0x2D SWAP6 0xB0 SWAP1 DUP9 0xC1 ADDMOD BALANCE PUSH21 0x6F1941705E5E5F3264736F6C634300081A00330000 ",
							"sourceMap": "36952:14914:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220d4e3ee170326c7319a98b2611d9b152d95b09088c10831746f1941705e5e5f3264736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 0xE3 0xEE OR SUB 0x26 0xC7 BALANCE SWAP11 SWAP9 0xB2 PUSH2 0x1D9B ISZERO 0x2D SWAP6 0xB0 SWAP1 DUP9 0xC1 ADDMOD BALANCE PUSH21 0x6F1941705E5E5F3264736F6C634300081A00330000 ",
							"sourceMap": "36952:14914:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 36952,
									"end": 51866,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 36952,
									"end": 51866,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 36952,
									"end": 51866,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 36952,
									"end": 51866,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 36952,
									"end": 51866,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 36952,
									"end": 51866,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 36952,
									"end": 51866,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 36952,
									"end": 51866,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36952,
									"end": 51866,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 36952,
									"end": 51866,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 36952,
									"end": 51866,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 36952,
									"end": 51866,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 36952,
									"end": 51866,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 36952,
									"end": 51866,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 36952,
									"end": 51866,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 36952,
									"end": 51866,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 36952,
									"end": 51866,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 36952,
									"end": 51866,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 36952,
									"end": 51866,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 36952,
									"end": 51866,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 36952,
									"end": 51866,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 36952,
									"end": 51866,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 36952,
									"end": 51866,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 36952,
									"end": 51866,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 36952,
									"end": 51866,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 36952,
									"end": 51866,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 36952,
									"end": 51866,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 36952,
									"end": 51866,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 36952,
									"end": 51866,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 36952,
									"end": 51866,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 36952,
									"end": 51866,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 36952,
									"end": 51866,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 36952,
									"end": 51866,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 36952,
									"end": 51866,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 36952,
									"end": 51866,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d4e3ee170326c7319a98b2611d9b152d95b09088c10831746f1941705e5e5f3264736f6c634300081a0033",
									".code": [
										{
											"begin": 36952,
											"end": 51866,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 36952,
											"end": 51866,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 36952,
											"end": 51866,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 36952,
											"end": 51866,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 36952,
											"end": 51866,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36952,
											"end": 51866,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36952,
											"end": 51866,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36952,
											"end": 51866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36952,
											"end": 51866,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"Clarence_dolar_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Clarence_dolar_flattened.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Clarence_dolar_flattened.sol\":{\"keccak256\":\"0x82341e729e0d25f922a61e2843d3542a40883a1e7c9f7dbbb4275fe85e25fcba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a701dbfb72c55e58edb3f7058d3a9264509f0cccf976a976ec2cc150c0426344\",\"dweb:/ipfs/QmSt65ZBeWxYamPV15QEtuN8gg7Y1wytX4q8rNL5YKcYrC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"MessageHashUtils": {
					"abi": [],
					"devdoc": {
						"details": "Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Clarence_dolar_flattened.sol\":56720:59955  library MessageHashUtils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Clarence_dolar_flattened.sol\":56720:59955  library MessageHashUtils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202d07f70b981a83e7e3fbac4b849446de5804886b704aafd7d9ccd56db832b5c964736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202d07f70b981a83e7e3fbac4b849446de5804886b704aafd7d9ccd56db832b5c964736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D SMOD 0xF7 SIGNEXTEND SWAP9 BYTE DUP4 0xE7 0xE3 0xFB 0xAC 0x4B DUP5 SWAP5 CHAINID 0xDE PC DIV DUP9 PUSH12 0x704AAFD7D9CCD56DB832B5C9 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "56720:3235:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202d07f70b981a83e7e3fbac4b849446de5804886b704aafd7d9ccd56db832b5c964736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D SMOD 0xF7 SIGNEXTEND SWAP9 BYTE DUP4 0xE7 0xE3 0xFB 0xAC 0x4B DUP5 SWAP5 CHAINID 0xDE PC DIV DUP9 PUSH12 0x704AAFD7D9CCD56DB832B5C9 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "56720:3235:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"toDataWithIntendedValidatorHash(address,bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes32)": "infinite",
								"toTypedDataHash(bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 56720,
									"end": 59955,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56720,
									"end": 59955,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56720,
									"end": 59955,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 56720,
									"end": 59955,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 56720,
									"end": 59955,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 56720,
									"end": 59955,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 56720,
									"end": 59955,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 56720,
									"end": 59955,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 56720,
									"end": 59955,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 56720,
									"end": 59955,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56720,
									"end": 59955,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 56720,
									"end": 59955,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 56720,
									"end": 59955,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 56720,
									"end": 59955,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 56720,
									"end": 59955,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 56720,
									"end": 59955,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56720,
									"end": 59955,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56720,
									"end": 59955,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 56720,
									"end": 59955,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56720,
									"end": 59955,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 56720,
									"end": 59955,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 56720,
									"end": 59955,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 56720,
									"end": 59955,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56720,
									"end": 59955,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 56720,
									"end": 59955,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 56720,
									"end": 59955,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 56720,
									"end": 59955,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 56720,
									"end": 59955,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56720,
									"end": 59955,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 56720,
									"end": 59955,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 56720,
									"end": 59955,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 56720,
									"end": 59955,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 56720,
									"end": 59955,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 56720,
									"end": 59955,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 56720,
									"end": 59955,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202d07f70b981a83e7e3fbac4b849446de5804886b704aafd7d9ccd56db832b5c964736f6c634300081a0033",
									".code": [
										{
											"begin": 56720,
											"end": 59955,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 56720,
											"end": 59955,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 56720,
											"end": 59955,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56720,
											"end": 59955,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 56720,
											"end": 59955,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56720,
											"end": 59955,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56720,
											"end": 59955,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56720,
											"end": 59955,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56720,
											"end": 59955,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"Clarence_dolar_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Clarence_dolar_flattened.sol\":\"MessageHashUtils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Clarence_dolar_flattened.sol\":{\"keccak256\":\"0x82341e729e0d25f922a61e2843d3542a40883a1e7c9f7dbbb4275fe85e25fcba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a701dbfb72c55e58edb3f7058d3a9264509f0cccf976a976ec2cc150c0426344\",\"dweb:/ipfs/QmSt65ZBeWxYamPV15QEtuN8gg7Y1wytX4q8rNL5YKcYrC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Nonces": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentNonce",
									"type": "uint256"
								}
							],
							"name": "InvalidAccountNonce",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Provides tracking nonces for addresses. Nonces will only increment.",
						"errors": {
							"InvalidAccountNonce(address,uint256)": [
								{
									"details": "The nonce used for an `account` is not the expected current nonce."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"nonces(address)": {
								"details": "Returns the next unused nonce for an address."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"nonces(address)": "7ecebe00"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides tracking nonces for addresses. Nonces will only increment.\",\"errors\":{\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Clarence_dolar_flattened.sol\":\"Nonces\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Clarence_dolar_flattened.sol\":{\"keccak256\":\"0x82341e729e0d25f922a61e2843d3542a40883a1e7c9f7dbbb4275fe85e25fcba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a701dbfb72c55e58edb3f7058d3a9264509f0cccf976a976ec2cc150c0426344\",\"dweb:/ipfs/QmSt65ZBeWxYamPV15QEtuN8gg7Y1wytX4q8rNL5YKcYrC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3355,
								"contract": "Clarence_dolar_flattened.sol:Nonces",
								"label": "_nonces",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Clarence_dolar_flattened.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Clarence_dolar_flattened.sol\":{\"keccak256\":\"0x82341e729e0d25f922a61e2843d3542a40883a1e7c9f7dbbb4275fe85e25fcba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a701dbfb72c55e58edb3f7058d3a9264509f0cccf976a976ec2cc150c0426344\",\"dweb:/ipfs/QmSt65ZBeWxYamPV15QEtuN8gg7Y1wytX4q8rNL5YKcYrC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 777,
								"contract": "Clarence_dolar_flattened.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ShortStrings": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Clarence_dolar_flattened.sol\":65148:68201  library ShortStrings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Clarence_dolar_flattened.sol\":65148:68201  library ShortStrings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d2d3aca4dd3832eef9695b3d2c45a2a09f488580226b97eded5a28fe7053c3e264736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220d2d3aca4dd3832eef9695b3d2c45a2a09f488580226b97eded5a28fe7053c3e264736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 0xD3 0xAC LOG4 0xDD CODESIZE ORIGIN 0xEE 0xF9 PUSH10 0x5B3D2C45A2A09F488580 0x22 PUSH12 0x97EDED5A28FE7053C3E26473 PUSH16 0x6C634300081A00330000000000000000 ",
							"sourceMap": "65148:3053:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220d2d3aca4dd3832eef9695b3d2c45a2a09f488580226b97eded5a28fe7053c3e264736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 0xD3 0xAC LOG4 0xDD CODESIZE ORIGIN 0xEE 0xF9 PUSH10 0x5B3D2C45A2A09F488580 0x22 PUSH12 0x97EDED5A28FE7053C3E26473 PUSH16 0x6C634300081A00330000000000000000 ",
							"sourceMap": "65148:3053:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"byteLength(ShortString)": "infinite",
								"byteLengthWithFallback(ShortString,string storage pointer)": "infinite",
								"toShortString(string memory)": "infinite",
								"toShortStringWithFallback(string memory,string storage pointer)": "infinite",
								"toString(ShortString)": "infinite",
								"toStringWithFallback(ShortString,string storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 65148,
									"end": 68201,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 65148,
									"end": 68201,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 65148,
									"end": 68201,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 65148,
									"end": 68201,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 65148,
									"end": 68201,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 65148,
									"end": 68201,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 65148,
									"end": 68201,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 65148,
									"end": 68201,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 65148,
									"end": 68201,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 65148,
									"end": 68201,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 65148,
									"end": 68201,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 65148,
									"end": 68201,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 65148,
									"end": 68201,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 65148,
									"end": 68201,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 65148,
									"end": 68201,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 65148,
									"end": 68201,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 65148,
									"end": 68201,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 65148,
									"end": 68201,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 65148,
									"end": 68201,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 65148,
									"end": 68201,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 65148,
									"end": 68201,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 65148,
									"end": 68201,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 65148,
									"end": 68201,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 65148,
									"end": 68201,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 65148,
									"end": 68201,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 65148,
									"end": 68201,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 65148,
									"end": 68201,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 65148,
									"end": 68201,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 65148,
									"end": 68201,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 65148,
									"end": 68201,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 65148,
									"end": 68201,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 65148,
									"end": 68201,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 65148,
									"end": 68201,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 65148,
									"end": 68201,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 65148,
									"end": 68201,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d2d3aca4dd3832eef9695b3d2c45a2a09f488580226b97eded5a28fe7053c3e264736f6c634300081a0033",
									".code": [
										{
											"begin": 65148,
											"end": 68201,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 65148,
											"end": 68201,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 65148,
											"end": 68201,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 65148,
											"end": 68201,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 65148,
											"end": 68201,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 65148,
											"end": 68201,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 65148,
											"end": 68201,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 65148,
											"end": 68201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65148,
											"end": 68201,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"Clarence_dolar_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Clarence_dolar_flattened.sol\":\"ShortStrings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Clarence_dolar_flattened.sol\":{\"keccak256\":\"0x82341e729e0d25f922a61e2843d3542a40883a1e7c9f7dbbb4275fe85e25fcba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a701dbfb72c55e58edb3f7058d3a9264509f0cccf976a976ec2cc150c0426344\",\"dweb:/ipfs/QmSt65ZBeWxYamPV15QEtuN8gg7Y1wytX4q8rNL5YKcYrC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Clarence_dolar_flattened.sol\":52113:53160  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Clarence_dolar_flattened.sol\":52113:53160  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201994a53f655533400e8223e3f12ee2d1ff5c26dc8d780dfa640017aadf654e9764736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201994a53f655533400e8223e3f12ee2d1ff5c26dc8d780dfa640017aadf654e9764736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT SWAP5 0xA5 EXTCODEHASH PUSH6 0x5533400E8223 0xE3 CALL 0x2E 0xE2 0xD1 SELFDESTRUCT TLOAD 0x26 0xDC DUP14 PUSH25 0xDFA640017AADF654E9764736F6C634300081A003300000000 ",
							"sourceMap": "52113:1047:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201994a53f655533400e8223e3f12ee2d1ff5c26dc8d780dfa640017aadf654e9764736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT SWAP5 0xA5 EXTCODEHASH PUSH6 0x5533400E8223 0xE3 CALL 0x2E 0xE2 0xD1 SELFDESTRUCT TLOAD 0x26 0xDC DUP14 PUSH25 0xDFA640017AADF654E9764736F6C634300081A003300000000 ",
							"sourceMap": "52113:1047:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 52113,
									"end": 53160,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 52113,
									"end": 53160,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 52113,
									"end": 53160,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 52113,
									"end": 53160,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 52113,
									"end": 53160,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 52113,
									"end": 53160,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 52113,
									"end": 53160,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 52113,
									"end": 53160,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 52113,
									"end": 53160,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 52113,
									"end": 53160,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 52113,
									"end": 53160,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 52113,
									"end": 53160,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 52113,
									"end": 53160,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 52113,
									"end": 53160,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 52113,
									"end": 53160,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 52113,
									"end": 53160,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 52113,
									"end": 53160,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 52113,
									"end": 53160,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 52113,
									"end": 53160,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 52113,
									"end": 53160,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 52113,
									"end": 53160,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 52113,
									"end": 53160,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 52113,
									"end": 53160,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 52113,
									"end": 53160,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 52113,
									"end": 53160,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 52113,
									"end": 53160,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 52113,
									"end": 53160,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 52113,
									"end": 53160,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 52113,
									"end": 53160,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 52113,
									"end": 53160,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 52113,
									"end": 53160,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 52113,
									"end": 53160,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 52113,
									"end": 53160,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 52113,
									"end": 53160,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 52113,
									"end": 53160,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201994a53f655533400e8223e3f12ee2d1ff5c26dc8d780dfa640017aadf654e9764736f6c634300081a0033",
									".code": [
										{
											"begin": 52113,
											"end": 53160,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 52113,
											"end": 53160,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 52113,
											"end": 53160,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 52113,
											"end": 53160,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 52113,
											"end": 53160,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52113,
											"end": 53160,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52113,
											"end": 53160,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52113,
											"end": 53160,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52113,
											"end": 53160,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"Clarence_dolar_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Clarence_dolar_flattened.sol\":\"SignedMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Clarence_dolar_flattened.sol\":{\"keccak256\":\"0x82341e729e0d25f922a61e2843d3542a40883a1e7c9f7dbbb4275fe85e25fcba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a701dbfb72c55e58edb3f7058d3a9264509f0cccf976a976ec2cc150c0426344\",\"dweb:/ipfs/QmSt65ZBeWxYamPV15QEtuN8gg7Y1wytX4q8rNL5YKcYrC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Clarence_dolar_flattened.sol\":61227:63912  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Clarence_dolar_flattened.sol\":61227:63912  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122085e21cf9e1dccdd206329802dd0e6157a305342185cb613e15a3bf30fe6448ce64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122085e21cf9e1dccdd206329802dd0e6157a305342185cb613e15a3bf30fe6448ce64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 0xE2 SHR 0xF9 0xE1 0xDC 0xCD 0xD2 MOD ORIGIN SWAP9 MUL 0xDD 0xE PUSH2 0x57A3 SDIV CALLVALUE 0x21 DUP6 0xCB PUSH2 0x3E15 LOG3 0xBF ADDRESS INVALID PUSH5 0x48CE64736F PUSH13 0x634300081A0033000000000000 ",
							"sourceMap": "61227:2685:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122085e21cf9e1dccdd206329802dd0e6157a305342185cb613e15a3bf30fe6448ce64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 0xE2 SHR 0xF9 0xE1 0xDC 0xCD 0xD2 MOD ORIGIN SWAP9 MUL 0xDD 0xE PUSH2 0x57A3 SDIV CALLVALUE 0x21 DUP6 0xCB PUSH2 0x3E15 LOG3 0xBF ADDRESS INVALID PUSH5 0x48CE64736F PUSH13 0x634300081A0033000000000000 ",
							"sourceMap": "61227:2685:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 61227,
									"end": 63912,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61227,
									"end": 63912,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61227,
									"end": 63912,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 61227,
									"end": 63912,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 61227,
									"end": 63912,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 61227,
									"end": 63912,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 61227,
									"end": 63912,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 61227,
									"end": 63912,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61227,
									"end": 63912,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 61227,
									"end": 63912,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61227,
									"end": 63912,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 61227,
									"end": 63912,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 61227,
									"end": 63912,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 61227,
									"end": 63912,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 61227,
									"end": 63912,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 61227,
									"end": 63912,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61227,
									"end": 63912,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61227,
									"end": 63912,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 61227,
									"end": 63912,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61227,
									"end": 63912,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 61227,
									"end": 63912,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 61227,
									"end": 63912,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 61227,
									"end": 63912,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61227,
									"end": 63912,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 61227,
									"end": 63912,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 61227,
									"end": 63912,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 61227,
									"end": 63912,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 61227,
									"end": 63912,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61227,
									"end": 63912,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 61227,
									"end": 63912,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 61227,
									"end": 63912,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 61227,
									"end": 63912,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 61227,
									"end": 63912,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 61227,
									"end": 63912,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 61227,
									"end": 63912,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122085e21cf9e1dccdd206329802dd0e6157a305342185cb613e15a3bf30fe6448ce64736f6c634300081a0033",
									".code": [
										{
											"begin": 61227,
											"end": 63912,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 61227,
											"end": 63912,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 61227,
											"end": 63912,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61227,
											"end": 63912,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 61227,
											"end": 63912,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61227,
											"end": 63912,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61227,
											"end": 63912,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61227,
											"end": 63912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61227,
											"end": 63912,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"Clarence_dolar_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Clarence_dolar_flattened.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Clarence_dolar_flattened.sol\":{\"keccak256\":\"0x82341e729e0d25f922a61e2843d3542a40883a1e7c9f7dbbb4275fe85e25fcba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a701dbfb72c55e58edb3f7058d3a9264509f0cccf976a976ec2cc150c0426344\",\"dweb:/ipfs/QmSt65ZBeWxYamPV15QEtuN8gg7Y1wytX4q8rNL5YKcYrC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Clarence_dolar_flattened.sol\":53347:56194  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Clarence_dolar_flattened.sol\":53347:56194  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f611a8aff64cac3c92517e9399bef16a5488b05a6829f02ae0abb6bdff8705b464736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f611a8aff64cac3c92517e9399bef16a5488b05a6829f02ae0abb6bdff8705b464736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 GT 0xA8 0xAF 0xF6 0x4C 0xAC EXTCODECOPY SWAP3 MLOAD PUSH31 0x9399BEF16A5488B05A6829F02AE0ABB6BDFF8705B464736F6C634300081A00 CALLER ",
							"sourceMap": "53347:2847:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f611a8aff64cac3c92517e9399bef16a5488b05a6829f02ae0abb6bdff8705b464736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 GT 0xA8 0xAF 0xF6 0x4C 0xAC EXTCODECOPY SWAP3 MLOAD PUSH31 0x9399BEF16A5488B05A6829F02AE0ABB6BDFF8705B464736F6C634300081A00 CALLER ",
							"sourceMap": "53347:2847:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 53347,
									"end": 56194,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 53347,
									"end": 56194,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 53347,
									"end": 56194,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 53347,
									"end": 56194,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 53347,
									"end": 56194,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 53347,
									"end": 56194,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 53347,
									"end": 56194,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 53347,
									"end": 56194,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 53347,
									"end": 56194,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 53347,
									"end": 56194,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 53347,
									"end": 56194,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 53347,
									"end": 56194,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 53347,
									"end": 56194,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 53347,
									"end": 56194,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 53347,
									"end": 56194,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 53347,
									"end": 56194,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 53347,
									"end": 56194,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 53347,
									"end": 56194,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 53347,
									"end": 56194,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 53347,
									"end": 56194,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 53347,
									"end": 56194,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 53347,
									"end": 56194,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 53347,
									"end": 56194,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 53347,
									"end": 56194,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 53347,
									"end": 56194,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 53347,
									"end": 56194,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 53347,
									"end": 56194,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 53347,
									"end": 56194,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 53347,
									"end": 56194,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 53347,
									"end": 56194,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 53347,
									"end": 56194,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 53347,
									"end": 56194,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 53347,
									"end": 56194,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 53347,
									"end": 56194,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 53347,
									"end": 56194,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f611a8aff64cac3c92517e9399bef16a5488b05a6829f02ae0abb6bdff8705b464736f6c634300081a0033",
									".code": [
										{
											"begin": 53347,
											"end": 56194,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 53347,
											"end": 56194,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 53347,
											"end": 56194,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 53347,
											"end": 56194,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 53347,
											"end": 56194,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53347,
											"end": 56194,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53347,
											"end": 56194,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53347,
											"end": 56194,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53347,
											"end": 56194,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"Clarence_dolar_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Clarence_dolar_flattened.sol\":\"Strings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Clarence_dolar_flattened.sol\":{\"keccak256\":\"0x82341e729e0d25f922a61e2843d3542a40883a1e7c9f7dbbb4275fe85e25fcba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a701dbfb72c55e58edb3f7058d3a9264509f0cccf976a976ec2cc150c0426344\",\"dweb:/ipfs/QmSt65ZBeWxYamPV15QEtuN8gg7Y1wytX4q8rNL5YKcYrC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Clarence_dolar_flattened.sol": {
				"ast": {
					"absolutePath": "Clarence_dolar_flattened.sol",
					"exportedSymbols": {
						"Clarence_dolar": [
							3603
						],
						"Context": [
							129
						],
						"ECDSA": [
							1298
						],
						"EIP712": [
							3342
						],
						"ERC20": [
							771
						],
						"ERC20Permit": [
							3552
						],
						"IERC1155Errors": [
							265
						],
						"IERC20": [
							77
						],
						"IERC20Errors": [
							170
						],
						"IERC20Metadata": [
							100
						],
						"IERC20Permit": [
							951
						],
						"IERC5267": [
							3123
						],
						"IERC721Errors": [
							218
						],
						"Math": [
							2351
						],
						"MessageHashUtils": [
							2776
						],
						"Nonces": [
							3409
						],
						"Ownable": [
							916
						],
						"ShortString": [
							2888
						],
						"ShortStrings": [
							3099
						],
						"SignedMath": [
							2455
						],
						"StorageSlot": [
							2885
						],
						"Strings": [
							2705
						]
					},
					"id": 3604,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "164:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "190:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "271:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "284:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "453:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "478:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "462:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "462:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "500:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "484:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "484:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "512:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "504:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "504:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "461:57:0"
									},
									"src": "447:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "525:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "684:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "709:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "693:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "732:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "716:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "716:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "749:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "741:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "741:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:63:0"
									},
									"src": "678:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "762:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "841:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "852:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "878:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:9:0"
									},
									"scope": 77,
									"src": "832:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "893:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "978:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "996:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "988:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "988:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "987:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1028:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1027:9:0"
									},
									"scope": 77,
									"src": "969:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "1043:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1270:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1287:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1279:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1279:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1299:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1291:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1291:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1278:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1324:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1324:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:6:0"
									},
									"scope": 77,
									"src": "1261:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1336:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1614:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1632:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1624:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1624:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1647:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1639:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1639:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1623:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1679:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1679:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1678:9:0"
									},
									"scope": 77,
									"src": "1605:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1694:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2375:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2391:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2383:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2383:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2408:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2400:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2400:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2382:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2433:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2433:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2432:6:0"
									},
									"scope": 77,
									"src": "2366:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2445:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2756:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2777:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2769:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2791:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2783:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2783:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2803:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2795:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2795:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2768:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2828:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2828:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2827:6:0"
									},
									"scope": 77,
									"src": "2747:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3604,
							"src": "261:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 78,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "3008:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 80,
										"name": "IERC20",
										"nameLocations": [
											"3150:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "3150:6:0"
									},
									"id": 81,
									"nodeType": "InheritanceSpecifier",
									"src": "3150:6:0"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 79,
								"nodeType": "StructuredDocumentation",
								"src": "3035:86:0",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 100,
							"linearizedBaseContracts": [
								100,
								77
							],
							"name": "IERC20Metadata",
							"nameLocation": "3132:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "3163:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 87,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "3231:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3235:2:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3261:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 84,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3261:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3260:15:0"
									},
									"scope": 100,
									"src": "3222:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "3282:56:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 93,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "3352:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3358:2:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3384:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 90,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3384:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:15:0"
									},
									"scope": 100,
									"src": "3343:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3405:65:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 99,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3484:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3492:2:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "3518:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 96,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3518:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3517:7:0"
									},
									"scope": 100,
									"src": "3475:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3604,
							"src": "3122:405:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 101,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "3651:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 102,
								"nodeType": "StructuredDocumentation",
								"src": "3677:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 129,
							"linearizedBaseContracts": [
								129
							],
							"name": "Context",
							"nameLocation": "4192:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "4268:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 107,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4285:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4289:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4285:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 106,
												"id": 109,
												"nodeType": "Return",
												"src": "4278:17:0"
											}
										]
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "4215:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4225:2:0"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4259:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4258:9:0"
									},
									"scope": 129,
									"src": "4206:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "4375:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 116,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4392:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4396:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "4392:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 115,
												"id": 118,
												"nodeType": "Return",
												"src": "4385:15:0"
											}
										]
									},
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "4317:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4325:2:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "4359:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 113,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4359:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4358:16:0"
									},
									"scope": 129,
									"src": "4308:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "4485:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4502:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 124,
												"id": 126,
												"nodeType": "Return",
												"src": "4495:8:0"
											}
										]
									},
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "4422:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4442:2:0"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "4476:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4476:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4475:9:0"
									},
									"scope": 129,
									"src": "4413:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3604,
							"src": "4174:338:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 130,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "4659:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 131,
								"nodeType": "StructuredDocumentation",
								"src": "4685:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 170,
							"linearizedBaseContracts": [
								170
							],
							"name": "IERC20Errors",
							"nameLocation": "4835:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "4854:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 140,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "5174:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5207:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5199:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5199:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "5223:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5215:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5215:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "5240:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5232:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5232:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5198:49:0"
									},
									"src": "5168:80:0"
								},
								{
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "5254:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 145,
									"name": "ERC20InvalidSender",
									"nameLocation": "5417:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5444:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "5436:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5436:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5435:16:0"
									},
									"src": "5411:41:0"
								},
								{
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "5458:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 150,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "5628:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5657:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5649:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5649:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5648:18:0"
									},
									"src": "5622:45:0"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "5673:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 159,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "6029:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6064:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6056:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6056:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "6081:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6073:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6073:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "6100:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6092:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6092:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6055:52:0"
									},
									"src": "6023:85:0"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "6114:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 164,
									"name": "ERC20InvalidApprover",
									"nameLocation": "6299:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "6328:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "6320:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6320:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6319:18:0"
									},
									"src": "6293:45:0"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "6344:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 169,
									"name": "ERC20InvalidSpender",
									"nameLocation": "6550:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6578:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "6570:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6569:17:0"
									},
									"src": "6544:43:0"
								}
							],
							"scope": 3604,
							"src": "4825:1764:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 171,
								"nodeType": "StructuredDocumentation",
								"src": "6591:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 218,
							"linearizedBaseContracts": [
								218
							],
							"name": "IERC721Errors",
							"nameLocation": "6743:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "6763:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 176,
									"name": "ERC721InvalidOwner",
									"nameLocation": "6993:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7020:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "7012:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7012:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7011:15:0"
									},
									"src": "6987:40:0"
								},
								{
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "7033:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 181,
									"name": "ERC721NonexistentToken",
									"nameLocation": "7176:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7207:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "7199:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7198:17:0"
									},
									"src": "7170:46:0"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "7222:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 190,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "7522:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7551:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7543:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7543:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7567:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7559:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7559:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7584:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7576:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7576:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7542:48:0"
									},
									"src": "7516:75:0"
								},
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "7597:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 195,
									"name": "ERC721InvalidSender",
									"nameLocation": "7760:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7788:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "7780:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7780:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7779:16:0"
									},
									"src": "7754:42:0"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "7802:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 200,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "7972:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "8002:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "7994:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7993:18:0"
									},
									"src": "7966:46:0"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "8018:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 207,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "8276:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8311:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "8303:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8303:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8329:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "8321:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8321:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8302:35:0"
									},
									"src": "8270:68:0"
								},
								{
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "8344:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 212,
									"name": "ERC721InvalidApprover",
									"nameLocation": "8529:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "8559:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "8551:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8551:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8550:18:0"
									},
									"src": "8523:46:0"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "8575:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 217,
									"name": "ERC721InvalidOperator",
									"nameLocation": "8783:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8813:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "8805:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8805:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8804:18:0"
									},
									"src": "8777:46:0"
								}
							],
							"scope": 3604,
							"src": "6733:2092:0",
							"usedErrors": [
								176,
								181,
								190,
								195,
								200,
								207,
								212,
								217
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 219,
								"nodeType": "StructuredDocumentation",
								"src": "8827:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 265,
							"linearizedBaseContracts": [
								265
							],
							"name": "IERC1155Errors",
							"nameLocation": "8981:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "9002:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 230,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "9374:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9409:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9401:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9401:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "9425:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9417:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9417:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "9442:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9434:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9434:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9458:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9450:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9450:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9400:66:0"
									},
									"src": "9368:99:0"
								},
								{
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "9473:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 235,
									"name": "ERC1155InvalidSender",
									"nameLocation": "9636:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9665:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "9657:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9656:16:0"
									},
									"src": "9630:43:0"
								},
								{
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "9679:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 240,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "9849:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "9880:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "9872:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9872:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9871:18:0"
									},
									"src": "9843:47:0"
								},
								{
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "9896:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 247,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "10163:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "10200:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "10192:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10192:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10218:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "10210:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10210:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10191:33:0"
									},
									"src": "10157:68:0"
								},
								{
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "10231:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 252,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "10416:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "10447:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "10439:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10439:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10438:18:0"
									},
									"src": "10410:47:0"
								},
								{
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "10463:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 257,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "10671:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "10702:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "10694:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10694:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10693:18:0"
									},
									"src": "10665:47:0"
								},
								{
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "10718:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 264,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "11009:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "11043:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "11035:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11035:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "11062:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "11054:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11054:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11034:41:0"
									},
									"src": "11003:73:0"
								}
							],
							"scope": 3604,
							"src": "8971:2107:0",
							"usedErrors": [
								230,
								235,
								240,
								247,
								252,
								257,
								264
							],
							"usedEvents": []
						},
						{
							"id": 266,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "11210:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 268,
										"name": "Context",
										"nameLocations": [
											"12320:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 129,
										"src": "12320:7:0"
									},
									"id": 269,
									"nodeType": "InheritanceSpecifier",
									"src": "12320:7:0"
								},
								{
									"baseName": {
										"id": 270,
										"name": "IERC20",
										"nameLocations": [
											"12329:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "12329:6:0"
									},
									"id": 271,
									"nodeType": "InheritanceSpecifier",
									"src": "12329:6:0"
								},
								{
									"baseName": {
										"id": 272,
										"name": "IERC20Metadata",
										"nameLocations": [
											"12337:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 100,
										"src": "12337:14:0"
									},
									"id": 273,
									"nodeType": "InheritanceSpecifier",
									"src": "12337:14:0"
								},
								{
									"baseName": {
										"id": 274,
										"name": "IERC20Errors",
										"nameLocations": [
											"12353:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 170,
										"src": "12353:12:0"
									},
									"id": 275,
									"nodeType": "InheritanceSpecifier",
									"src": "12353:12:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 267,
								"nodeType": "StructuredDocumentation",
								"src": "11240:1052:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 771,
							"linearizedBaseContracts": [
								771,
								170,
								100,
								77,
								129
							],
							"name": "ERC20",
							"nameLocation": "12311:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 279,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "12416:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12372:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 278,
										"keyName": "account",
										"keyNameLocation": "12388:7:0",
										"keyType": {
											"id": 276,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12380:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12372:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 277,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "12399:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 285,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "12504:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12432:83:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 284,
										"keyName": "account",
										"keyNameLocation": "12448:7:0",
										"keyType": {
											"id": 280,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12440:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12432:63:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 283,
											"keyName": "spender",
											"keyNameLocation": "12475:7:0",
											"keyType": {
												"id": 281,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "12467:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "12459:35:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 282,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "12486:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 287,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "12538:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12522:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 286,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12522:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 289,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "12572:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12557:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 288,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12557:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 291,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "12598:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12583:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 290,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12583:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "12844:57:0",
										"statements": [
											{
												"expression": {
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 299,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "12854:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 300,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "12862:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12854:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "12854:13:0"
											},
											{
												"expression": {
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 303,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 291,
														"src": "12877:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 304,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "12887:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12877:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 306,
												"nodeType": "ExpressionStatement",
												"src": "12877:17:0"
											}
										]
									},
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "12612:171:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 308,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "12814:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "12800:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 293,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12800:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "12835:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "12821:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 295,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12821:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12799:44:0"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12844:0:0"
									},
									"scope": 771,
									"src": "12788:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										87
									],
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "13026:29:0",
										"statements": [
											{
												"expression": {
													"id": 314,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 289,
													"src": "13043:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 313,
												"id": 315,
												"nodeType": "Return",
												"src": "13036:12:0"
											}
										]
									},
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "12907:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "12975:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12979:2:0"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "13011:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 311,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13011:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13010:15:0"
									},
									"scope": 771,
									"src": "12966:89:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										93
									],
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "13230:31:0",
										"statements": [
											{
												"expression": {
													"id": 323,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 291,
													"src": "13247:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 322,
												"id": 324,
												"nodeType": "Return",
												"src": "13240:14:0"
											}
										]
									},
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "13061:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "13177:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13183:2:0"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "13215:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 320,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13215:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13214:15:0"
									},
									"scope": 771,
									"src": "13168:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										99
									],
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "13950:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13967:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 331,
												"id": 333,
												"nodeType": "Return",
												"src": "13960:9:0"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "13267:622:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "13903:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13911:2:0"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "13943:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 329,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "13943:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13942:7:0"
									},
									"scope": 771,
									"src": "13894:82:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										26
									],
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "14097:36:0",
										"statements": [
											{
												"expression": {
													"id": 341,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 287,
													"src": "14114:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 340,
												"id": 342,
												"nodeType": "Return",
												"src": "14107:19:0"
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "13982:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "14045:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14056:2:0"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "14088:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14088:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14087:9:0"
									},
									"scope": 771,
									"src": "14036:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										34
									],
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "14265:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 352,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 279,
														"src": "14282:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 354,
													"indexExpression": {
														"id": 353,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "14292:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14282:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 351,
												"id": 355,
												"nodeType": "Return",
												"src": "14275:25:0"
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "14139:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "14200:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "14218:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "14210:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14210:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14209:17:0"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "14256:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14256:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14255:9:0"
									},
									"scope": 771,
									"src": "14191:116:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										44
									],
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "14577:103:0",
										"statements": [
											{
												"assignments": [
													368
												],
												"declarations": [
													{
														"constant": false,
														"id": 368,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "14595:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 380,
														"src": "14587:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 367,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14587:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 371,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 369,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "14603:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14603:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14587:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 373,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "14635:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 374,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "14642:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 375,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "14646:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 372,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "14625:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14625:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "14625:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14669:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 366,
												"id": 379,
												"nodeType": "Return",
												"src": "14662:11:0"
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "14313:184:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "14511:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14528:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14520:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14520:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14540:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14532:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14532:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14519:27:0"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14571:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 364,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14571:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14570:6:0"
									},
									"scope": 771,
									"src": "14502:178:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										54
									],
									"body": {
										"id": 397,
										"nodeType": "Block",
										"src": "14827:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 391,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "14844:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 393,
														"indexExpression": {
															"id": 392,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "14856:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "14844:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 395,
													"indexExpression": {
														"id": 394,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "14863:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14844:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 390,
												"id": 396,
												"nodeType": "Return",
												"src": "14837:34:0"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "14686:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "14747:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14765:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14757:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14757:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14780:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14772:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14772:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14756:32:0"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14818:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14818:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14817:9:0"
									},
									"scope": 771,
									"src": "14738:140:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										64
									],
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "15264:107:0",
										"statements": [
											{
												"assignments": [
													409
												],
												"declarations": [
													{
														"constant": false,
														"id": 409,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "15282:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 421,
														"src": "15274:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 408,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "15274:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 412,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 410,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "15290:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15290:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15274:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 414,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "15321:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 415,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "15328:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 416,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "15337:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 413,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															662,
															722
														],
														"referencedDeclaration": 662,
														"src": "15312:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15312:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "15312:31:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15360:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 407,
												"id": 420,
												"nodeType": "Return",
												"src": "15353:11:0"
											}
										]
									},
									"documentation": {
										"id": 399,
										"nodeType": "StructuredDocumentation",
										"src": "14884:296:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "15194:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "15210:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "15202:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15202:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15227:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "15219:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15201:32:0"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "15258:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 405,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15258:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15257:6:0"
									},
									"scope": 771,
									"src": "15185:186:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										76
									],
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "16024:151:0",
										"statements": [
											{
												"assignments": [
													435
												],
												"declarations": [
													{
														"constant": false,
														"id": 435,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "16042:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 453,
														"src": "16034:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 434,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16034:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 438,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 436,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "16052:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16052:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16034:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 440,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "16090:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 441,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "16096:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 442,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "16105:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 439,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "16074:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16074:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 444,
												"nodeType": "ExpressionStatement",
												"src": "16074:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 446,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "16131:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 447,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "16137:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 448,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "16141:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 445,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "16121:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16121:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "16121:26:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "16164:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 433,
												"id": 452,
												"nodeType": "Return",
												"src": "16157:11:0"
											}
										]
									},
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "15377:549:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "15940:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15961:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15953:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15953:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15975:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15967:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15967:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15987:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15979:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15979:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15952:41:0"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "16018:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 431,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16018:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16017:6:0"
									},
									"scope": 771,
									"src": "15931:244:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 500,
										"nodeType": "Block",
										"src": "16617:231:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 464,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "16631:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 465,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 468,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16631:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 478,
												"nodeType": "IfStatement",
												"src": "16627:86:0",
												"trueBody": {
													"id": 477,
													"nodeType": "Block",
													"src": "16651:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 473,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16699:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 472,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16691:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 471,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "16691:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16691:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 470,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "16672:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16672:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 476,
															"nodeType": "RevertStatement",
															"src": "16665:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 479,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "16726:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16740:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16732:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 480,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16732:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 483,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16732:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16726:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 493,
												"nodeType": "IfStatement",
												"src": "16722:86:0",
												"trueBody": {
													"id": 492,
													"nodeType": "Block",
													"src": "16744:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 488,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16794:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 487,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16786:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 486,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "16786:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16786:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 485,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "16765:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16765:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 491,
															"nodeType": "RevertStatement",
															"src": "16758:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 495,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "16825:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 496,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "16831:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 497,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "16835:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 494,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "16817:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16817:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "16817:24:0"
											}
										]
									},
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "16181:362:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "16557:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16575:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16567:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16567:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16589:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16581:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16581:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16601:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16593:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16593:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16566:41:0"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16617:0:0"
									},
									"scope": 771,
									"src": "16548:300:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "17238:1032:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 511,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "17252:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17268:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17260:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 512,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17260:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17260:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17252:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 548,
													"nodeType": "Block",
													"src": "17426:362:0",
													"statements": [
														{
															"assignments": [
																523
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 523,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "17448:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 548,
																	"src": "17440:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 522,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "17440:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 527,
															"initialValue": {
																"baseExpression": {
																	"id": 524,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 279,
																	"src": "17462:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 526,
																"indexExpression": {
																	"id": 525,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 504,
																	"src": "17472:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17462:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "17440:37:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 528,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 523,
																	"src": "17495:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 529,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "17509:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17495:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 538,
															"nodeType": "IfStatement",
															"src": "17491:115:0",
															"trueBody": {
																"id": 537,
																"nodeType": "Block",
																"src": "17516:90:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 532,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 504,
																					"src": "17566:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 533,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 523,
																					"src": "17572:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 534,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 508,
																					"src": "17585:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 531,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 140,
																				"src": "17541:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 535,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17541:50:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 536,
																		"nodeType": "RevertStatement",
																		"src": "17534:57:0"
																	}
																]
															}
														},
														{
															"id": 547,
															"nodeType": "UncheckedBlock",
															"src": "17619:159:0",
															"statements": [
																{
																	"expression": {
																		"id": 545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 539,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "17726:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 541,
																			"indexExpression": {
																				"id": 540,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 504,
																				"src": "17736:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "17726:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 542,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 523,
																				"src": "17744:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 543,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 508,
																				"src": "17758:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "17744:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17726:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 546,
																	"nodeType": "ExpressionStatement",
																	"src": "17726:37:0"
																}
															]
														}
													]
												},
												"id": 549,
												"nodeType": "IfStatement",
												"src": "17248:540:0",
												"trueBody": {
													"id": 521,
													"nodeType": "Block",
													"src": "17272:148:0",
													"statements": [
														{
															"expression": {
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 517,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 287,
																	"src": "17388:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 518,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "17404:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17388:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 520,
															"nodeType": "ExpressionStatement",
															"src": "17388:21:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 550,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "17802:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17816:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17808:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 551,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17808:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17808:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17802:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 569,
													"nodeType": "Block",
													"src": "18017:206:0",
													"statements": [
														{
															"id": 568,
															"nodeType": "UncheckedBlock",
															"src": "18031:182:0",
															"statements": [
																{
																	"expression": {
																		"id": 566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 562,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "18176:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 564,
																			"indexExpression": {
																				"id": 563,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 506,
																				"src": "18186:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "18176:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 565,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "18193:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "18176:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 567,
																	"nodeType": "ExpressionStatement",
																	"src": "18176:22:0"
																}
															]
														}
													]
												},
												"id": 570,
												"nodeType": "IfStatement",
												"src": "17798:425:0",
												"trueBody": {
													"id": 561,
													"nodeType": "Block",
													"src": "17820:191:0",
													"statements": [
														{
															"id": 560,
															"nodeType": "UncheckedBlock",
															"src": "17834:167:0",
															"statements": [
																{
																	"expression": {
																		"id": 558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 556,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 287,
																			"src": "17965:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 557,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "17981:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17965:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 559,
																	"nodeType": "ExpressionStatement",
																	"src": "17965:21:0"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 572,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "18247:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 573,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "18253:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 574,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "18257:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 571,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "18238:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18238:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 576,
												"nodeType": "EmitStatement",
												"src": "18233:30:0"
											}
										]
									},
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "16854:304:0",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "17172:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "17188:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "17180:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17180:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17202:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "17194:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17194:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17214:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "17206:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17206:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17179:41:0"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17238:0:0"
									},
									"scope": 771,
									"src": "17163:1107:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 610,
										"nodeType": "Block",
										"src": "18669:152:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 586,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "18683:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18702:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18694:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 587,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18694:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 590,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18694:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18683:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "18679:91:0",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "18706:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 595,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "18756:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 594,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "18748:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 593,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "18748:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18748:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 592,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "18727:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18727:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 598,
															"nodeType": "RevertStatement",
															"src": "18720:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18795:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18787:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 602,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18787:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18787:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 606,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "18799:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 607,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "18808:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 601,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "18779:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18779:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 609,
												"nodeType": "ExpressionStatement",
												"src": "18779:35:0"
											}
										]
									},
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "18276:332:0",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "18622:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18636:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "18628:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18628:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18653:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "18645:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18645:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18627:32:0"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18669:0:0"
									},
									"scope": 771,
									"src": "18613:208:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 643,
										"nodeType": "Block",
										"src": "19195:150:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 614,
														"src": "19209:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19228:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19220:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 620,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "19220:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 623,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19220:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "19209:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 633,
												"nodeType": "IfStatement",
												"src": "19205:89:0",
												"trueBody": {
													"id": 632,
													"nodeType": "Block",
													"src": "19232:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 628,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "19280:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 627,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "19272:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 626,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "19272:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19272:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 625,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "19253:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19253:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 631,
															"nodeType": "RevertStatement",
															"src": "19246:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 635,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "19311:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19328:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19320:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 636,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19320:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19320:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 640,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "19332:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 634,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "19303:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19303:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "19303:35:0"
											}
										]
									},
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "18827:307:0",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "19148:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "19162:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "19154:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19154:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19179:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "19171:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19171:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19153:32:0"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19195:0:0"
									},
									"scope": 771,
									"src": "19139:206:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "19955:54:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 655,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "19974:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 656,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "19981:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 657,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "19990:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19997:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 654,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															662,
															722
														],
														"referencedDeclaration": 722,
														"src": "19965:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19965:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 660,
												"nodeType": "ExpressionStatement",
												"src": "19965:37:0"
											}
										]
									},
									"documentation": {
										"id": 645,
										"nodeType": "StructuredDocumentation",
										"src": "19351:525:0",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "19890:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "19907:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19899:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19899:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "19922:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19914:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19914:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19939:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19931:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19931:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19898:47:0"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19955:0:0"
									},
									"scope": 771,
									"src": "19881:128:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 721,
										"nodeType": "Block",
										"src": "20939:334:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 674,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 665,
														"src": "20953:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20970:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20962:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 675,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20962:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 678,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20962:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20953:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 688,
												"nodeType": "IfStatement",
												"src": "20949:89:0",
												"trueBody": {
													"id": 687,
													"nodeType": "Block",
													"src": "20974:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 683,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21024:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 682,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "21016:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 681,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "21016:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21016:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 680,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "20995:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20995:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 686,
															"nodeType": "RevertStatement",
															"src": "20988:39:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 689,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "21051:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21070:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21062:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 690,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "21062:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 693,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21062:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "21051:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 703,
												"nodeType": "IfStatement",
												"src": "21047:90:0",
												"trueBody": {
													"id": 702,
													"nodeType": "Block",
													"src": "21074:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 698,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21123:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 697,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "21115:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 696,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "21115:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21115:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 695,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "21095:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21095:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 701,
															"nodeType": "RevertStatement",
															"src": "21088:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 704,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "21146:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 707,
															"indexExpression": {
																"id": 705,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 665,
																"src": "21158:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "21146:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 708,
														"indexExpression": {
															"id": 706,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "21165:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "21146:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 709,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "21176:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21146:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 711,
												"nodeType": "ExpressionStatement",
												"src": "21146:35:0"
											},
											{
												"condition": {
													"id": 712,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 671,
													"src": "21195:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 720,
												"nodeType": "IfStatement",
												"src": "21191:76:0",
												"trueBody": {
													"id": 719,
													"nodeType": "Block",
													"src": "21206:61:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 714,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 665,
																		"src": "21234:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 715,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 667,
																		"src": "21241:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 716,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "21250:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 713,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "21225:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21225:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 718,
															"nodeType": "EmitStatement",
															"src": "21220:36:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 663,
										"nodeType": "StructuredDocumentation",
										"src": "20015:821:0",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "20850:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "20867:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20859:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20859:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "20882:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20874:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20874:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20899:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20891:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20891:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "20911:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20906:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 670,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20906:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20858:63:0"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20939:0:0"
									},
									"scope": 771,
									"src": "20841:432:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 769,
										"nodeType": "Block",
										"src": "21644:388:0",
										"statements": [
											{
												"assignments": [
													733
												],
												"declarations": [
													{
														"constant": false,
														"id": 733,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "21662:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 769,
														"src": "21654:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 732,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21654:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 738,
												"initialValue": {
													"arguments": [
														{
															"id": 735,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "21691:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 736,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "21698:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 734,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "21681:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21681:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21654:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 739,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 733,
														"src": "21720:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21745:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 741,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "21745:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 740,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "21740:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21740:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 744,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "21754:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "21740:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21720:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 768,
												"nodeType": "IfStatement",
												"src": "21716:310:0",
												"trueBody": {
													"id": 767,
													"nodeType": "Block",
													"src": "21759:267:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 746,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 733,
																	"src": "21777:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 747,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 729,
																	"src": "21796:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21777:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 756,
															"nodeType": "IfStatement",
															"src": "21773:130:0",
															"trueBody": {
																"id": 755,
																"nodeType": "Block",
																"src": "21803:100:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 750,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 727,
																					"src": "21855:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 751,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 733,
																					"src": "21864:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 752,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 729,
																					"src": "21882:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 749,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "21828:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 753,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "21828:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 754,
																		"nodeType": "RevertStatement",
																		"src": "21821:67:0"
																	}
																]
															}
														},
														{
															"id": 766,
															"nodeType": "UncheckedBlock",
															"src": "21916:100:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 758,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 725,
																				"src": "21953:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 759,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 727,
																				"src": "21960:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 762,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 760,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 733,
																					"src": "21969:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 761,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 729,
																					"src": "21988:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "21969:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 763,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21995:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 757,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				662,
																				722
																			],
																			"referencedDeclaration": 722,
																			"src": "21944:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 764,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21944:57:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 765,
																	"nodeType": "ExpressionStatement",
																	"src": "21944:57:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "21279:271:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "21564:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "21588:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21580:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21580:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "21603:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21595:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21595:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21620:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21612:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21579:47:0"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21644:0:0"
									},
									"scope": 771,
									"src": "21555:477:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3604,
							"src": "12293:9741:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169
							],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 772,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "22160:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 774,
										"name": "Context",
										"nameLocations": [
											"22704:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 129,
										"src": "22704:7:0"
									},
									"id": 775,
									"nodeType": "InheritanceSpecifier",
									"src": "22704:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 773,
								"nodeType": "StructuredDocumentation",
								"src": "22187:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 916,
							"linearizedBaseContracts": [
								916,
								129
							],
							"name": "Ownable",
							"nameLocation": "22693:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 777,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "22734:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 916,
									"src": "22718:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 776,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "22718:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 778,
										"nodeType": "StructuredDocumentation",
										"src": "22747:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 782,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "22843:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "22878:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "22870:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22870:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22869:17:0"
									},
									"src": "22837:50:0"
								},
								{
									"documentation": {
										"id": 783,
										"nodeType": "StructuredDocumentation",
										"src": "22893:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 787,
									"name": "OwnableInvalidOwner",
									"nameLocation": "22986:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "23014:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "23006:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23006:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23005:15:0"
									},
									"src": "22980:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 793,
									"name": "OwnershipTransferred",
									"nameLocation": "23033:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "23070:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "23054:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23054:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "23101:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "23085:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23085:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23053:57:0"
									},
									"src": "23027:84:0"
								},
								{
									"body": {
										"id": 818,
										"nodeType": "Block",
										"src": "23271:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 799,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "23285:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 802,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23309:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23301:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 800,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "23301:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 803,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23301:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "23285:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 813,
												"nodeType": "IfStatement",
												"src": "23281:95:0",
												"trueBody": {
													"id": 812,
													"nodeType": "Block",
													"src": "23313:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 808,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "23362:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 807,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "23354:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 806,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "23354:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "23354:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 805,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 787,
																	"src": "23334:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23334:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 811,
															"nodeType": "RevertStatement",
															"src": "23327:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 815,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "23404:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 814,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "23385:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23385:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 817,
												"nodeType": "ExpressionStatement",
												"src": "23385:32:0"
											}
										]
									},
									"documentation": {
										"id": 794,
										"nodeType": "StructuredDocumentation",
										"src": "23117:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 819,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "23257:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "23249:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 795,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23249:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23248:22:0"
									},
									"returnParameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23271:0:0"
									},
									"scope": 916,
									"src": "23237:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 826,
										"nodeType": "Block",
										"src": "23533:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 822,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "23543:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23543:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 824,
												"nodeType": "ExpressionStatement",
												"src": "23543:13:0"
											},
											{
												"id": 825,
												"nodeType": "PlaceholderStatement",
												"src": "23566:1:0"
											}
										]
									},
									"documentation": {
										"id": 820,
										"nodeType": "StructuredDocumentation",
										"src": "23430:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 827,
									"name": "onlyOwner",
									"nameLocation": "23521:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23530:2:0"
									},
									"src": "23512:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 835,
										"nodeType": "Block",
										"src": "23705:30:0",
										"statements": [
											{
												"expression": {
													"id": 833,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 777,
													"src": "23722:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 832,
												"id": 834,
												"nodeType": "Return",
												"src": "23715:13:0"
											}
										]
									},
									"documentation": {
										"id": 828,
										"nodeType": "StructuredDocumentation",
										"src": "23580:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 836,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "23659:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23664:2:0"
									},
									"returnParameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "23696:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23696:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23695:9:0"
									},
									"scope": 916,
									"src": "23650:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 852,
										"nodeType": "Block",
										"src": "23853:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 840,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "23867:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 841,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23867:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 842,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "23878:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 843,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23878:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "23867:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 851,
												"nodeType": "IfStatement",
												"src": "23863:101:0",
												"trueBody": {
													"id": 850,
													"nodeType": "Block",
													"src": "23892:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 846,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 111,
																			"src": "23940:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "23940:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 845,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 782,
																	"src": "23913:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23913:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 849,
															"nodeType": "RevertStatement",
															"src": "23906:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 837,
										"nodeType": "StructuredDocumentation",
										"src": "23741:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "23817:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23828:2:0"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23853:0:0"
									},
									"scope": 916,
									"src": "23808:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 866,
										"nodeType": "Block",
										"src": "24359:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24396:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "24388:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 860,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "24388:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24388:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 859,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "24369:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24369:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 865,
												"nodeType": "ExpressionStatement",
												"src": "24369:30:0"
											}
										]
									},
									"documentation": {
										"id": 854,
										"nodeType": "StructuredDocumentation",
										"src": "23976:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 867,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 857,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 856,
												"name": "onlyOwner",
												"nameLocations": [
													"24349:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 827,
												"src": "24349:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "24349:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "24314:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24331:2:0"
									},
									"returnParameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24359:0:0"
									},
									"scope": 916,
									"src": "24305:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 894,
										"nodeType": "Block",
										"src": "24625:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 875,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "24639:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24659:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 877,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24651:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 876,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "24651:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 879,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24651:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "24639:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 889,
												"nodeType": "IfStatement",
												"src": "24635:91:0",
												"trueBody": {
													"id": 888,
													"nodeType": "Block",
													"src": "24663:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 884,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24712:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 883,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "24704:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 882,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "24704:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "24704:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 881,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 787,
																	"src": "24684:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 886,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24684:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 887,
															"nodeType": "RevertStatement",
															"src": "24677:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 891,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "24754:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 890,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "24735:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24735:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 893,
												"nodeType": "ExpressionStatement",
												"src": "24735:28:0"
											}
										]
									},
									"documentation": {
										"id": 868,
										"nodeType": "StructuredDocumentation",
										"src": "24412:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 895,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 873,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 872,
												"name": "onlyOwner",
												"nameLocations": [
													"24615:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 827,
												"src": "24615:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "24615:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "24564:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "24590:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "24582:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24582:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24581:18:0"
									},
									"returnParameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24625:0:0"
									},
									"scope": 916,
									"src": "24555:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "24987:124:0",
										"statements": [
											{
												"assignments": [
													902
												],
												"declarations": [
													{
														"constant": false,
														"id": 902,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "25005:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 914,
														"src": "24997:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 901,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "24997:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 904,
												"initialValue": {
													"id": 903,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 777,
													"src": "25016:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24997:25:0"
											},
											{
												"expression": {
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 905,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 777,
														"src": "25032:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 906,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 898,
														"src": "25041:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "25032:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 908,
												"nodeType": "ExpressionStatement",
												"src": "25032:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 910,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "25085:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 911,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "25095:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 909,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "25064:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25064:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 913,
												"nodeType": "EmitStatement",
												"src": "25059:45:0"
											}
										]
									},
									"documentation": {
										"id": 896,
										"nodeType": "StructuredDocumentation",
										"src": "24776:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "24933:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "24960:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "24952:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24952:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24951:18:0"
									},
									"returnParameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24987:0:0"
									},
									"scope": 916,
									"src": "24924:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3604,
							"src": "22675:2438:0",
							"usedErrors": [
								782,
								787
							],
							"usedEvents": [
								793
							]
						},
						{
							"id": 917,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "25281:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 918,
								"nodeType": "StructuredDocumentation",
								"src": "25307:1963:0",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 951,
							"linearizedBaseContracts": [
								951
							],
							"name": "IERC20Permit",
							"nameLocation": "27281:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 919,
										"nodeType": "StructuredDocumentation",
										"src": "27300:850:0",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 936,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "28164:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "28188:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "28180:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28180:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "28211:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "28203:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 922,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28203:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28236:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "28228:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28228:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "28259:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "28251:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28251:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "28283:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "28277:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 928,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "28277:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "28302:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "28294:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 930,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "28294:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "28321:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "28313:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 932,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "28313:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28170:158:0"
									},
									"returnParameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28337:0:0"
									},
									"scope": 951,
									"src": "28155:183:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 937,
										"nodeType": "StructuredDocumentation",
										"src": "28344:294:0",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 944,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "28652:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "28667:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "28659:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28659:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28658:15:0"
									},
									"returnParameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "28697:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28697:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28696:9:0"
									},
									"scope": 951,
									"src": "28643:63:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 945,
										"nodeType": "StructuredDocumentation",
										"src": "28712:128:0",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 950,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "28907:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28923:2:0"
									},
									"returnParameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "28949:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 947,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "28949:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28948:9:0"
									},
									"scope": 951,
									"src": "28898:60:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3604,
							"src": "27271:1689:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 952,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "29106:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ECDSA",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 953,
								"nodeType": "StructuredDocumentation",
								"src": "29132:205:0",
								"text": " @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."
							},
							"fullyImplemented": true,
							"id": 1298,
							"linearizedBaseContracts": [
								1298
							],
							"name": "ECDSA",
							"nameLocation": "29346:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ECDSA.RecoverError",
									"id": 958,
									"members": [
										{
											"id": 954,
											"name": "NoError",
											"nameLocation": "29386:7:0",
											"nodeType": "EnumValue",
											"src": "29386:7:0"
										},
										{
											"id": 955,
											"name": "InvalidSignature",
											"nameLocation": "29403:16:0",
											"nodeType": "EnumValue",
											"src": "29403:16:0"
										},
										{
											"id": 956,
											"name": "InvalidSignatureLength",
											"nameLocation": "29429:22:0",
											"nodeType": "EnumValue",
											"src": "29429:22:0"
										},
										{
											"id": 957,
											"name": "InvalidSignatureS",
											"nameLocation": "29461:17:0",
											"nodeType": "EnumValue",
											"src": "29461:17:0"
										}
									],
									"name": "RecoverError",
									"nameLocation": "29363:12:0",
									"nodeType": "EnumDefinition",
									"src": "29358:126:0"
								},
								{
									"documentation": {
										"id": 959,
										"nodeType": "StructuredDocumentation",
										"src": "29490:63:0",
										"text": " @dev The signature derives the `address(0)`."
									},
									"errorSelector": "f645eedf",
									"id": 961,
									"name": "ECDSAInvalidSignature",
									"nameLocation": "29564:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29585:2:0"
									},
									"src": "29558:30:0"
								},
								{
									"documentation": {
										"id": 962,
										"nodeType": "StructuredDocumentation",
										"src": "29594:60:0",
										"text": " @dev The signature has an invalid length."
									},
									"errorSelector": "fce698f7",
									"id": 966,
									"name": "ECDSAInvalidSignatureLength",
									"nameLocation": "29665:27:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "29701:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "29693:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29693:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29692:16:0"
									},
									"src": "29659:50:0"
								},
								{
									"documentation": {
										"id": 967,
										"nodeType": "StructuredDocumentation",
										"src": "29715:85:0",
										"text": " @dev The signature has an S value that is in the upper half order."
									},
									"errorSelector": "d78bce0c",
									"id": 971,
									"name": "ECDSAInvalidSignatureS",
									"nameLocation": "29811:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "29842:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "29834:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 968,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "29834:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29833:11:0"
									},
									"src": "29805:40:0"
								},
								{
									"body": {
										"id": 1023,
										"nodeType": "Block",
										"src": "31236:653:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 986,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "31250:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 987,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "31260:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "31250:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3635",
														"id": 988,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "31270:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65_by_1",
															"typeString": "int_const 65"
														},
														"value": "65"
													},
													"src": "31250:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1021,
													"nodeType": "Block",
													"src": "31775:108:0",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1010,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "31805:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1009,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "31797:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1008,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "31797:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1011,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "31797:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1012,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 958,
																			"src": "31809:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$958_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 1013,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "31822:22:0",
																		"memberName": "InvalidSignatureLength",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 956,
																		"src": "31809:35:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$958",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1016,
																					"name": "signature",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 976,
																					"src": "31854:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 1017,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "31864:6:0",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "31854:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1015,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "31846:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 1014,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "31846:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1018,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "31846:25:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 1019,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "31796:76:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$958_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 985,
															"id": 1020,
															"nodeType": "Return",
															"src": "31789:83:0"
														}
													]
												},
												"id": 1022,
												"nodeType": "IfStatement",
												"src": "31246:637:0",
												"trueBody": {
													"id": 1007,
													"nodeType": "Block",
													"src": "31274:495:0",
													"statements": [
														{
															"assignments": [
																991
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 991,
																	"mutability": "mutable",
																	"name": "r",
																	"nameLocation": "31296:1:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1007,
																	"src": "31288:9:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 990,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "31288:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 992,
															"nodeType": "VariableDeclarationStatement",
															"src": "31288:9:0"
														},
														{
															"assignments": [
																994
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 994,
																	"mutability": "mutable",
																	"name": "s",
																	"nameLocation": "31319:1:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1007,
																	"src": "31311:9:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 993,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "31311:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 995,
															"nodeType": "VariableDeclarationStatement",
															"src": "31311:9:0"
														},
														{
															"assignments": [
																997
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 997,
																	"mutability": "mutable",
																	"name": "v",
																	"nameLocation": "31340:1:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1007,
																	"src": "31334:7:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 996,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "31334:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 998,
															"nodeType": "VariableDeclarationStatement",
															"src": "31334:7:0"
														},
														{
															"AST": {
																"nativeSrc": "31542:171:0",
																"nodeType": "YulBlock",
																"src": "31542:171:0",
																"statements": [
																	{
																		"nativeSrc": "31560:32:0",
																		"nodeType": "YulAssignment",
																		"src": "31560:32:0",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "31575:9:0",
																							"nodeType": "YulIdentifier",
																							"src": "31575:9:0"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "31586:4:0",
																							"nodeType": "YulLiteral",
																							"src": "31586:4:0",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "31571:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "31571:3:0"
																					},
																					"nativeSrc": "31571:20:0",
																					"nodeType": "YulFunctionCall",
																					"src": "31571:20:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "31565:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "31565:5:0"
																			},
																			"nativeSrc": "31565:27:0",
																			"nodeType": "YulFunctionCall",
																			"src": "31565:27:0"
																		},
																		"variableNames": [
																			{
																				"name": "r",
																				"nativeSrc": "31560:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "31560:1:0"
																			}
																		]
																	},
																	{
																		"nativeSrc": "31609:32:0",
																		"nodeType": "YulAssignment",
																		"src": "31609:32:0",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "31624:9:0",
																							"nodeType": "YulIdentifier",
																							"src": "31624:9:0"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "31635:4:0",
																							"nodeType": "YulLiteral",
																							"src": "31635:4:0",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "31620:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "31620:3:0"
																					},
																					"nativeSrc": "31620:20:0",
																					"nodeType": "YulFunctionCall",
																					"src": "31620:20:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "31614:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "31614:5:0"
																			},
																			"nativeSrc": "31614:27:0",
																			"nodeType": "YulFunctionCall",
																			"src": "31614:27:0"
																		},
																		"variableNames": [
																			{
																				"name": "s",
																				"nativeSrc": "31609:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "31609:1:0"
																			}
																		]
																	},
																	{
																		"nativeSrc": "31658:41:0",
																		"nodeType": "YulAssignment",
																		"src": "31658:41:0",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "31668:1:0",
																					"nodeType": "YulLiteral",
																					"src": "31668:1:0",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "signature",
																									"nativeSrc": "31681:9:0",
																									"nodeType": "YulIdentifier",
																									"src": "31681:9:0"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "31692:4:0",
																									"nodeType": "YulLiteral",
																									"src": "31692:4:0",
																									"type": "",
																									"value": "0x60"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "31677:3:0",
																								"nodeType": "YulIdentifier",
																								"src": "31677:3:0"
																							},
																							"nativeSrc": "31677:20:0",
																							"nodeType": "YulFunctionCall",
																							"src": "31677:20:0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "31671:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "31671:5:0"
																					},
																					"nativeSrc": "31671:27:0",
																					"nodeType": "YulFunctionCall",
																					"src": "31671:27:0"
																				}
																			],
																			"functionName": {
																				"name": "byte",
																				"nativeSrc": "31663:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "31663:4:0"
																			},
																			"nativeSrc": "31663:36:0",
																			"nodeType": "YulFunctionCall",
																			"src": "31663:36:0"
																		},
																		"variableNames": [
																			{
																				"name": "v",
																				"nativeSrc": "31658:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "31658:1:0"
																			}
																		]
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 991,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "31560:1:0",
																	"valueSize": 1
																},
																{
																	"declaration": 994,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "31609:1:0",
																	"valueSize": 1
																},
																{
																	"declaration": 976,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "31575:9:0",
																	"valueSize": 1
																},
																{
																	"declaration": 976,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "31624:9:0",
																	"valueSize": 1
																},
																{
																	"declaration": 976,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "31681:9:0",
																	"valueSize": 1
																},
																{
																	"declaration": 997,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "31658:1:0",
																	"valueSize": 1
																}
															],
															"id": 999,
															"nodeType": "InlineAssembly",
															"src": "31533:180:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1001,
																		"name": "hash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 974,
																		"src": "31744:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1002,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 997,
																		"src": "31750:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"id": 1003,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 991,
																		"src": "31753:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1004,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 994,
																		"src": "31756:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 1000,
																	"name": "tryRecover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1024,
																		1104,
																		1212
																	],
																	"referencedDeclaration": 1212,
																	"src": "31733:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$958_$_t_bytes32_$",
																		"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																	}
																},
																"id": 1005,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31733:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$958_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 985,
															"id": 1006,
															"nodeType": "Return",
															"src": "31726:32:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 972,
										"nodeType": "StructuredDocumentation",
										"src": "29851:1267:0",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"
									},
									"id": 1024,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "31132:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "31151:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "31143:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 973,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "31143:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "31170:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "31157:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 975,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "31157:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31142:38:0"
									},
									"returnParameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "31204:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 978,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31204:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "31213:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$958",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 981,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 980,
														"name": "RecoverError",
														"nameLocations": [
															"31213:12:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 958,
														"src": "31213:12:0"
													},
													"referencedDeclaration": 958,
													"src": "31213:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$958",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "31227:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 983,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "31227:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31203:32:0"
									},
									"scope": 1298,
									"src": "31123:766:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1053,
										"nodeType": "Block",
										"src": "32783:168:0",
										"statements": [
											{
												"assignments": [
													1035,
													1038,
													1040
												],
												"declarations": [
													{
														"constant": false,
														"id": 1035,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "32802:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 1053,
														"src": "32794:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1034,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "32794:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1038,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "32826:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1053,
														"src": "32813:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$958",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 1037,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1036,
																"name": "RecoverError",
																"nameLocations": [
																	"32813:12:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 958,
																"src": "32813:12:0"
															},
															"referencedDeclaration": 958,
															"src": "32813:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$958",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1040,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "32841:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1053,
														"src": "32833:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1039,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "32833:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1045,
												"initialValue": {
													"arguments": [
														{
															"id": 1042,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1027,
															"src": "32864:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1043,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "32870:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1041,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1024,
															1104,
															1212
														],
														"referencedDeclaration": 1024,
														"src": "32853:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$958_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32853:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$958_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32793:87:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1047,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1038,
															"src": "32902:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$958",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 1048,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1040,
															"src": "32909:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$958",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1046,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1297,
														"src": "32890:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$958_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32890:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1050,
												"nodeType": "ExpressionStatement",
												"src": "32890:28:0"
											},
											{
												"expression": {
													"id": 1051,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1035,
													"src": "32935:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1033,
												"id": 1052,
												"nodeType": "Return",
												"src": "32928:16:0"
											}
										]
									},
									"documentation": {
										"id": 1025,
										"nodeType": "StructuredDocumentation",
										"src": "31895:796:0",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."
									},
									"id": 1054,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "32705:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "32721:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "32713:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1026,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "32713:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "32740:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "32727:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1028,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "32727:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32712:38:0"
									},
									"returnParameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "32774:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32774:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32773:9:0"
									},
									"scope": 1298,
									"src": "32696:255:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1103,
										"nodeType": "Block",
										"src": "33279:342:0",
										"statements": [
											{
												"id": 1102,
												"nodeType": "UncheckedBlock",
												"src": "33289:326:0",
												"statements": [
													{
														"assignments": [
															1072
														],
														"declarations": [
															{
																"constant": false,
																"id": 1072,
																"mutability": "mutable",
																"name": "s",
																"nameLocation": "33321:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 1102,
																"src": "33313:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"typeName": {
																	"id": 1071,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "33313:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1079,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 1078,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1073,
																"name": "vs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1061,
																"src": "33325:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666",
																		"id": 1076,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33338:66:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		},
																		"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		}
																	],
																	"id": 1075,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "33330:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 1074,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "33330:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1077,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33330:75:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "33325:80:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "33313:92:0"
													},
													{
														"assignments": [
															1081
														],
														"declarations": [
															{
																"constant": false,
																"id": 1081,
																"mutability": "mutable",
																"name": "v",
																"nameLocation": "33522:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 1102,
																"src": "33516:7:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"typeName": {
																	"id": 1080,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "33516:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1094,
														"initialValue": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1089,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [
																						{
																							"id": 1086,
																							"name": "vs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1061,
																							"src": "33541:2:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 1085,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "33533:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 1084,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "33533:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1087,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "33533:11:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"hexValue": "323535",
																					"id": 1088,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "33548:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_255_by_1",
																						"typeString": "int_const 255"
																					},
																					"value": "255"
																				},
																				"src": "33533:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1090,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "33532:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "3237",
																		"id": 1091,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33555:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_27_by_1",
																			"typeString": "int_const 27"
																		},
																		"value": "27"
																	},
																	"src": "33532:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1083,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "33526:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 1082,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "33526:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33526:32:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "33516:42:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1096,
																	"name": "hash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1057,
																	"src": "33590:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1097,
																	"name": "v",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1081,
																	"src": "33596:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																{
																	"id": 1098,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1059,
																	"src": "33599:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1099,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1072,
																	"src": "33602:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 1095,
																"name": "tryRecover",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1024,
																	1104,
																	1212
																],
																"referencedDeclaration": 1212,
																"src": "33579:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$958_$_t_bytes32_$",
																	"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33579:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$958_$_t_bytes32_$",
																"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
															}
														},
														"functionReturnParameters": 1070,
														"id": 1101,
														"nodeType": "Return",
														"src": "33572:32:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1055,
										"nodeType": "StructuredDocumentation",
										"src": "32957:205:0",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]"
									},
									"id": 1104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "33176:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "33195:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "33187:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1056,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "33187:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "33209:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "33201:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1058,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "33201:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "33220:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "33212:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1060,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "33212:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33186:37:0"
									},
									"returnParameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "33247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1063,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "33256:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$958",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1066,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1065,
														"name": "RecoverError",
														"nameLocations": [
															"33256:12:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 958,
														"src": "33256:12:0"
													},
													"referencedDeclaration": 958,
													"src": "33256:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$958",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "33270:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1068,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "33270:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33246:32:0"
									},
									"scope": 1298,
									"src": "33167:454:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1136,
										"nodeType": "Block",
										"src": "33834:164:0",
										"statements": [
											{
												"assignments": [
													1117,
													1120,
													1122
												],
												"declarations": [
													{
														"constant": false,
														"id": 1117,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "33853:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 1136,
														"src": "33845:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1116,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "33845:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1120,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "33877:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1136,
														"src": "33864:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$958",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 1119,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1118,
																"name": "RecoverError",
																"nameLocations": [
																	"33864:12:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 958,
																"src": "33864:12:0"
															},
															"referencedDeclaration": 958,
															"src": "33864:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$958",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1122,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "33892:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1136,
														"src": "33884:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1121,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "33884:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1128,
												"initialValue": {
													"arguments": [
														{
															"id": 1124,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1107,
															"src": "33915:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1125,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1109,
															"src": "33921:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1126,
															"name": "vs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1111,
															"src": "33924:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1123,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1024,
															1104,
															1212
														],
														"referencedDeclaration": 1104,
														"src": "33904:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$958_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 1127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33904:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$958_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33844:83:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1130,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1120,
															"src": "33949:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$958",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 1131,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1122,
															"src": "33956:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$958",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1129,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1297,
														"src": "33937:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$958_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 1132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33937:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1133,
												"nodeType": "ExpressionStatement",
												"src": "33937:28:0"
											},
											{
												"expression": {
													"id": 1134,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1117,
													"src": "33982:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1115,
												"id": 1135,
												"nodeType": "Return",
												"src": "33975:16:0"
											}
										]
									},
									"documentation": {
										"id": 1105,
										"nodeType": "StructuredDocumentation",
										"src": "33627:116:0",
										"text": " @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."
									},
									"id": 1137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "33757:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "33773:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "33765:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1106,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "33765:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "33787:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "33779:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1108,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "33779:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "33798:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "33790:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1110,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "33790:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33764:37:0"
									},
									"returnParameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "33825:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33825:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33824:9:0"
									},
									"scope": 1298,
									"src": "33748:250:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1211,
										"nodeType": "Block",
										"src": "34292:1372:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1158,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1146,
																"src": "35188:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 1157,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "35180:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1156,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "35180:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1159,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "35180:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
														"id": 1160,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "35193:66:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1",
															"typeString": "int_const 5789...(69 digits omitted)...7168"
														},
														"value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
													},
													"src": "35180:79:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1172,
												"nodeType": "IfStatement",
												"src": "35176:164:0",
												"trueBody": {
													"id": 1171,
													"nodeType": "Block",
													"src": "35261:79:0",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1164,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "35291:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1163,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "35283:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1162,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "35283:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1165,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "35283:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1166,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 958,
																			"src": "35295:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$958_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 1167,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "35308:17:0",
																		"memberName": "InvalidSignatureS",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 957,
																		"src": "35295:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$958",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"id": 1168,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1146,
																		"src": "35327:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 1169,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "35282:47:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$958_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 1155,
															"id": 1170,
															"nodeType": "Return",
															"src": "35275:54:0"
														}
													]
												}
											},
											{
												"assignments": [
													1174
												],
												"declarations": [
													{
														"constant": false,
														"id": 1174,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "35442:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1211,
														"src": "35434:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1173,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "35434:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1181,
												"initialValue": {
													"arguments": [
														{
															"id": 1176,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1140,
															"src": "35461:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1177,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1142,
															"src": "35467:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1178,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1144,
															"src": "35470:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1179,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1146,
															"src": "35473:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1175,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967290,
														"src": "35451:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 1180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35451:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35434:41:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1182,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "35489:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1185,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "35507:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "35499:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1183,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "35499:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1186,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "35499:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "35489:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1201,
												"nodeType": "IfStatement",
												"src": "35485:113:0",
												"trueBody": {
													"id": 1200,
													"nodeType": "Block",
													"src": "35511:87:0",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1190,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "35541:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1189,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "35533:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1188,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "35533:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1191,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "35533:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1192,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 958,
																			"src": "35545:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$958_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 1193,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "35558:16:0",
																		"memberName": "InvalidSignature",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 955,
																		"src": "35545:29:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$958",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1196,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "35584:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1195,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "35576:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 1194,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "35576:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "35576:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 1198,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "35532:55:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$958_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 1155,
															"id": 1199,
															"nodeType": "Return",
															"src": "35525:62:0"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 1202,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1174,
															"src": "35616:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1203,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 958,
																"src": "35624:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$958_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 1204,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "35637:7:0",
															"memberName": "NoError",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 954,
															"src": "35624:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$958",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "35654:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1206,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "35646:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1205,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "35646:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1208,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "35646:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"id": 1209,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "35615:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$958_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"functionReturnParameters": 1155,
												"id": 1210,
												"nodeType": "Return",
												"src": "35608:49:0"
											}
										]
									},
									"documentation": {
										"id": 1138,
										"nodeType": "StructuredDocumentation",
										"src": "34004:125:0",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 1212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "34143:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "34171:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "34163:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1139,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "34163:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "34191:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "34185:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1141,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "34185:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "34210:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "34202:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1143,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "34202:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "34229:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "34221:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1145,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "34221:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34153:83:0"
									},
									"returnParameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "34260:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34260:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "34269:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$958",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1151,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1150,
														"name": "RecoverError",
														"nameLocations": [
															"34269:12:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 958,
														"src": "34269:12:0"
													},
													"referencedDeclaration": 958,
													"src": "34269:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$958",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "34283:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1153,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "34283:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34259:32:0"
									},
									"scope": 1298,
									"src": "34134:1530:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1247,
										"nodeType": "Block",
										"src": "35891:166:0",
										"statements": [
											{
												"assignments": [
													1227,
													1230,
													1232
												],
												"declarations": [
													{
														"constant": false,
														"id": 1227,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "35910:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 1247,
														"src": "35902:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1226,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "35902:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1230,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "35934:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1247,
														"src": "35921:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$958",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 1229,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1228,
																"name": "RecoverError",
																"nameLocations": [
																	"35921:12:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 958,
																"src": "35921:12:0"
															},
															"referencedDeclaration": 958,
															"src": "35921:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$958",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1232,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "35949:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1247,
														"src": "35941:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1231,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "35941:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1239,
												"initialValue": {
													"arguments": [
														{
															"id": 1234,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1215,
															"src": "35972:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1235,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1217,
															"src": "35978:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1236,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1219,
															"src": "35981:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1237,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1221,
															"src": "35984:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1233,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1024,
															1104,
															1212
														],
														"referencedDeclaration": 1212,
														"src": "35961:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$958_$_t_bytes32_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35961:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$958_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35901:85:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1241,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1230,
															"src": "36008:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$958",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 1242,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1232,
															"src": "36015:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$958",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1240,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1297,
														"src": "35996:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$958_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35996:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1244,
												"nodeType": "ExpressionStatement",
												"src": "35996:28:0"
											},
											{
												"expression": {
													"id": 1245,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1227,
													"src": "36041:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1225,
												"id": 1246,
												"nodeType": "Return",
												"src": "36034:16:0"
											}
										]
									},
									"documentation": {
										"id": 1213,
										"nodeType": "StructuredDocumentation",
										"src": "35670:122:0",
										"text": " @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 1248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "35806:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "35822:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "35814:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1214,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "35814:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "35834:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "35828:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1216,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "35828:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "35845:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "35837:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1218,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "35837:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "35856:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "35848:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1220,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "35848:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35813:45:0"
									},
									"returnParameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "35882:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35882:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35881:9:0"
									},
									"scope": 1298,
									"src": "35797:260:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1296,
										"nodeType": "Block",
										"src": "36262:460:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_RecoverError_$958",
														"typeString": "enum ECDSA.RecoverError"
													},
													"id": 1260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1257,
														"name": "error",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1252,
														"src": "36276:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$958",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 1258,
															"name": "RecoverError",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "36285:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_RecoverError_$958_$",
																"typeString": "type(enum ECDSA.RecoverError)"
															}
														},
														"id": 1259,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "36298:7:0",
														"memberName": "NoError",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 954,
														"src": "36285:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$958",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"src": "36276:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_RecoverError_$958",
															"typeString": "enum ECDSA.RecoverError"
														},
														"id": 1266,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1263,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1252,
															"src": "36372:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$958",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1264,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 958,
																"src": "36381:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$958_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 1265,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "36394:16:0",
															"memberName": "InvalidSignature",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 955,
															"src": "36381:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$958",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"src": "36372:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_RecoverError_$958",
																"typeString": "enum ECDSA.RecoverError"
															},
															"id": 1274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1271,
																"name": "error",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1252,
																"src": "36477:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$958",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1272,
																	"name": "RecoverError",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 958,
																	"src": "36486:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_RecoverError_$958_$",
																		"typeString": "type(enum ECDSA.RecoverError)"
																	}
																},
																"id": 1273,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "36499:22:0",
																"memberName": "InvalidSignatureLength",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 956,
																"src": "36486:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$958",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"src": "36477:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_RecoverError_$958",
																	"typeString": "enum ECDSA.RecoverError"
																},
																"id": 1286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1283,
																	"name": "error",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1252,
																	"src": "36611:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$958",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 1284,
																		"name": "RecoverError",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 958,
																		"src": "36620:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_RecoverError_$958_$",
																			"typeString": "type(enum ECDSA.RecoverError)"
																		}
																	},
																	"id": 1285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "36633:17:0",
																	"memberName": "InvalidSignatureS",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 957,
																	"src": "36620:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$958",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"src": "36611:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1292,
															"nodeType": "IfStatement",
															"src": "36607:109:0",
															"trueBody": {
																"id": 1291,
																"nodeType": "Block",
																"src": "36652:64:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1288,
																					"name": "errorArg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1254,
																					"src": "36696:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 1287,
																				"name": "ECDSAInvalidSignatureS",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 971,
																				"src": "36673:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$_t_error_$",
																					"typeString": "function (bytes32) pure returns (error)"
																				}
																			},
																			"id": 1289,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "36673:32:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1290,
																		"nodeType": "RevertStatement",
																		"src": "36666:39:0"
																	}
																]
															}
														},
														"id": 1293,
														"nodeType": "IfStatement",
														"src": "36473:243:0",
														"trueBody": {
															"id": 1282,
															"nodeType": "Block",
															"src": "36523:78:0",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 1278,
																						"name": "errorArg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1254,
																						"src": "36580:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					],
																					"id": 1277,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "36572:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1276,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "36572:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1279,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "36572:17:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1275,
																			"name": "ECDSAInvalidSignatureLength",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 966,
																			"src": "36544:27:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (uint256) pure returns (error)"
																			}
																		},
																		"id": 1280,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "36544:46:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 1281,
																	"nodeType": "RevertStatement",
																	"src": "36537:53:0"
																}
															]
														}
													},
													"id": 1294,
													"nodeType": "IfStatement",
													"src": "36368:348:0",
													"trueBody": {
														"id": 1270,
														"nodeType": "Block",
														"src": "36412:55:0",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1267,
																		"name": "ECDSAInvalidSignature",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 961,
																		"src": "36433:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																			"typeString": "function () pure returns (error)"
																		}
																	},
																	"id": 1268,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "36433:23:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1269,
																"nodeType": "RevertStatement",
																"src": "36426:30:0"
															}
														]
													}
												},
												"id": 1295,
												"nodeType": "IfStatement",
												"src": "36272:444:0",
												"trueBody": {
													"id": 1262,
													"nodeType": "Block",
													"src": "36307:55:0",
													"statements": [
														{
															"functionReturnParameters": 1256,
															"id": 1261,
															"nodeType": "Return",
															"src": "36321:7:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1249,
										"nodeType": "StructuredDocumentation",
										"src": "36063:122:0",
										"text": " @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."
									},
									"id": 1297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_throwError",
									"nameLocation": "36199:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "error",
												"nameLocation": "36224:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "36211:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$958",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1251,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1250,
														"name": "RecoverError",
														"nameLocations": [
															"36211:12:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 958,
														"src": "36211:12:0"
													},
													"referencedDeclaration": 958,
													"src": "36211:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$958",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "errorArg",
												"nameLocation": "36239:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "36231:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1253,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "36231:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36210:38:0"
									},
									"returnParameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36262:0:0"
									},
									"scope": 1298,
									"src": "36190:532:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 3604,
							"src": "29338:7386:0",
							"usedErrors": [
								961,
								966,
								971
							],
							"usedEvents": []
						},
						{
							"id": 1299,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "36852:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1300,
								"nodeType": "StructuredDocumentation",
								"src": "36878:73:0",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2351,
							"linearizedBaseContracts": [
								2351
							],
							"name": "Math",
							"nameLocation": "36960:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1301,
										"nodeType": "StructuredDocumentation",
										"src": "36971:50:0",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 1303,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "37032:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37052:2:0"
									},
									"src": "37026:29:0"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 1308,
									"members": [
										{
											"id": 1304,
											"name": "Floor",
											"nameLocation": "37085:5:0",
											"nodeType": "EnumValue",
											"src": "37085:5:0"
										},
										{
											"id": 1305,
											"name": "Ceil",
											"nameLocation": "37128:4:0",
											"nodeType": "EnumValue",
											"src": "37128:4:0"
										},
										{
											"id": 1306,
											"name": "Trunc",
											"nameLocation": "37170:5:0",
											"nodeType": "EnumValue",
											"src": "37170:5:0"
										},
										{
											"id": 1307,
											"name": "Expand",
											"nameLocation": "37200:6:0",
											"nodeType": "EnumValue",
											"src": "37200:6:0"
										}
									],
									"name": "Rounding",
									"nameLocation": "37066:8:0",
									"nodeType": "EnumDefinition",
									"src": "37061:169:0"
								},
								{
									"body": {
										"id": 1339,
										"nodeType": "Block",
										"src": "37410:140:0",
										"statements": [
											{
												"id": 1338,
												"nodeType": "UncheckedBlock",
												"src": "37420:124:0",
												"statements": [
													{
														"assignments": [
															1321
														],
														"declarations": [
															{
																"constant": false,
																"id": 1321,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "37452:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 1338,
																"src": "37444:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1320,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "37444:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1325,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1322,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1311,
																"src": "37456:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1323,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1313,
																"src": "37460:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "37456:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "37444:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1326,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1321,
																"src": "37479:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1327,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1311,
																"src": "37483:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "37479:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1333,
														"nodeType": "IfStatement",
														"src": "37475:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1329,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "37494:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1330,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "37501:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1331,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "37493:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1319,
															"id": 1332,
															"nodeType": "Return",
															"src": "37486:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "37525:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1335,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1321,
																	"src": "37531:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1336,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "37524:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1319,
														"id": 1337,
														"nodeType": "Return",
														"src": "37517:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1309,
										"nodeType": "StructuredDocumentation",
										"src": "37236:93:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 1340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "37343:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "37358:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "37350:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "37369:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "37361:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37361:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37349:22:0"
									},
									"returnParameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "37395:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1315,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "37395:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "37401:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37401:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37394:15:0"
									},
									"scope": 2351,
									"src": "37334:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1367,
										"nodeType": "Block",
										"src": "37733:113:0",
										"statements": [
											{
												"id": 1366,
												"nodeType": "UncheckedBlock",
												"src": "37743:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1352,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1345,
																"src": "37771:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1353,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1343,
																"src": "37775:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "37771:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1359,
														"nodeType": "IfStatement",
														"src": "37767:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "37786:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1356,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "37793:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1357,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "37785:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1351,
															"id": 1358,
															"nodeType": "Return",
															"src": "37778:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1360,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "37817:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1361,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1343,
																		"src": "37823:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1362,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1345,
																		"src": "37827:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "37823:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1364,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "37816:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1351,
														"id": 1365,
														"nodeType": "Return",
														"src": "37809:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1341,
										"nodeType": "StructuredDocumentation",
										"src": "37556:96:0",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 1368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "37666:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "37681:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "37673:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37673:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "37692:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "37684:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37684:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37672:22:0"
									},
									"returnParameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "37718:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1347,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "37718:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "37724:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37724:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37717:15:0"
									},
									"scope": 2351,
									"src": "37657:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1409,
										"nodeType": "Block",
										"src": "38032:417:0",
										"statements": [
											{
												"id": 1408,
												"nodeType": "UncheckedBlock",
												"src": "38042:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1380,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1371,
																"src": "38300:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1381,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "38305:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "38300:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1387,
														"nodeType": "IfStatement",
														"src": "38296:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1383,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "38316:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1384,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "38322:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1385,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "38315:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1379,
															"id": 1386,
															"nodeType": "Return",
															"src": "38308:16:0"
														}
													},
													{
														"assignments": [
															1389
														],
														"declarations": [
															{
																"constant": false,
																"id": 1389,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "38346:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 1408,
																"src": "38338:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1388,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "38338:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1393,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1390,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1371,
																"src": "38350:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1391,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1373,
																"src": "38354:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "38350:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "38338:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1396,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1394,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1389,
																	"src": "38373:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1395,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1371,
																	"src": "38377:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "38373:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1397,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1373,
																"src": "38382:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "38373:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1403,
														"nodeType": "IfStatement",
														"src": "38369:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1399,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "38393:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1400,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "38400:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1401,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "38392:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1379,
															"id": 1402,
															"nodeType": "Return",
															"src": "38385:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1404,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "38424:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1405,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1389,
																	"src": "38430:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1406,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "38423:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1379,
														"id": 1407,
														"nodeType": "Return",
														"src": "38416:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1369,
										"nodeType": "StructuredDocumentation",
										"src": "37852:99:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 1410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "37965:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "37980:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "37972:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37972:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "37991:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "37983:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37983:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37971:22:0"
									},
									"returnParameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1376,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "38017:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1375,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "38017:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "38023:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38023:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38016:15:0"
									},
									"scope": 2351,
									"src": "37956:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1437,
										"nodeType": "Block",
										"src": "38636:114:0",
										"statements": [
											{
												"id": 1436,
												"nodeType": "UncheckedBlock",
												"src": "38646:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1422,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1415,
																"src": "38674:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1423,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "38679:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "38674:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1429,
														"nodeType": "IfStatement",
														"src": "38670:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "38690:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1426,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "38697:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1427,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "38689:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1421,
															"id": 1428,
															"nodeType": "Return",
															"src": "38682:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1430,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "38721:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1431,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1413,
																		"src": "38727:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1432,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1415,
																		"src": "38731:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "38727:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1434,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "38720:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1421,
														"id": 1435,
														"nodeType": "Return",
														"src": "38713:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1411,
										"nodeType": "StructuredDocumentation",
										"src": "38455:100:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 1438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "38569:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "38584:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "38576:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38576:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "38595:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "38587:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38587:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38575:22:0"
									},
									"returnParameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "38621:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1417,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "38621:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "38627:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38627:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38620:15:0"
									},
									"scope": 2351,
									"src": "38560:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1465,
										"nodeType": "Block",
										"src": "38947:114:0",
										"statements": [
											{
												"id": 1464,
												"nodeType": "UncheckedBlock",
												"src": "38957:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1450,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1443,
																"src": "38985:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1451,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "38990:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "38985:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1457,
														"nodeType": "IfStatement",
														"src": "38981:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1453,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "39001:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1454,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "39008:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1455,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "39000:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1449,
															"id": 1456,
															"nodeType": "Return",
															"src": "38993:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "39032:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1459,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1441,
																		"src": "39038:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1460,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1443,
																		"src": "39042:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "39038:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1462,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "39031:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1449,
														"id": 1463,
														"nodeType": "Return",
														"src": "39024:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1439,
										"nodeType": "StructuredDocumentation",
										"src": "38756:110:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 1466,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "38880:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "38895:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "38887:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "38906:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "38898:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38898:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38886:22:0"
									},
									"returnParameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "38932:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1445,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "38932:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "38938:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38938:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38931:15:0"
									},
									"scope": 2351,
									"src": "38871:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1483,
										"nodeType": "Block",
										"src": "39198:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1478,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1476,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1469,
															"src": "39215:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1477,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1471,
															"src": "39219:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "39215:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1480,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1471,
														"src": "39227:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "39215:13:0",
													"trueExpression": {
														"id": 1479,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1469,
														"src": "39223:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1475,
												"id": 1482,
												"nodeType": "Return",
												"src": "39208:20:0"
											}
										]
									},
									"documentation": {
										"id": 1467,
										"nodeType": "StructuredDocumentation",
										"src": "39067:59:0",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "39140:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "39152:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1484,
												"src": "39144:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39144:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "39163:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1484,
												"src": "39155:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39155:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39143:22:0"
									},
									"returnParameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1484,
												"src": "39189:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39189:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39188:9:0"
									},
									"scope": 2351,
									"src": "39131:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1501,
										"nodeType": "Block",
										"src": "39373:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1496,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1494,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1487,
															"src": "39390:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1495,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1489,
															"src": "39394:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "39390:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1498,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1489,
														"src": "39402:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "39390:13:0",
													"trueExpression": {
														"id": 1497,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1487,
														"src": "39398:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1493,
												"id": 1500,
												"nodeType": "Return",
												"src": "39383:20:0"
											}
										]
									},
									"documentation": {
										"id": 1485,
										"nodeType": "StructuredDocumentation",
										"src": "39241:60:0",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "39315:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "39327:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "39319:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39319:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "39338:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "39330:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39330:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39318:22:0"
									},
									"returnParameters": {
										"id": 1493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "39364:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39364:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39363:9:0"
									},
									"scope": 2351,
									"src": "39306:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1524,
										"nodeType": "Block",
										"src": "39594:82:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1512,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1505,
																	"src": "39649:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1513,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1507,
																	"src": "39653:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "39649:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1515,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "39648:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1521,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1516,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1505,
																		"src": "39659:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1517,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1507,
																		"src": "39663:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "39659:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1519,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "39658:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1520,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "39668:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "39658:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "39648:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1511,
												"id": 1523,
												"nodeType": "Return",
												"src": "39641:28:0"
											}
										]
									},
									"documentation": {
										"id": 1503,
										"nodeType": "StructuredDocumentation",
										"src": "39416:102:0",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1525,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "39532:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1505,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "39548:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1525,
												"src": "39540:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39540:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1507,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "39559:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1525,
												"src": "39551:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39551:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39539:22:0"
									},
									"returnParameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1525,
												"src": "39585:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39585:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39584:9:0"
									},
									"scope": 2351,
									"src": "39523:153:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1558,
										"nodeType": "Block",
										"src": "39968:260:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1535,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1530,
														"src": "39982:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1536,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "39987:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "39982:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1543,
												"nodeType": "IfStatement",
												"src": "39978:127:0",
												"trueBody": {
													"id": 1542,
													"nodeType": "Block",
													"src": "39990:115:0",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1540,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1538,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1528,
																	"src": "40089:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1539,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1530,
																	"src": "40093:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "40089:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1534,
															"id": 1541,
															"nodeType": "Return",
															"src": "40082:12:0"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1546,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1544,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1528,
															"src": "40193:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1545,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "40198:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "40193:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1555,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1550,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1548,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1528,
																			"src": "40207:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1549,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "40211:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "40207:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1551,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "40206:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1552,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1530,
																"src": "40216:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "40206:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1554,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "40220:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "40206:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "40193:28:0",
													"trueExpression": {
														"hexValue": "30",
														"id": 1547,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "40202:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1534,
												"id": 1557,
												"nodeType": "Return",
												"src": "40186:35:0"
											}
										]
									},
									"documentation": {
										"id": 1526,
										"nodeType": "StructuredDocumentation",
										"src": "39682:210:0",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 1559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "39906:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "39922:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "39914:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39914:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "39933:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "39925:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39925:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39913:22:0"
									},
									"returnParameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "39959:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39959:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39958:9:0"
									},
									"scope": 2351,
									"src": "39897:331:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1684,
										"nodeType": "Block",
										"src": "40650:4018:0",
										"statements": [
											{
												"id": 1683,
												"nodeType": "UncheckedBlock",
												"src": "40660:4002:0",
												"statements": [
													{
														"assignments": [
															1572
														],
														"declarations": [
															{
																"constant": false,
																"id": 1572,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "40989:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 1683,
																"src": "40981:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1571,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "40981:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1576,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1573,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1562,
																"src": "40997:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1574,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1564,
																"src": "41001:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "40997:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "40981:21:0"
													},
													{
														"assignments": [
															1578
														],
														"declarations": [
															{
																"constant": false,
																"id": 1578,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "41069:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 1683,
																"src": "41061:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1577,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "41061:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1579,
														"nodeType": "VariableDeclarationStatement",
														"src": "41061:13:0"
													},
													{
														"AST": {
															"nativeSrc": "41141:122:0",
															"nodeType": "YulBlock",
															"src": "41141:122:0",
															"statements": [
																{
																	"nativeSrc": "41159:30:0",
																	"nodeType": "YulVariableDeclaration",
																	"src": "41159:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "41176:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "41176:1:0"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "41179:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "41179:1:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "41186:1:0",
																						"nodeType": "YulLiteral",
																						"src": "41186:1:0",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "41182:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "41182:3:0"
																				},
																				"nativeSrc": "41182:6:0",
																				"nodeType": "YulFunctionCall",
																				"src": "41182:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "41169:6:0",
																			"nodeType": "YulIdentifier",
																			"src": "41169:6:0"
																		},
																		"nativeSrc": "41169:20:0",
																		"nodeType": "YulFunctionCall",
																		"src": "41169:20:0"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "41163:2:0",
																			"nodeType": "YulTypedName",
																			"src": "41163:2:0",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "41206:43:0",
																	"nodeType": "YulAssignment",
																	"src": "41206:43:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "41223:2:0",
																						"nodeType": "YulIdentifier",
																						"src": "41223:2:0"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "41227:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "41227:5:0"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "41219:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "41219:3:0"
																				},
																				"nativeSrc": "41219:14:0",
																				"nodeType": "YulFunctionCall",
																				"src": "41219:14:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "41238:2:0",
																						"nodeType": "YulIdentifier",
																						"src": "41238:2:0"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "41242:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "41242:5:0"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "41235:2:0",
																					"nodeType": "YulIdentifier",
																					"src": "41235:2:0"
																				},
																				"nativeSrc": "41235:13:0",
																				"nodeType": "YulFunctionCall",
																				"src": "41235:13:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "41215:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "41215:3:0"
																		},
																		"nativeSrc": "41215:34:0",
																		"nodeType": "YulFunctionCall",
																		"src": "41215:34:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "41206:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "41206:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1572,
																"isOffset": false,
																"isSlot": false,
																"src": "41227:5:0",
																"valueSize": 1
															},
															{
																"declaration": 1572,
																"isOffset": false,
																"isSlot": false,
																"src": "41242:5:0",
																"valueSize": 1
															},
															{
																"declaration": 1578,
																"isOffset": false,
																"isSlot": false,
																"src": "41206:5:0",
																"valueSize": 1
															},
															{
																"declaration": 1562,
																"isOffset": false,
																"isSlot": false,
																"src": "41176:1:0",
																"valueSize": 1
															},
															{
																"declaration": 1564,
																"isOffset": false,
																"isSlot": false,
																"src": "41179:1:0",
																"valueSize": 1
															}
														],
														"id": 1580,
														"nodeType": "InlineAssembly",
														"src": "41132:131:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1581,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1578,
																"src": "41344:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1582,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "41353:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "41344:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1589,
														"nodeType": "IfStatement",
														"src": "41340:368:0",
														"trueBody": {
															"id": 1588,
															"nodeType": "Block",
															"src": "41356:352:0",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1584,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1572,
																			"src": "41674:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1585,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1566,
																			"src": "41682:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "41674:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1570,
																	"id": 1587,
																	"nodeType": "Return",
																	"src": "41667:26:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1590,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1566,
																"src": "41814:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1591,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1578,
																"src": "41829:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "41814:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1597,
														"nodeType": "IfStatement",
														"src": "41810:88:0",
														"trueBody": {
															"id": 1596,
															"nodeType": "Block",
															"src": "41836:62:0",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1593,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1303,
																			"src": "41861:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																				"typeString": "function () pure returns (error)"
																			}
																		},
																		"id": 1594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "41861:22:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 1595,
																	"nodeType": "RevertStatement",
																	"src": "41854:29:0"
																}
															]
														}
													},
													{
														"assignments": [
															1599
														],
														"declarations": [
															{
																"constant": false,
																"id": 1599,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "42161:9:0",
																"nodeType": "VariableDeclaration",
																"scope": 1683,
																"src": "42153:17:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1598,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "42153:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1600,
														"nodeType": "VariableDeclarationStatement",
														"src": "42153:17:0"
													},
													{
														"AST": {
															"nativeSrc": "42193:291:0",
															"nodeType": "YulBlock",
															"src": "42193:291:0",
															"statements": [
																{
																	"nativeSrc": "42262:38:0",
																	"nodeType": "YulAssignment",
																	"src": "42262:38:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "42282:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "42282:1:0"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "42285:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "42285:1:0"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "42288:11:0",
																				"nodeType": "YulIdentifier",
																				"src": "42288:11:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "42275:6:0",
																			"nodeType": "YulIdentifier",
																			"src": "42275:6:0"
																		},
																		"nativeSrc": "42275:25:0",
																		"nodeType": "YulFunctionCall",
																		"src": "42275:25:0"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "42262:9:0",
																			"nodeType": "YulIdentifier",
																			"src": "42262:9:0"
																		}
																	]
																},
																{
																	"nativeSrc": "42382:41:0",
																	"nodeType": "YulAssignment",
																	"src": "42382:41:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "42395:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "42395:5:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "42405:9:0",
																						"nodeType": "YulIdentifier",
																						"src": "42405:9:0"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "42416:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "42416:5:0"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "42402:2:0",
																					"nodeType": "YulIdentifier",
																					"src": "42402:2:0"
																				},
																				"nativeSrc": "42402:20:0",
																				"nodeType": "YulFunctionCall",
																				"src": "42402:20:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "42391:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "42391:3:0"
																		},
																		"nativeSrc": "42391:32:0",
																		"nodeType": "YulFunctionCall",
																		"src": "42391:32:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "42382:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "42382:5:0"
																		}
																	]
																},
																{
																	"nativeSrc": "42440:30:0",
																	"nodeType": "YulAssignment",
																	"src": "42440:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "42453:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "42453:5:0"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "42460:9:0",
																				"nodeType": "YulIdentifier",
																				"src": "42460:9:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "42449:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "42449:3:0"
																		},
																		"nativeSrc": "42449:21:0",
																		"nodeType": "YulFunctionCall",
																		"src": "42449:21:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "42440:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "42440:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1566,
																"isOffset": false,
																"isSlot": false,
																"src": "42288:11:0",
																"valueSize": 1
															},
															{
																"declaration": 1572,
																"isOffset": false,
																"isSlot": false,
																"src": "42416:5:0",
																"valueSize": 1
															},
															{
																"declaration": 1572,
																"isOffset": false,
																"isSlot": false,
																"src": "42440:5:0",
																"valueSize": 1
															},
															{
																"declaration": 1572,
																"isOffset": false,
																"isSlot": false,
																"src": "42453:5:0",
																"valueSize": 1
															},
															{
																"declaration": 1578,
																"isOffset": false,
																"isSlot": false,
																"src": "42382:5:0",
																"valueSize": 1
															},
															{
																"declaration": 1578,
																"isOffset": false,
																"isSlot": false,
																"src": "42395:5:0",
																"valueSize": 1
															},
															{
																"declaration": 1599,
																"isOffset": false,
																"isSlot": false,
																"src": "42262:9:0",
																"valueSize": 1
															},
															{
																"declaration": 1599,
																"isOffset": false,
																"isSlot": false,
																"src": "42405:9:0",
																"valueSize": 1
															},
															{
																"declaration": 1599,
																"isOffset": false,
																"isSlot": false,
																"src": "42460:9:0",
																"valueSize": 1
															},
															{
																"declaration": 1562,
																"isOffset": false,
																"isSlot": false,
																"src": "42282:1:0",
																"valueSize": 1
															},
															{
																"declaration": 1564,
																"isOffset": false,
																"isSlot": false,
																"src": "42285:1:0",
																"valueSize": 1
															}
														],
														"id": 1601,
														"nodeType": "InlineAssembly",
														"src": "42184:300:0"
													},
													{
														"assignments": [
															1603
														],
														"declarations": [
															{
																"constant": false,
																"id": 1603,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "42696:4:0",
																"nodeType": "VariableDeclaration",
																"scope": 1683,
																"src": "42688:12:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1602,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "42688:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1610,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1604,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1566,
																"src": "42703:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1607,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 1605,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "42718:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1606,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1566,
																			"src": "42722:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "42718:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1608,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "42717:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "42703:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "42688:46:0"
													},
													{
														"AST": {
															"nativeSrc": "42757:362:0",
															"nodeType": "YulBlock",
															"src": "42757:362:0",
															"statements": [
																{
																	"nativeSrc": "42822:37:0",
																	"nodeType": "YulAssignment",
																	"src": "42822:37:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "42841:11:0",
																				"nodeType": "YulIdentifier",
																				"src": "42841:11:0"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "42854:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "42854:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "42837:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "42837:3:0"
																		},
																		"nativeSrc": "42837:22:0",
																		"nodeType": "YulFunctionCall",
																		"src": "42837:22:0"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "42822:11:0",
																			"nodeType": "YulIdentifier",
																			"src": "42822:11:0"
																		}
																	]
																},
																{
																	"nativeSrc": "42926:25:0",
																	"nodeType": "YulAssignment",
																	"src": "42926:25:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "42939:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "42939:5:0"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "42946:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "42946:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "42935:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "42935:3:0"
																		},
																		"nativeSrc": "42935:16:0",
																		"nodeType": "YulFunctionCall",
																		"src": "42935:16:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "42926:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "42926:5:0"
																		}
																	]
																},
																{
																	"nativeSrc": "43066:39:0",
																	"nodeType": "YulAssignment",
																	"src": "43066:39:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "43086:1:0",
																								"nodeType": "YulLiteral",
																								"src": "43086:1:0",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "43089:4:0",
																								"nodeType": "YulIdentifier",
																								"src": "43089:4:0"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "43082:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "43082:3:0"
																						},
																						"nativeSrc": "43082:12:0",
																						"nodeType": "YulFunctionCall",
																						"src": "43082:12:0"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "43096:4:0",
																						"nodeType": "YulIdentifier",
																						"src": "43096:4:0"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "43078:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "43078:3:0"
																				},
																				"nativeSrc": "43078:23:0",
																				"nodeType": "YulFunctionCall",
																				"src": "43078:23:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "43103:1:0",
																				"nodeType": "YulLiteral",
																				"src": "43103:1:0",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "43074:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "43074:3:0"
																		},
																		"nativeSrc": "43074:31:0",
																		"nodeType": "YulFunctionCall",
																		"src": "43074:31:0"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "43066:4:0",
																			"nodeType": "YulIdentifier",
																			"src": "43066:4:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1566,
																"isOffset": false,
																"isSlot": false,
																"src": "42822:11:0",
																"valueSize": 1
															},
															{
																"declaration": 1566,
																"isOffset": false,
																"isSlot": false,
																"src": "42841:11:0",
																"valueSize": 1
															},
															{
																"declaration": 1572,
																"isOffset": false,
																"isSlot": false,
																"src": "42926:5:0",
																"valueSize": 1
															},
															{
																"declaration": 1572,
																"isOffset": false,
																"isSlot": false,
																"src": "42939:5:0",
																"valueSize": 1
															},
															{
																"declaration": 1603,
																"isOffset": false,
																"isSlot": false,
																"src": "42854:4:0",
																"valueSize": 1
															},
															{
																"declaration": 1603,
																"isOffset": false,
																"isSlot": false,
																"src": "42946:4:0",
																"valueSize": 1
															},
															{
																"declaration": 1603,
																"isOffset": false,
																"isSlot": false,
																"src": "43066:4:0",
																"valueSize": 1
															},
															{
																"declaration": 1603,
																"isOffset": false,
																"isSlot": false,
																"src": "43089:4:0",
																"valueSize": 1
															},
															{
																"declaration": 1603,
																"isOffset": false,
																"isSlot": false,
																"src": "43096:4:0",
																"valueSize": 1
															}
														],
														"id": 1611,
														"nodeType": "InlineAssembly",
														"src": "42748:371:0"
													},
													{
														"expression": {
															"id": 1616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1612,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1572,
																"src": "43185:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1615,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1613,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1578,
																	"src": "43194:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1614,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1603,
																	"src": "43202:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "43194:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "43185:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1617,
														"nodeType": "ExpressionStatement",
														"src": "43185:21:0"
													},
													{
														"assignments": [
															1619
														],
														"declarations": [
															{
																"constant": false,
																"id": 1619,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "43532:7:0",
																"nodeType": "VariableDeclaration",
																"scope": 1683,
																"src": "43524:15:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1618,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "43524:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1626,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1622,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1620,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "43543:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1621,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1566,
																			"src": "43547:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "43543:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1623,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "43542:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1624,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "43562:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "43542:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "43524:39:0"
													},
													{
														"expression": {
															"id": 1633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1627,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1619,
																"src": "43780:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1632,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1628,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "43791:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1631,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1629,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1566,
																		"src": "43795:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1630,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1619,
																		"src": "43809:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "43795:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "43791:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "43780:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1634,
														"nodeType": "ExpressionStatement",
														"src": "43780:36:0"
													},
													{
														"expression": {
															"id": 1641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1635,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1619,
																"src": "43849:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1640,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1636,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "43860:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1639,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1637,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1566,
																		"src": "43864:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1638,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1619,
																		"src": "43878:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "43864:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "43860:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "43849:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1642,
														"nodeType": "ExpressionStatement",
														"src": "43849:36:0"
													},
													{
														"expression": {
															"id": 1649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1643,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1619,
																"src": "43919:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1648,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "43930:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1645,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1566,
																		"src": "43934:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1646,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1619,
																		"src": "43948:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "43934:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "43930:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "43919:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1650,
														"nodeType": "ExpressionStatement",
														"src": "43919:36:0"
													},
													{
														"expression": {
															"id": 1657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1651,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1619,
																"src": "43989:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1652,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "44000:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1653,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1566,
																		"src": "44004:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1654,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1619,
																		"src": "44018:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "44004:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "44000:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "43989:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1658,
														"nodeType": "ExpressionStatement",
														"src": "43989:36:0"
													},
													{
														"expression": {
															"id": 1665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1659,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1619,
																"src": "44059:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1664,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1660,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "44070:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1663,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1661,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1566,
																		"src": "44074:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1662,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1619,
																		"src": "44088:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "44074:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "44070:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "44059:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1666,
														"nodeType": "ExpressionStatement",
														"src": "44059:36:0"
													},
													{
														"expression": {
															"id": 1673,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1667,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1619,
																"src": "44130:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1672,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1668,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "44141:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1671,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1669,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1566,
																		"src": "44145:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1670,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1619,
																		"src": "44159:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "44145:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "44141:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "44130:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1674,
														"nodeType": "ExpressionStatement",
														"src": "44130:36:0"
													},
													{
														"expression": {
															"id": 1679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1675,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1569,
																"src": "44600:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1678,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1676,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1572,
																	"src": "44609:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1677,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1619,
																	"src": "44617:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "44609:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "44600:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1680,
														"nodeType": "ExpressionStatement",
														"src": "44600:24:0"
													},
													{
														"expression": {
															"id": 1681,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1569,
															"src": "44645:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1570,
														"id": 1682,
														"nodeType": "Return",
														"src": "44638:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1560,
										"nodeType": "StructuredDocumentation",
										"src": "40234:313:0",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 1685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "40561:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "40576:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "40568:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40568:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1564,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "40587:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "40579:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40579:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "40598:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "40590:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40590:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40567:43:0"
									},
									"returnParameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1569,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "40642:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "40634:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40634:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40633:16:0"
									},
									"scope": 2351,
									"src": "40552:4116:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1727,
										"nodeType": "Block",
										"src": "44910:192:0",
										"statements": [
											{
												"assignments": [
													1701
												],
												"declarations": [
													{
														"constant": false,
														"id": 1701,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "44928:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1727,
														"src": "44920:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1700,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "44920:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1707,
												"initialValue": {
													"arguments": [
														{
															"id": 1703,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1688,
															"src": "44944:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1704,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1690,
															"src": "44947:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1705,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1692,
															"src": "44950:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1702,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1685,
															1728
														],
														"referencedDeclaration": 1685,
														"src": "44937:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44937:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "44920:42:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1709,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1695,
																"src": "44993:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$1308",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$1308",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 1708,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2350,
															"src": "44976:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1308_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 1710,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "44976:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1717,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1712,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1688,
																	"src": "45013:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1713,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1690,
																	"src": "45016:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1714,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1692,
																	"src": "45019:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1711,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "45006:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "45006:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1716,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "45034:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "45006:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "44976:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1724,
												"nodeType": "IfStatement",
												"src": "44972:101:0",
												"trueBody": {
													"id": 1723,
													"nodeType": "Block",
													"src": "45037:36:0",
													"statements": [
														{
															"expression": {
																"id": 1721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1719,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1701,
																	"src": "45051:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1720,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "45061:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "45051:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1722,
															"nodeType": "ExpressionStatement",
															"src": "45051:11:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1725,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1701,
													"src": "45089:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1699,
												"id": 1726,
												"nodeType": "Return",
												"src": "45082:13:0"
											}
										]
									},
									"documentation": {
										"id": 1686,
										"nodeType": "StructuredDocumentation",
										"src": "44674:121:0",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1728,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "44809:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "44824:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1728,
												"src": "44816:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44816:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1690,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "44835:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1728,
												"src": "44827:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44827:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1692,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "44846:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1728,
												"src": "44838:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1691,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44838:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "44868:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1728,
												"src": "44859:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1308",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1694,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1693,
														"name": "Rounding",
														"nameLocations": [
															"44859:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1308,
														"src": "44859:8:0"
													},
													"referencedDeclaration": 1308,
													"src": "44859:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1308",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44815:62:0"
									},
									"returnParameters": {
										"id": 1699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1698,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1728,
												"src": "44901:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44901:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44900:9:0"
									},
									"scope": 2351,
									"src": "44800:302:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1839,
										"nodeType": "Block",
										"src": "45393:1585:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1736,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1731,
														"src": "45407:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1737,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "45412:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "45407:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1742,
												"nodeType": "IfStatement",
												"src": "45403:45:0",
												"trueBody": {
													"id": 1741,
													"nodeType": "Block",
													"src": "45415:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1739,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "45436:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1735,
															"id": 1740,
															"nodeType": "Return",
															"src": "45429:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													1744
												],
												"declarations": [
													{
														"constant": false,
														"id": 1744,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "46135:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1839,
														"src": "46127:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1743,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "46127:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1753,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1745,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "46144:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1750,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1747,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1731,
																			"src": "46155:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1746,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2007,
																			2042
																		],
																		"referencedDeclaration": 2007,
																		"src": "46150:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1748,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "46150:7:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1749,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "46161:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "46150:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1751,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "46149:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "46144:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "46127:36:0"
											},
											{
												"id": 1838,
												"nodeType": "UncheckedBlock",
												"src": "46564:408:0",
												"statements": [
													{
														"expression": {
															"id": 1763,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1754,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1744,
																"src": "46588:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1762,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1759,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1755,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1744,
																				"src": "46598:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1758,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1756,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1731,
																					"src": "46607:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1757,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1744,
																					"src": "46611:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "46607:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "46598:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1760,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "46597:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "46622:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "46597:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "46588:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1764,
														"nodeType": "ExpressionStatement",
														"src": "46588:35:0"
													},
													{
														"expression": {
															"id": 1774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1765,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1744,
																"src": "46637:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1773,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1770,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1766,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1744,
																				"src": "46647:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1769,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1767,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1731,
																					"src": "46656:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1768,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1744,
																					"src": "46660:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "46656:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "46647:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1771,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "46646:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1772,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "46671:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "46646:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "46637:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1775,
														"nodeType": "ExpressionStatement",
														"src": "46637:35:0"
													},
													{
														"expression": {
															"id": 1785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1776,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1744,
																"src": "46686:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1777,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1744,
																				"src": "46696:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1780,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1778,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1731,
																					"src": "46705:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1779,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1744,
																					"src": "46709:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "46705:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "46696:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1782,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "46695:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "46720:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "46695:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "46686:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1786,
														"nodeType": "ExpressionStatement",
														"src": "46686:35:0"
													},
													{
														"expression": {
															"id": 1796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1787,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1744,
																"src": "46735:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1795,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1792,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1788,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1744,
																				"src": "46745:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1789,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1731,
																					"src": "46754:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1790,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1744,
																					"src": "46758:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "46754:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "46745:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1793,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "46744:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1794,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "46769:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "46744:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "46735:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1797,
														"nodeType": "ExpressionStatement",
														"src": "46735:35:0"
													},
													{
														"expression": {
															"id": 1807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1798,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1744,
																"src": "46784:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1806,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1803,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1799,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1744,
																				"src": "46794:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1802,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1800,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1731,
																					"src": "46803:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1801,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1744,
																					"src": "46807:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "46803:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "46794:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1804,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "46793:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1805,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "46818:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "46793:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "46784:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1808,
														"nodeType": "ExpressionStatement",
														"src": "46784:35:0"
													},
													{
														"expression": {
															"id": 1818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1809,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1744,
																"src": "46833:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1817,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1814,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1810,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1744,
																				"src": "46843:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1813,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1811,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1731,
																					"src": "46852:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1812,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1744,
																					"src": "46856:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "46852:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "46843:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1815,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "46842:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "46867:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "46842:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "46833:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1819,
														"nodeType": "ExpressionStatement",
														"src": "46833:35:0"
													},
													{
														"expression": {
															"id": 1829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1820,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1744,
																"src": "46882:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1828,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1825,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1821,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1744,
																				"src": "46892:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1824,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1822,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1731,
																					"src": "46901:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1823,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1744,
																					"src": "46905:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "46901:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "46892:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1826,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "46891:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1827,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "46916:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "46891:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "46882:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1830,
														"nodeType": "ExpressionStatement",
														"src": "46882:35:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1832,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1744,
																	"src": "46942:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1833,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1731,
																		"src": "46950:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1834,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1744,
																		"src": "46954:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "46950:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1831,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1502,
																"src": "46938:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "46938:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1735,
														"id": 1837,
														"nodeType": "Return",
														"src": "46931:30:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1729,
										"nodeType": "StructuredDocumentation",
										"src": "45108:223:0",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1840,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "45345:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1731,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "45358:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "45350:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1730,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45349:11:0"
									},
									"returnParameters": {
										"id": 1735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "45384:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45384:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45383:9:0"
									},
									"scope": 2351,
									"src": "45336:1642:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1874,
										"nodeType": "Block",
										"src": "47154:164:0",
										"statements": [
											{
												"id": 1873,
												"nodeType": "UncheckedBlock",
												"src": "47164:148:0",
												"statements": [
													{
														"assignments": [
															1852
														],
														"declarations": [
															{
																"constant": false,
																"id": 1852,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "47196:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1873,
																"src": "47188:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1851,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "47188:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1856,
														"initialValue": {
															"arguments": [
																{
																	"id": 1854,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1843,
																	"src": "47210:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1853,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1840,
																	1875
																],
																"referencedDeclaration": 1840,
																"src": "47205:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1855,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "47205:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "47188:24:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1857,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1852,
																"src": "47233:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1866,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1859,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1846,
																						"src": "47260:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1308",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1308",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1858,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2350,
																					"src": "47243:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1308_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1860,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "47243:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1865,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1863,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1861,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1852,
																						"src": "47273:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1862,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1852,
																						"src": "47282:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "47273:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1864,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1843,
																					"src": "47291:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "47273:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "47243:49:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1868,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "47299:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1869,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "47243:57:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1867,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "47295:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1870,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "47242:59:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "47233:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1850,
														"id": 1872,
														"nodeType": "Return",
														"src": "47226:75:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1841,
										"nodeType": "StructuredDocumentation",
										"src": "46984:89:0",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1875,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "47087:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1843,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "47100:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1875,
												"src": "47092:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "47092:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1846,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "47112:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1875,
												"src": "47103:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1308",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1845,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1844,
														"name": "Rounding",
														"nameLocations": [
															"47103:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1308,
														"src": "47103:8:0"
													},
													"referencedDeclaration": 1308,
													"src": "47103:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1308",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47091:30:0"
									},
									"returnParameters": {
										"id": 1850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1875,
												"src": "47145:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "47145:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47144:9:0"
									},
									"scope": 2351,
									"src": "47078:240:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2006,
										"nodeType": "Block",
										"src": "47509:922:0",
										"statements": [
											{
												"assignments": [
													1884
												],
												"declarations": [
													{
														"constant": false,
														"id": 1884,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "47527:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 2006,
														"src": "47519:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1883,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "47519:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1886,
												"initialValue": {
													"hexValue": "30",
													"id": 1885,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "47536:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "47519:18:0"
											},
											{
												"id": 2003,
												"nodeType": "UncheckedBlock",
												"src": "47547:855:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1891,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1887,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1878,
																	"src": "47575:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1888,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "47584:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "47575:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1890,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "47590:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "47575:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1901,
														"nodeType": "IfStatement",
														"src": "47571:99:0",
														"trueBody": {
															"id": 1900,
															"nodeType": "Block",
															"src": "47593:77:0",
															"statements": [
																{
																	"expression": {
																		"id": 1894,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1892,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1878,
																			"src": "47611:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1893,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "47621:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "47611:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1895,
																	"nodeType": "ExpressionStatement",
																	"src": "47611:13:0"
																},
																{
																	"expression": {
																		"id": 1898,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1896,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1884,
																			"src": "47642:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1897,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "47652:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "47642:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1899,
																	"nodeType": "ExpressionStatement",
																	"src": "47642:13:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1904,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1902,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1878,
																	"src": "47687:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1903,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "47696:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "47687:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1905,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "47701:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "47687:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1916,
														"nodeType": "IfStatement",
														"src": "47683:96:0",
														"trueBody": {
															"id": 1915,
															"nodeType": "Block",
															"src": "47704:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 1909,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1907,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1878,
																			"src": "47722:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1908,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "47732:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "47722:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1910,
																	"nodeType": "ExpressionStatement",
																	"src": "47722:12:0"
																},
																{
																	"expression": {
																		"id": 1913,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1911,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1884,
																			"src": "47752:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1912,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "47762:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "47752:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1914,
																	"nodeType": "ExpressionStatement",
																	"src": "47752:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1921,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1919,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1917,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1878,
																	"src": "47796:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1918,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "47805:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "47796:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1920,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "47810:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "47796:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1931,
														"nodeType": "IfStatement",
														"src": "47792:96:0",
														"trueBody": {
															"id": 1930,
															"nodeType": "Block",
															"src": "47813:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 1924,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1922,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1878,
																			"src": "47831:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1923,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "47841:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "47831:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1925,
																	"nodeType": "ExpressionStatement",
																	"src": "47831:12:0"
																},
																{
																	"expression": {
																		"id": 1928,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1926,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1884,
																			"src": "47861:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1927,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "47871:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "47861:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1929,
																	"nodeType": "ExpressionStatement",
																	"src": "47861:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1936,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1934,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1932,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1878,
																	"src": "47905:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1933,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "47914:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "47905:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1935,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "47919:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "47905:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1946,
														"nodeType": "IfStatement",
														"src": "47901:96:0",
														"trueBody": {
															"id": 1945,
															"nodeType": "Block",
															"src": "47922:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 1939,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1937,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1878,
																			"src": "47940:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1938,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "47950:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "47940:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1940,
																	"nodeType": "ExpressionStatement",
																	"src": "47940:12:0"
																},
																{
																	"expression": {
																		"id": 1943,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1941,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1884,
																			"src": "47970:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1942,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "47980:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "47970:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1944,
																	"nodeType": "ExpressionStatement",
																	"src": "47970:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1949,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1947,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1878,
																	"src": "48014:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1948,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "48023:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "48014:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1950,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "48027:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "48014:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1961,
														"nodeType": "IfStatement",
														"src": "48010:93:0",
														"trueBody": {
															"id": 1960,
															"nodeType": "Block",
															"src": "48030:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 1954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1952,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1878,
																			"src": "48048:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1953,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "48058:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "48048:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1955,
																	"nodeType": "ExpressionStatement",
																	"src": "48048:11:0"
																},
																{
																	"expression": {
																		"id": 1958,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1956,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1884,
																			"src": "48077:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1957,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "48087:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "48077:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1959,
																	"nodeType": "ExpressionStatement",
																	"src": "48077:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1966,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1964,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1962,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1878,
																	"src": "48120:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1963,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "48129:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "48120:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1965,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "48133:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "48120:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1976,
														"nodeType": "IfStatement",
														"src": "48116:93:0",
														"trueBody": {
															"id": 1975,
															"nodeType": "Block",
															"src": "48136:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 1969,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1967,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1878,
																			"src": "48154:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1968,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "48164:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "48154:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1970,
																	"nodeType": "ExpressionStatement",
																	"src": "48154:11:0"
																},
																{
																	"expression": {
																		"id": 1973,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1971,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1884,
																			"src": "48183:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1972,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "48193:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "48183:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1974,
																	"nodeType": "ExpressionStatement",
																	"src": "48183:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1979,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1977,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1878,
																	"src": "48226:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1978,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "48235:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "48226:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1980,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "48239:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "48226:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1991,
														"nodeType": "IfStatement",
														"src": "48222:93:0",
														"trueBody": {
															"id": 1990,
															"nodeType": "Block",
															"src": "48242:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 1984,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1982,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1878,
																			"src": "48260:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1983,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "48270:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "48260:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1985,
																	"nodeType": "ExpressionStatement",
																	"src": "48260:11:0"
																},
																{
																	"expression": {
																		"id": 1988,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1986,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1884,
																			"src": "48289:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1987,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "48299:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "48289:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1989,
																	"nodeType": "ExpressionStatement",
																	"src": "48289:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1996,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1994,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1992,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1878,
																	"src": "48332:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1993,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "48341:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "48332:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1995,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "48345:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "48332:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2002,
														"nodeType": "IfStatement",
														"src": "48328:64:0",
														"trueBody": {
															"id": 2001,
															"nodeType": "Block",
															"src": "48348:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 1999,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1997,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1884,
																			"src": "48366:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1998,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "48376:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "48366:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2000,
																	"nodeType": "ExpressionStatement",
																	"src": "48366:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2004,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1884,
													"src": "48418:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1882,
												"id": 2005,
												"nodeType": "Return",
												"src": "48411:13:0"
											}
										]
									},
									"documentation": {
										"id": 1876,
										"nodeType": "StructuredDocumentation",
										"src": "47324:119:0",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2007,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "47457:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1878,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "47470:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2007,
												"src": "47462:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "47462:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47461:15:0"
									},
									"returnParameters": {
										"id": 1882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1881,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2007,
												"src": "47500:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1880,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "47500:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47499:9:0"
									},
									"scope": 2351,
									"src": "47448:983:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2041,
										"nodeType": "Block",
										"src": "48664:168:0",
										"statements": [
											{
												"id": 2040,
												"nodeType": "UncheckedBlock",
												"src": "48674:152:0",
												"statements": [
													{
														"assignments": [
															2019
														],
														"declarations": [
															{
																"constant": false,
																"id": 2019,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "48706:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 2040,
																"src": "48698:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2018,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "48698:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2023,
														"initialValue": {
															"arguments": [
																{
																	"id": 2021,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2010,
																	"src": "48720:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2020,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2007,
																	2042
																],
																"referencedDeclaration": 2007,
																"src": "48715:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2022,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "48715:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "48698:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2038,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2024,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2019,
																"src": "48747:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2033,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2026,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2013,
																						"src": "48774:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1308",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1308",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2025,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2350,
																					"src": "48757:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1308_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2027,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "48757:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2032,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2030,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2028,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "48787:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2029,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2019,
																						"src": "48792:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "48787:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2031,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2010,
																					"src": "48801:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "48787:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "48757:49:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2035,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "48813:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2036,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "48757:57:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2034,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "48809:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2037,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "48756:59:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "48747:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2017,
														"id": 2039,
														"nodeType": "Return",
														"src": "48740:75:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2008,
										"nodeType": "StructuredDocumentation",
										"src": "48437:142:0",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2042,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "48593:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2010,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "48606:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2042,
												"src": "48598:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "48598:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2013,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "48622:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2042,
												"src": "48613:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1308",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2012,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2011,
														"name": "Rounding",
														"nameLocations": [
															"48613:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1308,
														"src": "48613:8:0"
													},
													"referencedDeclaration": 1308,
													"src": "48613:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1308",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48597:34:0"
									},
									"returnParameters": {
										"id": 2017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2016,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2042,
												"src": "48655:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "48655:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48654:9:0"
									},
									"scope": 2351,
									"src": "48584:248:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2170,
										"nodeType": "Block",
										"src": "49025:854:0",
										"statements": [
											{
												"assignments": [
													2051
												],
												"declarations": [
													{
														"constant": false,
														"id": 2051,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "49043:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 2170,
														"src": "49035:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2050,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "49035:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2053,
												"initialValue": {
													"hexValue": "30",
													"id": 2052,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "49052:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "49035:18:0"
											},
											{
												"id": 2167,
												"nodeType": "UncheckedBlock",
												"src": "49063:787:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2054,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2045,
																"src": "49091:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2057,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49100:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2056,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49106:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "49100:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "49091:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2070,
														"nodeType": "IfStatement",
														"src": "49087:103:0",
														"trueBody": {
															"id": 2069,
															"nodeType": "Block",
															"src": "49110:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 2063,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2059,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2045,
																			"src": "49128:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2062,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2060,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "49137:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2061,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "49143:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "49137:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "49128:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2064,
																	"nodeType": "ExpressionStatement",
																	"src": "49128:17:0"
																},
																{
																	"expression": {
																		"id": 2067,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2065,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2051,
																			"src": "49163:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2066,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "49173:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "49163:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2068,
																	"nodeType": "ExpressionStatement",
																	"src": "49163:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2071,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2045,
																"src": "49207:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2074,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2072,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49216:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2073,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49222:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "49216:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "49207:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2087,
														"nodeType": "IfStatement",
														"src": "49203:103:0",
														"trueBody": {
															"id": 2086,
															"nodeType": "Block",
															"src": "49226:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 2080,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2076,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2045,
																			"src": "49244:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2079,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2077,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "49253:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2078,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "49259:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "49253:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "49244:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2081,
																	"nodeType": "ExpressionStatement",
																	"src": "49244:17:0"
																},
																{
																	"expression": {
																		"id": 2084,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2082,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2051,
																			"src": "49279:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2083,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "49289:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "49279:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2085,
																	"nodeType": "ExpressionStatement",
																	"src": "49279:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2092,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2088,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2045,
																"src": "49323:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2091,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2089,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49332:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2090,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49338:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "49332:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "49323:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2104,
														"nodeType": "IfStatement",
														"src": "49319:103:0",
														"trueBody": {
															"id": 2103,
															"nodeType": "Block",
															"src": "49342:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 2097,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2093,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2045,
																			"src": "49360:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2096,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2094,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "49369:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2095,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "49375:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "49369:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "49360:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2098,
																	"nodeType": "ExpressionStatement",
																	"src": "49360:17:0"
																},
																{
																	"expression": {
																		"id": 2101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2099,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2051,
																			"src": "49395:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2100,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "49405:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "49395:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2102,
																	"nodeType": "ExpressionStatement",
																	"src": "49395:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2105,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2045,
																"src": "49439:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2108,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49448:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2107,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49454:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "49448:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "49439:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2121,
														"nodeType": "IfStatement",
														"src": "49435:100:0",
														"trueBody": {
															"id": 2120,
															"nodeType": "Block",
															"src": "49457:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 2114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2110,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2045,
																			"src": "49475:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2113,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2111,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "49484:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2112,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "49490:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "49484:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "49475:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2115,
																	"nodeType": "ExpressionStatement",
																	"src": "49475:16:0"
																},
																{
																	"expression": {
																		"id": 2118,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2116,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2051,
																			"src": "49509:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2117,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "49519:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "49509:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2119,
																	"nodeType": "ExpressionStatement",
																	"src": "49509:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2122,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2045,
																"src": "49552:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2125,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2123,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49561:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49567:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "49561:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "49552:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2138,
														"nodeType": "IfStatement",
														"src": "49548:100:0",
														"trueBody": {
															"id": 2137,
															"nodeType": "Block",
															"src": "49570:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 2131,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2127,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2045,
																			"src": "49588:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2130,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2128,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "49597:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2129,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "49603:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "49597:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "49588:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2132,
																	"nodeType": "ExpressionStatement",
																	"src": "49588:16:0"
																},
																{
																	"expression": {
																		"id": 2135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2133,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2051,
																			"src": "49622:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2134,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "49632:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "49622:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2136,
																	"nodeType": "ExpressionStatement",
																	"src": "49622:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2139,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2045,
																"src": "49665:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2142,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49674:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2141,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49680:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "49674:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "49665:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2155,
														"nodeType": "IfStatement",
														"src": "49661:100:0",
														"trueBody": {
															"id": 2154,
															"nodeType": "Block",
															"src": "49683:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 2148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2144,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2045,
																			"src": "49701:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2147,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2145,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "49710:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2146,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "49716:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "49710:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "49701:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2149,
																	"nodeType": "ExpressionStatement",
																	"src": "49701:16:0"
																},
																{
																	"expression": {
																		"id": 2152,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2150,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2051,
																			"src": "49735:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2151,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "49745:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "49735:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2153,
																	"nodeType": "ExpressionStatement",
																	"src": "49735:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2156,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2045,
																"src": "49778:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2159,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2157,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49787:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49793:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "49787:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "49778:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2166,
														"nodeType": "IfStatement",
														"src": "49774:66:0",
														"trueBody": {
															"id": 2165,
															"nodeType": "Block",
															"src": "49796:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 2163,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2161,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2051,
																			"src": "49814:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2162,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "49824:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "49814:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2164,
																	"nodeType": "ExpressionStatement",
																	"src": "49814:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2168,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2051,
													"src": "49866:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2049,
												"id": 2169,
												"nodeType": "Return",
												"src": "49859:13:0"
											}
										]
									},
									"documentation": {
										"id": 2043,
										"nodeType": "StructuredDocumentation",
										"src": "48838:120:0",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "48972:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2045,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "48986:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2171,
												"src": "48978:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "48978:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48977:15:0"
									},
									"returnParameters": {
										"id": 2049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2048,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2171,
												"src": "49016:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2047,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49015:9:0"
									},
									"scope": 2351,
									"src": "48963:916:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2205,
										"nodeType": "Block",
										"src": "50114:170:0",
										"statements": [
											{
												"id": 2204,
												"nodeType": "UncheckedBlock",
												"src": "50124:154:0",
												"statements": [
													{
														"assignments": [
															2183
														],
														"declarations": [
															{
																"constant": false,
																"id": 2183,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "50156:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 2204,
																"src": "50148:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2182,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "50148:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2187,
														"initialValue": {
															"arguments": [
																{
																	"id": 2185,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2174,
																	"src": "50171:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2184,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2171,
																	2206
																],
																"referencedDeclaration": 2171,
																"src": "50165:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "50165:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "50148:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2188,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2183,
																"src": "50198:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2197,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2190,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2177,
																						"src": "50225:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1308",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1308",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2189,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2350,
																					"src": "50208:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1308_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2191,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "50208:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2196,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2194,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2192,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "50238:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2193,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2183,
																						"src": "50244:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "50238:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2195,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2174,
																					"src": "50253:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "50238:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "50208:50:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2199,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "50265:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2200,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "50208:58:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2198,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "50261:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2201,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "50207:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "50198:69:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2181,
														"id": 2203,
														"nodeType": "Return",
														"src": "50191:76:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2172,
										"nodeType": "StructuredDocumentation",
										"src": "49885:143:0",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "50042:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2174,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "50056:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2206,
												"src": "50048:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50048:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2177,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "50072:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2206,
												"src": "50063:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1308",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2176,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2175,
														"name": "Rounding",
														"nameLocations": [
															"50063:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1308,
														"src": "50063:8:0"
													},
													"referencedDeclaration": 1308,
													"src": "50063:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1308",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50047:34:0"
									},
									"returnParameters": {
										"id": 2181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2206,
												"src": "50105:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50105:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50104:9:0"
									},
									"scope": 2351,
									"src": "50033:251:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2292,
										"nodeType": "Block",
										"src": "50604:600:0",
										"statements": [
											{
												"assignments": [
													2215
												],
												"declarations": [
													{
														"constant": false,
														"id": 2215,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "50622:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 2292,
														"src": "50614:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2214,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "50614:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2217,
												"initialValue": {
													"hexValue": "30",
													"id": 2216,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "50631:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "50614:18:0"
											},
											{
												"id": 2289,
												"nodeType": "UncheckedBlock",
												"src": "50642:533:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2218,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2209,
																	"src": "50670:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2219,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "50679:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "50670:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2221,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "50685:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "50670:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2232,
														"nodeType": "IfStatement",
														"src": "50666:98:0",
														"trueBody": {
															"id": 2231,
															"nodeType": "Block",
															"src": "50688:76:0",
															"statements": [
																{
																	"expression": {
																		"id": 2225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2223,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2209,
																			"src": "50706:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2224,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "50716:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "50706:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2226,
																	"nodeType": "ExpressionStatement",
																	"src": "50706:13:0"
																},
																{
																	"expression": {
																		"id": 2229,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2227,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2215,
																			"src": "50737:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2228,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "50747:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "50737:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2230,
																	"nodeType": "ExpressionStatement",
																	"src": "50737:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2233,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2209,
																	"src": "50781:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "50790:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "50781:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2236,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "50795:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "50781:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2247,
														"nodeType": "IfStatement",
														"src": "50777:95:0",
														"trueBody": {
															"id": 2246,
															"nodeType": "Block",
															"src": "50798:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 2240,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2238,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2209,
																			"src": "50816:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2239,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "50826:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "50816:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2241,
																	"nodeType": "ExpressionStatement",
																	"src": "50816:12:0"
																},
																{
																	"expression": {
																		"id": 2244,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2242,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2215,
																			"src": "50846:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2243,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "50856:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "50846:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2245,
																	"nodeType": "ExpressionStatement",
																	"src": "50846:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2250,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2248,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2209,
																	"src": "50889:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2249,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "50898:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "50889:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "50903:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "50889:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2262,
														"nodeType": "IfStatement",
														"src": "50885:95:0",
														"trueBody": {
															"id": 2261,
															"nodeType": "Block",
															"src": "50906:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 2255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2253,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2209,
																			"src": "50924:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2254,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "50934:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "50924:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2256,
																	"nodeType": "ExpressionStatement",
																	"src": "50924:12:0"
																},
																{
																	"expression": {
																		"id": 2259,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2257,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2215,
																			"src": "50954:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2258,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "50964:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "50954:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2260,
																	"nodeType": "ExpressionStatement",
																	"src": "50954:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2265,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2263,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2209,
																	"src": "50997:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "51006:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "50997:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2266,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "51011:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "50997:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2277,
														"nodeType": "IfStatement",
														"src": "50993:95:0",
														"trueBody": {
															"id": 2276,
															"nodeType": "Block",
															"src": "51014:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 2270,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2268,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2209,
																			"src": "51032:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2269,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "51042:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "51032:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2271,
																	"nodeType": "ExpressionStatement",
																	"src": "51032:12:0"
																},
																{
																	"expression": {
																		"id": 2274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2272,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2215,
																			"src": "51062:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2273,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "51072:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "51062:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2275,
																	"nodeType": "ExpressionStatement",
																	"src": "51062:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2278,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2209,
																	"src": "51105:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "51114:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "51105:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2281,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "51118:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "51105:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2288,
														"nodeType": "IfStatement",
														"src": "51101:64:0",
														"trueBody": {
															"id": 2287,
															"nodeType": "Block",
															"src": "51121:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 2285,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2283,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2215,
																			"src": "51139:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2284,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "51149:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "51139:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2286,
																	"nodeType": "ExpressionStatement",
																	"src": "51139:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2290,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2215,
													"src": "51191:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2213,
												"id": 2291,
												"nodeType": "Return",
												"src": "51184:13:0"
											}
										]
									},
									"documentation": {
										"id": 2207,
										"nodeType": "StructuredDocumentation",
										"src": "50290:246:0",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "50550:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2209,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "50565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2293,
												"src": "50557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50557:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50556:15:0"
									},
									"returnParameters": {
										"id": 2213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2293,
												"src": "50595:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50595:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50594:9:0"
									},
									"scope": 2351,
									"src": "50541:663:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2330,
										"nodeType": "Block",
										"src": "51441:177:0",
										"statements": [
											{
												"id": 2329,
												"nodeType": "UncheckedBlock",
												"src": "51451:161:0",
												"statements": [
													{
														"assignments": [
															2305
														],
														"declarations": [
															{
																"constant": false,
																"id": 2305,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "51483:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 2329,
																"src": "51475:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2304,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "51475:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2309,
														"initialValue": {
															"arguments": [
																{
																	"id": 2307,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2296,
																	"src": "51499:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2306,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2293,
																	2331
																],
																"referencedDeclaration": 2293,
																"src": "51492:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "51492:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "51475:30:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2310,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2305,
																"src": "51526:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2322,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2312,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2299,
																						"src": "51553:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1308",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1308",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2311,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2350,
																					"src": "51536:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1308_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2313,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "51536:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2321,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2319,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2314,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "51566:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2317,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2315,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2305,
																									"src": "51572:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2316,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "51582:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "51572:11:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2318,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "51571:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "51566:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2320,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2296,
																					"src": "51587:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "51566:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "51536:56:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2324,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "51599:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2325,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "51536:64:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2323,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "51595:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2326,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "51535:66:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "51526:75:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2303,
														"id": 2328,
														"nodeType": "Return",
														"src": "51519:82:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2294,
										"nodeType": "StructuredDocumentation",
										"src": "51210:144:0",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "51368:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2296,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "51383:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2331,
												"src": "51375:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51375:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2299,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "51399:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2331,
												"src": "51390:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1308",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2298,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2297,
														"name": "Rounding",
														"nameLocations": [
															"51390:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1308,
														"src": "51390:8:0"
													},
													"referencedDeclaration": 1308,
													"src": "51390:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1308",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51374:34:0"
									},
									"returnParameters": {
										"id": 2303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2331,
												"src": "51432:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51432:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51431:9:0"
									},
									"scope": 2351,
									"src": "51359:259:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2349,
										"nodeType": "Block",
										"src": "51816:48:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2345,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2342,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2335,
																	"src": "51839:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1308",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1308",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2341,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "51833:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2340,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "51833:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "51833:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2344,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "51851:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "51833:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2346,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "51856:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "51833:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2339,
												"id": 2348,
												"nodeType": "Return",
												"src": "51826:31:0"
											}
										]
									},
									"documentation": {
										"id": 2332,
										"nodeType": "StructuredDocumentation",
										"src": "51624:113:0",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2350,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "51751:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2335,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "51777:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2350,
												"src": "51768:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1308",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2334,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2333,
														"name": "Rounding",
														"nameLocations": [
															"51768:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1308,
														"src": "51768:8:0"
													},
													"referencedDeclaration": 1308,
													"src": "51768:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1308",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51767:19:0"
									},
									"returnParameters": {
										"id": 2339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2338,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2350,
												"src": "51810:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2337,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "51810:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51809:6:0"
									},
									"scope": 2351,
									"src": "51742:122:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3604,
							"src": "36952:14914:0",
							"usedErrors": [
								1303
							],
							"usedEvents": []
						},
						{
							"id": 2352,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "52006:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2353,
								"nodeType": "StructuredDocumentation",
								"src": "52032:80:0",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2455,
							"linearizedBaseContracts": [
								2455
							],
							"name": "SignedMath",
							"nameLocation": "52121:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2370,
										"nodeType": "Block",
										"src": "52273:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2365,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2363,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2356,
															"src": "52290:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2364,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2358,
															"src": "52294:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "52290:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2367,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2358,
														"src": "52302:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "52290:13:0",
													"trueExpression": {
														"id": 2366,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2356,
														"src": "52298:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2362,
												"id": 2369,
												"nodeType": "Return",
												"src": "52283:20:0"
											}
										]
									},
									"documentation": {
										"id": 2354,
										"nodeType": "StructuredDocumentation",
										"src": "52138:66:0",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "52218:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2356,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "52229:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2371,
												"src": "52222:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2355,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "52222:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2358,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "52239:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2371,
												"src": "52232:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2357,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "52232:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52221:20:0"
									},
									"returnParameters": {
										"id": 2362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2371,
												"src": "52265:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2360,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "52265:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52264:8:0"
									},
									"scope": 2455,
									"src": "52209:101:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2388,
										"nodeType": "Block",
										"src": "52452:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2383,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2381,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2374,
															"src": "52469:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2382,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2376,
															"src": "52473:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "52469:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2385,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2376,
														"src": "52481:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "52469:13:0",
													"trueExpression": {
														"id": 2384,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2374,
														"src": "52477:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2380,
												"id": 2387,
												"nodeType": "Return",
												"src": "52462:20:0"
											}
										]
									},
									"documentation": {
										"id": 2372,
										"nodeType": "StructuredDocumentation",
										"src": "52316:67:0",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2389,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "52397:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2374,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "52408:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2389,
												"src": "52401:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2373,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "52401:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2376,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "52418:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2389,
												"src": "52411:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2375,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "52411:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52400:20:0"
									},
									"returnParameters": {
										"id": 2380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2379,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2389,
												"src": "52444:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2378,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "52444:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52443:8:0"
									},
									"scope": 2455,
									"src": "52388:101:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2432,
										"nodeType": "Block",
										"src": "52694:162:0",
										"statements": [
											{
												"assignments": [
													2400
												],
												"declarations": [
													{
														"constant": false,
														"id": 2400,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "52763:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 2432,
														"src": "52756:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2399,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "52756:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2413,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2401,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2392,
																	"src": "52768:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2402,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2394,
																	"src": "52772:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "52768:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2404,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "52767:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2407,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2405,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2392,
																				"src": "52779:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2406,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2394,
																				"src": "52783:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "52779:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2408,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "52778:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "52789:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "52778:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2411,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "52777:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "52767:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "52756:35:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2414,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2400,
														"src": "52808:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2428,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2422,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2419,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2400,
																						"src": "52828:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2418,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "52820:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2417,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "52820:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2420,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "52820:10:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 2421,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "52834:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "52820:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2416,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "52813:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2415,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "52813:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "52813:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2426,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2424,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2392,
																				"src": "52842:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2425,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2394,
																				"src": "52846:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "52842:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2427,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "52841:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "52813:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2429,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "52812:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "52808:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2398,
												"id": 2431,
												"nodeType": "Return",
												"src": "52801:48:0"
											}
										]
									},
									"documentation": {
										"id": 2390,
										"nodeType": "StructuredDocumentation",
										"src": "52495:126:0",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 2433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "52635:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2392,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "52650:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2433,
												"src": "52643:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2391,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "52643:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2394,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "52660:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2433,
												"src": "52653:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2393,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "52653:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52642:20:0"
									},
									"returnParameters": {
										"id": 2398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2397,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2433,
												"src": "52686:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2396,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "52686:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52685:8:0"
									},
									"scope": 2455,
									"src": "52626:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2453,
										"nodeType": "Block",
										"src": "53000:158:0",
										"statements": [
											{
												"id": 2452,
												"nodeType": "UncheckedBlock",
												"src": "53010:142:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2445,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2443,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2436,
																			"src": "53125:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2444,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "53130:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "53125:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 2448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "53138:2:0",
																		"subExpression": {
																			"id": 2447,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2436,
																			"src": "53139:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 2449,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "53125:15:0",
																	"trueExpression": {
																		"id": 2446,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2436,
																		"src": "53134:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2442,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "53117:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2441,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "53117:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "53117:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2440,
														"id": 2451,
														"nodeType": "Return",
														"src": "53110:31:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2434,
										"nodeType": "StructuredDocumentation",
										"src": "52862:78:0",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 2454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "52954:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2436,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "52965:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2454,
												"src": "52958:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2435,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "52958:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52957:10:0"
									},
									"returnParameters": {
										"id": 2440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2454,
												"src": "52991:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "52991:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52990:9:0"
									},
									"scope": 2455,
									"src": "52945:213:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3604,
							"src": "52113:1047:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 2456,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "53284:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2457,
								"nodeType": "StructuredDocumentation",
								"src": "53312:34:0",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 2705,
							"linearizedBaseContracts": [
								2705
							],
							"name": "Strings",
							"nameLocation": "53355:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 2460,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "53394:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 2705,
									"src": "53369:56:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 2458,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "53369:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 2459,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "53407:18:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 2463,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "53454:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 2705,
									"src": "53431:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2461,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "53431:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 2462,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "53471:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 2464,
										"nodeType": "StructuredDocumentation",
										"src": "53480:81:0",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 2470,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "53572:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2466,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "53609:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2470,
												"src": "53601:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "53601:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2468,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "53624:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2470,
												"src": "53616:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "53616:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53600:31:0"
									},
									"src": "53566:66:0"
								},
								{
									"body": {
										"id": 2517,
										"nodeType": "Block",
										"src": "53804:627:0",
										"statements": [
											{
												"id": 2516,
												"nodeType": "UncheckedBlock",
												"src": "53814:611:0",
												"statements": [
													{
														"assignments": [
															2479
														],
														"declarations": [
															{
																"constant": false,
																"id": 2479,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "53846:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 2516,
																"src": "53838:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2478,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "53838:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2486,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2482,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2473,
																		"src": "53866:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2480,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2351,
																		"src": "53855:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2351_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 2481,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "53860:5:0",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2171,
																	"src": "53855:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 2483,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "53855:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 2484,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "53875:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "53855:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "53838:38:0"
													},
													{
														"assignments": [
															2488
														],
														"declarations": [
															{
																"constant": false,
																"id": 2488,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "53904:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 2516,
																"src": "53890:20:0",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 2487,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "53890:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2493,
														"initialValue": {
															"arguments": [
																{
																	"id": 2491,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2479,
																	"src": "53924:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2490,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "53913:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 2489,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "53917:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 2492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "53913:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "53890:41:0"
													},
													{
														"assignments": [
															2495
														],
														"declarations": [
															{
																"constant": false,
																"id": 2495,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "53953:3:0",
																"nodeType": "VariableDeclaration",
																"scope": 2516,
																"src": "53945:11:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2494,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "53945:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2496,
														"nodeType": "VariableDeclarationStatement",
														"src": "53945:11:0"
													},
													{
														"AST": {
															"nativeSrc": "54026:67:0",
															"nodeType": "YulBlock",
															"src": "54026:67:0",
															"statements": [
																{
																	"nativeSrc": "54044:35:0",
																	"nodeType": "YulAssignment",
																	"src": "54044:35:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "54055:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "54055:6:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "54067:2:0",
																						"nodeType": "YulLiteral",
																						"src": "54067:2:0",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "54071:6:0",
																						"nodeType": "YulIdentifier",
																						"src": "54071:6:0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "54063:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "54063:3:0"
																				},
																				"nativeSrc": "54063:15:0",
																				"nodeType": "YulFunctionCall",
																				"src": "54063:15:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "54051:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "54051:3:0"
																		},
																		"nativeSrc": "54051:28:0",
																		"nodeType": "YulFunctionCall",
																		"src": "54051:28:0"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "54044:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "54044:3:0"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2488,
																"isOffset": false,
																"isSlot": false,
																"src": "54055:6:0",
																"valueSize": 1
															},
															{
																"declaration": 2479,
																"isOffset": false,
																"isSlot": false,
																"src": "54071:6:0",
																"valueSize": 1
															},
															{
																"declaration": 2495,
																"isOffset": false,
																"isSlot": false,
																"src": "54044:3:0",
																"valueSize": 1
															}
														],
														"id": 2497,
														"nodeType": "InlineAssembly",
														"src": "54017:76:0"
													},
													{
														"body": {
															"id": 2512,
															"nodeType": "Block",
															"src": "54119:269:0",
															"statements": [
																{
																	"expression": {
																		"id": 2500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "54137:5:0",
																		"subExpression": {
																			"id": 2499,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2495,
																			"src": "54137:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2501,
																	"nodeType": "ExpressionStatement",
																	"src": "54137:5:0"
																},
																{
																	"AST": {
																		"nativeSrc": "54220:86:0",
																		"nodeType": "YulBlock",
																		"src": "54220:86:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "54250:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "54250:3:0"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "54264:5:0",
																											"nodeType": "YulIdentifier",
																											"src": "54264:5:0"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "54271:2:0",
																											"nodeType": "YulLiteral",
																											"src": "54271:2:0",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "54260:3:0",
																										"nodeType": "YulIdentifier",
																										"src": "54260:3:0"
																									},
																									"nativeSrc": "54260:14:0",
																									"nodeType": "YulFunctionCall",
																									"src": "54260:14:0"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "54276:10:0",
																									"nodeType": "YulIdentifier",
																									"src": "54276:10:0"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "54255:4:0",
																								"nodeType": "YulIdentifier",
																								"src": "54255:4:0"
																							},
																							"nativeSrc": "54255:32:0",
																							"nodeType": "YulFunctionCall",
																							"src": "54255:32:0"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "54242:7:0",
																						"nodeType": "YulIdentifier",
																						"src": "54242:7:0"
																					},
																					"nativeSrc": "54242:46:0",
																					"nodeType": "YulFunctionCall",
																					"src": "54242:46:0"
																				},
																				"nativeSrc": "54242:46:0",
																				"nodeType": "YulExpressionStatement",
																				"src": "54242:46:0"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 2460,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "54276:10:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 2495,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "54250:3:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 2473,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "54264:5:0",
																			"valueSize": 1
																		}
																	],
																	"id": 2502,
																	"nodeType": "InlineAssembly",
																	"src": "54211:95:0"
																},
																{
																	"expression": {
																		"id": 2505,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2503,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2473,
																			"src": "54323:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 2504,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "54332:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "54323:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2506,
																	"nodeType": "ExpressionStatement",
																	"src": "54323:11:0"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2507,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2473,
																			"src": "54356:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2508,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "54365:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "54356:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2511,
																	"nodeType": "IfStatement",
																	"src": "54352:21:0",
																	"trueBody": {
																		"id": 2510,
																		"nodeType": "Break",
																		"src": "54368:5:0"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 2498,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "54113:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 2513,
														"nodeType": "WhileStatement",
														"src": "54106:282:0"
													},
													{
														"expression": {
															"id": 2514,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2488,
															"src": "54408:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 2477,
														"id": 2515,
														"nodeType": "Return",
														"src": "54401:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2471,
										"nodeType": "StructuredDocumentation",
										"src": "53638:90:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 2518,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "53742:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2473,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "53759:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2518,
												"src": "53751:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "53751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53750:15:0"
									},
									"returnParameters": {
										"id": 2477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2476,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2518,
												"src": "53789:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2475,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "53789:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53788:15:0"
									},
									"scope": 2705,
									"src": "53733:698:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2543,
										"nodeType": "Block",
										"src": "54607:92:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2531,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2529,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2521,
																	"src": "54638:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "54646:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "54638:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 2533,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "54656:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 2534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "54638:20:0",
															"trueExpression": {
																"hexValue": "2d",
																"id": 2532,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "54650:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2538,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2521,
																			"src": "54684:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 2536,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2455,
																			"src": "54669:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$2455_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 2537,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "54680:3:0",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2454,
																		"src": "54669:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 2539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "54669:21:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2535,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2518,
																"src": "54660:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 2540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "54660:31:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 2527,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "54624:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 2526,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "54624:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 2528,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "54631:6:0",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "54624:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 2541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "54624:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2525,
												"id": 2542,
												"nodeType": "Return",
												"src": "54617:75:0"
											}
										]
									},
									"documentation": {
										"id": 2519,
										"nodeType": "StructuredDocumentation",
										"src": "54437:89:0",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 2544,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "54540:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2521,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "54562:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2544,
												"src": "54555:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2520,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "54555:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54554:14:0"
									},
									"returnParameters": {
										"id": 2525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2524,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2544,
												"src": "54592:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2523,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "54592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54591:15:0"
									},
									"scope": 2705,
									"src": "54531:168:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2563,
										"nodeType": "Block",
										"src": "54878:100:0",
										"statements": [
											{
												"id": 2562,
												"nodeType": "UncheckedBlock",
												"src": "54888:84:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 2553,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2547,
																	"src": "54931:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 2556,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2547,
																				"src": "54950:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 2554,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2351,
																				"src": "54938:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2351_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 2555,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "54943:6:0",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2293,
																			"src": "54938:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2557,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "54938:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 2558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "54959:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "54938:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2552,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2564,
																	2647,
																	2667
																],
																"referencedDeclaration": 2647,
																"src": "54919:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 2560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "54919:42:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 2551,
														"id": 2561,
														"nodeType": "Return",
														"src": "54912:49:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2545,
										"nodeType": "StructuredDocumentation",
										"src": "54705:94:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 2564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "54813:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2547,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "54833:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2564,
												"src": "54825:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "54825:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54824:15:0"
									},
									"returnParameters": {
										"id": 2551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2550,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2564,
												"src": "54863:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2549,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "54863:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54862:15:0"
									},
									"scope": 2705,
									"src": "54804:174:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2646,
										"nodeType": "Block",
										"src": "55191:435:0",
										"statements": [
											{
												"assignments": [
													2575
												],
												"declarations": [
													{
														"constant": false,
														"id": 2575,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "55209:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 2646,
														"src": "55201:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2574,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "55201:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2577,
												"initialValue": {
													"id": 2576,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2567,
													"src": "55222:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "55201:26:0"
											},
											{
												"assignments": [
													2579
												],
												"declarations": [
													{
														"constant": false,
														"id": 2579,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "55250:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 2646,
														"src": "55237:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2578,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "55237:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2588,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2582,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "55269:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2583,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2569,
																	"src": "55273:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "55269:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 2585,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "55282:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "55269:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2581,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "55259:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 2580,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "55263:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 2587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "55259:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "55237:47:0"
											},
											{
												"expression": {
													"id": 2593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2589,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2579,
															"src": "55294:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2591,
														"indexExpression": {
															"hexValue": "30",
															"id": 2590,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "55301:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "55294:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2592,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "55306:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "55294:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2594,
												"nodeType": "ExpressionStatement",
												"src": "55294:15:0"
											},
											{
												"expression": {
													"id": 2599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2595,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2579,
															"src": "55319:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2597,
														"indexExpression": {
															"hexValue": "31",
															"id": 2596,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "55326:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "55319:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 2598,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "55331:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "55319:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2600,
												"nodeType": "ExpressionStatement",
												"src": "55319:15:0"
											},
											{
												"body": {
													"id": 2629,
													"nodeType": "Block",
													"src": "55389:95:0",
													"statements": [
														{
															"expression": {
																"id": 2623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2615,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2579,
																		"src": "55403:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2617,
																	"indexExpression": {
																		"id": 2616,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2602,
																		"src": "55410:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "55403:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2618,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2460,
																		"src": "55415:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 2622,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2619,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2575,
																			"src": "55426:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 2620,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "55439:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "55426:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "55415:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "55403:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 2624,
															"nodeType": "ExpressionStatement",
															"src": "55403:40:0"
														},
														{
															"expression": {
																"id": 2627,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2625,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2575,
																	"src": "55457:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 2626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "55472:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "55457:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2628,
															"nodeType": "ExpressionStatement",
															"src": "55457:16:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2609,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2602,
														"src": "55377:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 2610,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "55381:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "55377:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2630,
												"initializationExpression": {
													"assignments": [
														2602
													],
													"declarations": [
														{
															"constant": false,
															"id": 2602,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "55357:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 2630,
															"src": "55349:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2601,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "55349:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2608,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2607,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 2603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "55361:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2604,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2569,
																"src": "55365:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "55361:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2606,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "55374:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "55361:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "55349:26:0"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 2613,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "55384:3:0",
														"subExpression": {
															"id": 2612,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2602,
															"src": "55386:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2614,
													"nodeType": "ExpressionStatement",
													"src": "55384:3:0"
												},
												"nodeType": "ForStatement",
												"src": "55344:140:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2631,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2575,
														"src": "55497:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2632,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "55511:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "55497:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2640,
												"nodeType": "IfStatement",
												"src": "55493:96:0",
												"trueBody": {
													"id": 2639,
													"nodeType": "Block",
													"src": "55514:75:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2635,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2567,
																		"src": "55564:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2636,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2569,
																		"src": "55571:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2634,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2470,
																	"src": "55535:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 2637,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "55535:43:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2638,
															"nodeType": "RevertStatement",
															"src": "55528:50:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2643,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2579,
															"src": "55612:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2642,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "55605:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2641,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "55605:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 2644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "55605:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2573,
												"id": 2645,
												"nodeType": "Return",
												"src": "55598:21:0"
											}
										]
									},
									"documentation": {
										"id": 2565,
										"nodeType": "StructuredDocumentation",
										"src": "54984:112:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 2647,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "55110:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2567,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "55130:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2647,
												"src": "55122:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "55122:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2569,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "55145:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2647,
												"src": "55137:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "55137:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55121:31:0"
									},
									"returnParameters": {
										"id": 2573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2572,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2647,
												"src": "55176:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2571,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "55176:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55175:15:0"
									},
									"scope": 2705,
									"src": "55101:525:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2666,
										"nodeType": "Block",
										"src": "55858:75:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2660,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2650,
																			"src": "55903:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "55895:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 2658,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "55895:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2661,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "55895:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 2657,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "55887:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2656,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "55887:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "55887:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2663,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2463,
															"src": "55911:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 2655,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2564,
															2647,
															2667
														],
														"referencedDeclaration": 2647,
														"src": "55875:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 2664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "55875:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2654,
												"id": 2665,
												"nodeType": "Return",
												"src": "55868:58:0"
											}
										]
									},
									"documentation": {
										"id": 2648,
										"nodeType": "StructuredDocumentation",
										"src": "55632:148:0",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 2667,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "55794:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2650,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "55814:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2667,
												"src": "55806:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2649,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "55806:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55805:14:0"
									},
									"returnParameters": {
										"id": 2654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2653,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2667,
												"src": "55843:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2652,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "55843:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55842:15:0"
									},
									"scope": 2705,
									"src": "55785:148:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2703,
										"nodeType": "Block",
										"src": "56088:104:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2687,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2679,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2670,
																		"src": "56111:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "56105:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2677,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "56105:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2680,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "56105:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2681,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "56114:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "56105:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2684,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2672,
																		"src": "56130:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2683,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "56124:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2682,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "56124:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "56124:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "56133:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "56124:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "56105:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 2700,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2691,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2670,
																			"src": "56159:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2690,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "56153:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2689,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "56153:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "56153:8:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2688,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "56143:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "56143:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2697,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2672,
																			"src": "56182:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2696,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "56176:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2695,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "56176:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "56176:8:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2694,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "56166:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2699,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "56166:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "56143:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "56105:80:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2676,
												"id": 2702,
												"nodeType": "Return",
												"src": "56098:87:0"
											}
										]
									},
									"documentation": {
										"id": 2668,
										"nodeType": "StructuredDocumentation",
										"src": "55939:66:0",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 2704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "56019:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2670,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "56039:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2704,
												"src": "56025:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2669,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "56025:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2672,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "56056:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2704,
												"src": "56042:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2671,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "56042:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56024:34:0"
									},
									"returnParameters": {
										"id": 2676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2675,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2704,
												"src": "56082:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2674,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "56082:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56081:6:0"
									},
									"scope": 2705,
									"src": "56010:182:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3604,
							"src": "53347:2847:0",
							"usedErrors": [
								2470
							],
							"usedEvents": []
						},
						{
							"id": 2706,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "56362:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MessageHashUtils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2707,
								"nodeType": "StructuredDocumentation",
								"src": "56389:330:0",
								"text": " @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."
							},
							"fullyImplemented": true,
							"id": 2776,
							"linearizedBaseContracts": [
								2776
							],
							"name": "MessageHashUtils",
							"nameLocation": "56728:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2716,
										"nodeType": "Block",
										"src": "57513:368:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "57575:300:0",
													"nodeType": "YulBlock",
													"src": "57575:300:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "57596:4:0",
																		"nodeType": "YulLiteral",
																		"src": "57596:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
																		"kind": "string",
																		"nativeSrc": "57602:34:0",
																		"nodeType": "YulLiteral",
																		"src": "57602:34:0",
																		"type": "",
																		"value": "\u0019Ethereum Signed Message:\n32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "57589:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "57589:6:0"
																},
																"nativeSrc": "57589:48:0",
																"nodeType": "YulFunctionCall",
																"src": "57589:48:0"
															},
															"nativeSrc": "57589:48:0",
															"nodeType": "YulExpressionStatement",
															"src": "57589:48:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "57698:4:0",
																		"nodeType": "YulLiteral",
																		"src": "57698:4:0",
																		"type": "",
																		"value": "0x1c"
																	},
																	{
																		"name": "messageHash",
																		"nativeSrc": "57704:11:0",
																		"nodeType": "YulIdentifier",
																		"src": "57704:11:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "57691:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "57691:6:0"
																},
																"nativeSrc": "57691:25:0",
																"nodeType": "YulFunctionCall",
																"src": "57691:25:0"
															},
															"nativeSrc": "57691:25:0",
															"nodeType": "YulExpressionStatement",
															"src": "57691:25:0"
														},
														{
															"nativeSrc": "57770:31:0",
															"nodeType": "YulAssignment",
															"src": "57770:31:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "57790:4:0",
																		"nodeType": "YulLiteral",
																		"src": "57790:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "57796:4:0",
																		"nodeType": "YulLiteral",
																		"src": "57796:4:0",
																		"type": "",
																		"value": "0x3c"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "57780:9:0",
																	"nodeType": "YulIdentifier",
																	"src": "57780:9:0"
																},
																"nativeSrc": "57780:21:0",
																"nodeType": "YulFunctionCall",
																"src": "57780:21:0"
															},
															"variableNames": [
																{
																	"name": "digest",
																	"nativeSrc": "57770:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "57770:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2713,
														"isOffset": false,
														"isSlot": false,
														"src": "57770:6:0",
														"valueSize": 1
													},
													{
														"declaration": 2710,
														"isOffset": false,
														"isSlot": false,
														"src": "57704:11:0",
														"valueSize": 1
													}
												],
												"id": 2715,
												"nodeType": "InlineAssembly",
												"src": "57566:309:0"
											}
										]
									},
									"documentation": {
										"id": 2708,
										"nodeType": "StructuredDocumentation",
										"src": "56751:665:0",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."
									},
									"id": 2717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "57430:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2710,
												"mutability": "mutable",
												"name": "messageHash",
												"nameLocation": "57461:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 2717,
												"src": "57453:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2709,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "57453:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57452:21:0"
									},
									"returnParameters": {
										"id": 2714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2713,
												"mutability": "mutable",
												"name": "digest",
												"nameLocation": "57505:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2717,
												"src": "57497:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2712,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "57497:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57496:16:0"
									},
									"scope": 2776,
									"src": "57421:460:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2742,
										"nodeType": "Block",
										"src": "58433:143:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a",
																	"id": 2729,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "58485:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	"value": "\u0019Ethereum Signed Message:\n"
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 2734,
																						"name": "message",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2720,
																						"src": "58542:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					},
																					"id": 2735,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "58550:6:0",
																					"memberName": "length",
																					"nodeType": "MemberAccess",
																					"src": "58542:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2732,
																					"name": "Strings",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2705,
																					"src": "58525:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Strings_$2705_$",
																						"typeString": "type(library Strings)"
																					}
																				},
																				"id": 2733,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "58533:8:0",
																				"memberName": "toString",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2518,
																				"src": "58525:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																					"typeString": "function (uint256) pure returns (string memory)"
																				}
																			},
																			"id": 2736,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "58525:32:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "58519:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2730,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "58519:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2737,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "58519:39:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"id": 2738,
																	"name": "message",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2720,
																	"src": "58560:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 2727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "58472:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2726,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "58472:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "58478:6:0",
																"memberName": "concat",
																"nodeType": "MemberAccess",
																"src": "58472:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "58472:96:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2725,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "58462:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58462:107:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2724,
												"id": 2741,
												"nodeType": "Return",
												"src": "58443:126:0"
											}
										]
									},
									"documentation": {
										"id": 2718,
										"nodeType": "StructuredDocumentation",
										"src": "57887:455:0",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."
									},
									"id": 2743,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "58356:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2720,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "58392:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2743,
												"src": "58379:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2719,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "58379:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58378:22:0"
									},
									"returnParameters": {
										"id": 2724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2723,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2743,
												"src": "58424:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2722,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "58424:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58423:9:0"
									},
									"scope": 2776,
									"src": "58347:229:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2762,
										"nodeType": "Block",
										"src": "59030:80:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "1900",
																	"id": 2756,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "hexString",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "59074:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
																		"typeString": "literal_string hex\"1900\""
																	},
																	"value": "\u0019\u0000"
																},
																{
																	"id": 2757,
																	"name": "validator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2746,
																	"src": "59086:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2758,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2748,
																	"src": "59097:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
																		"typeString": "literal_string hex\"1900\""
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 2754,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "59057:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2755,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "59061:12:0",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "59057:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "59057:45:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2753,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "59047:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59047:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2752,
												"id": 2761,
												"nodeType": "Return",
												"src": "59040:63:0"
											}
										]
									},
									"documentation": {
										"id": 2744,
										"nodeType": "StructuredDocumentation",
										"src": "58582:332:0",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."
									},
									"id": 2763,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toDataWithIntendedValidatorHash",
									"nameLocation": "58928:31:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2746,
												"mutability": "mutable",
												"name": "validator",
												"nameLocation": "58968:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2763,
												"src": "58960:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "58960:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2748,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "58992:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2763,
												"src": "58979:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2747,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "58979:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58959:38:0"
									},
									"returnParameters": {
										"id": 2752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2751,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2763,
												"src": "59021:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2750,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "59021:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59020:9:0"
									},
									"scope": 2776,
									"src": "58919:191:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2774,
										"nodeType": "Block",
										"src": "59661:292:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "59723:224:0",
													"nodeType": "YulBlock",
													"src": "59723:224:0",
													"statements": [
														{
															"nativeSrc": "59737:22:0",
															"nodeType": "YulVariableDeclaration",
															"src": "59737:22:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "59754:4:0",
																		"nodeType": "YulLiteral",
																		"src": "59754:4:0",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "59748:5:0",
																	"nodeType": "YulIdentifier",
																	"src": "59748:5:0"
																},
																"nativeSrc": "59748:11:0",
																"nodeType": "YulFunctionCall",
																"src": "59748:11:0"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "59741:3:0",
																	"nodeType": "YulTypedName",
																	"src": "59741:3:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "59779:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "59779:3:0"
																	},
																	{
																		"hexValue": "1901",
																		"kind": "string",
																		"nativeSrc": "59784:10:0",
																		"nodeType": "YulLiteral",
																		"src": "59784:10:0",
																		"type": "",
																		"value": "\u0019\u0001"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "59772:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "59772:6:0"
																},
																"nativeSrc": "59772:23:0",
																"nodeType": "YulFunctionCall",
																"src": "59772:23:0"
															},
															"nativeSrc": "59772:23:0",
															"nodeType": "YulExpressionStatement",
															"src": "59772:23:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "59819:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "59819:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "59824:4:0",
																				"nodeType": "YulLiteral",
																				"src": "59824:4:0",
																				"type": "",
																				"value": "0x02"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "59815:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "59815:3:0"
																		},
																		"nativeSrc": "59815:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "59815:14:0"
																	},
																	{
																		"name": "domainSeparator",
																		"nativeSrc": "59831:15:0",
																		"nodeType": "YulIdentifier",
																		"src": "59831:15:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "59808:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "59808:6:0"
																},
																"nativeSrc": "59808:39:0",
																"nodeType": "YulFunctionCall",
																"src": "59808:39:0"
															},
															"nativeSrc": "59808:39:0",
															"nodeType": "YulExpressionStatement",
															"src": "59808:39:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "59871:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "59871:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "59876:4:0",
																				"nodeType": "YulLiteral",
																				"src": "59876:4:0",
																				"type": "",
																				"value": "0x22"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "59867:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "59867:3:0"
																		},
																		"nativeSrc": "59867:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "59867:14:0"
																	},
																	{
																		"name": "structHash",
																		"nativeSrc": "59883:10:0",
																		"nodeType": "YulIdentifier",
																		"src": "59883:10:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "59860:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "59860:6:0"
																},
																"nativeSrc": "59860:34:0",
																"nodeType": "YulFunctionCall",
																"src": "59860:34:0"
															},
															"nativeSrc": "59860:34:0",
															"nodeType": "YulExpressionStatement",
															"src": "59860:34:0"
														},
														{
															"nativeSrc": "59907:30:0",
															"nodeType": "YulAssignment",
															"src": "59907:30:0",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "59927:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "59927:3:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "59932:4:0",
																		"nodeType": "YulLiteral",
																		"src": "59932:4:0",
																		"type": "",
																		"value": "0x42"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "59917:9:0",
																	"nodeType": "YulIdentifier",
																	"src": "59917:9:0"
																},
																"nativeSrc": "59917:20:0",
																"nodeType": "YulFunctionCall",
																"src": "59917:20:0"
															},
															"variableNames": [
																{
																	"name": "digest",
																	"nativeSrc": "59907:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "59907:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2771,
														"isOffset": false,
														"isSlot": false,
														"src": "59907:6:0",
														"valueSize": 1
													},
													{
														"declaration": 2766,
														"isOffset": false,
														"isSlot": false,
														"src": "59831:15:0",
														"valueSize": 1
													},
													{
														"declaration": 2768,
														"isOffset": false,
														"isSlot": false,
														"src": "59883:10:0",
														"valueSize": 1
													}
												],
												"id": 2773,
												"nodeType": "InlineAssembly",
												"src": "59714:233:0"
											}
										]
									},
									"documentation": {
										"id": 2764,
										"nodeType": "StructuredDocumentation",
										"src": "59116:431:0",
										"text": " @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."
									},
									"id": 2775,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toTypedDataHash",
									"nameLocation": "59561:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2766,
												"mutability": "mutable",
												"name": "domainSeparator",
												"nameLocation": "59585:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 2775,
												"src": "59577:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2765,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "59577:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2768,
												"mutability": "mutable",
												"name": "structHash",
												"nameLocation": "59610:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2775,
												"src": "59602:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2767,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "59602:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59576:45:0"
									},
									"returnParameters": {
										"id": 2772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2771,
												"mutability": "mutable",
												"name": "digest",
												"nameLocation": "59653:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2775,
												"src": "59645:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2770,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "59645:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59644:16:0"
									},
									"scope": 2776,
									"src": "59552:401:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3604,
							"src": "56720:3235:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 2777,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "60175:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2778,
								"nodeType": "StructuredDocumentation",
								"src": "60201:1025:0",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 2885,
							"linearizedBaseContracts": [
								2885
							],
							"name": "StorageSlot",
							"nameLocation": "61235:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 2781,
									"members": [
										{
											"constant": false,
											"id": 2780,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "61290:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 2781,
											"src": "61282:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2779,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "61282:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "61260:11:0",
									"nodeType": "StructDefinition",
									"scope": 2885,
									"src": "61253:49:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 2784,
									"members": [
										{
											"constant": false,
											"id": 2783,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "61342:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 2784,
											"src": "61337:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2782,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "61337:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "61315:11:0",
									"nodeType": "StructDefinition",
									"scope": 2885,
									"src": "61308:46:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 2787,
									"members": [
										{
											"constant": false,
											"id": 2786,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "61397:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 2787,
											"src": "61389:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2785,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "61389:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "61367:11:0",
									"nodeType": "StructDefinition",
									"scope": 2885,
									"src": "61360:49:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 2790,
									"members": [
										{
											"constant": false,
											"id": 2789,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "61452:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 2790,
											"src": "61444:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2788,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "61444:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "61422:11:0",
									"nodeType": "StructDefinition",
									"scope": 2885,
									"src": "61415:49:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 2793,
									"members": [
										{
											"constant": false,
											"id": 2792,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "61505:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 2793,
											"src": "61498:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2791,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "61498:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "61477:10:0",
									"nodeType": "StructDefinition",
									"scope": 2885,
									"src": "61470:47:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 2796,
									"members": [
										{
											"constant": false,
											"id": 2795,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "61556:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 2796,
											"src": "61550:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2794,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "61550:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "61530:9:0",
									"nodeType": "StructDefinition",
									"scope": 2885,
									"src": "61523:45:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2806,
										"nodeType": "Block",
										"src": "61750:106:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "61812:38:0",
													"nodeType": "YulBlock",
													"src": "61812:38:0",
													"statements": [
														{
															"nativeSrc": "61826:14:0",
															"nodeType": "YulAssignment",
															"src": "61826:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "61836:4:0",
																"nodeType": "YulIdentifier",
																"src": "61836:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "61826:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "61826:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2803,
														"isOffset": false,
														"isSlot": true,
														"src": "61826:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2799,
														"isOffset": false,
														"isSlot": false,
														"src": "61836:4:0",
														"valueSize": 1
													}
												],
												"id": 2805,
												"nodeType": "InlineAssembly",
												"src": "61803:47:0"
											}
										]
									},
									"documentation": {
										"id": 2797,
										"nodeType": "StructuredDocumentation",
										"src": "61574:87:0",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 2807,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "61675:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2799,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "61698:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2807,
												"src": "61690:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2798,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "61690:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "61689:14:0"
									},
									"returnParameters": {
										"id": 2804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2803,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "61747:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2807,
												"src": "61727:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$2781_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 2802,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2801,
														"name": "AddressSlot",
														"nameLocations": [
															"61727:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2781,
														"src": "61727:11:0"
													},
													"referencedDeclaration": 2781,
													"src": "61727:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$2781_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "61726:23:0"
									},
									"scope": 2885,
									"src": "61666:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2817,
										"nodeType": "Block",
										"src": "62038:106:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "62100:38:0",
													"nodeType": "YulBlock",
													"src": "62100:38:0",
													"statements": [
														{
															"nativeSrc": "62114:14:0",
															"nodeType": "YulAssignment",
															"src": "62114:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "62124:4:0",
																"nodeType": "YulIdentifier",
																"src": "62124:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "62114:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "62114:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2814,
														"isOffset": false,
														"isSlot": true,
														"src": "62114:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2810,
														"isOffset": false,
														"isSlot": false,
														"src": "62124:4:0",
														"valueSize": 1
													}
												],
												"id": 2816,
												"nodeType": "InlineAssembly",
												"src": "62091:47:0"
											}
										]
									},
									"documentation": {
										"id": 2808,
										"nodeType": "StructuredDocumentation",
										"src": "61862:87:0",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 2818,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "61963:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2810,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "61986:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2818,
												"src": "61978:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2809,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "61978:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "61977:14:0"
									},
									"returnParameters": {
										"id": 2815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2814,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "62035:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2818,
												"src": "62015:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$2784_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 2813,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2812,
														"name": "BooleanSlot",
														"nameLocations": [
															"62015:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2784,
														"src": "62015:11:0"
													},
													"referencedDeclaration": 2784,
													"src": "62015:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$2784_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "62014:23:0"
									},
									"scope": 2885,
									"src": "61954:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2828,
										"nodeType": "Block",
										"src": "62326:106:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "62388:38:0",
													"nodeType": "YulBlock",
													"src": "62388:38:0",
													"statements": [
														{
															"nativeSrc": "62402:14:0",
															"nodeType": "YulAssignment",
															"src": "62402:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "62412:4:0",
																"nodeType": "YulIdentifier",
																"src": "62412:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "62402:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "62402:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2825,
														"isOffset": false,
														"isSlot": true,
														"src": "62402:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2821,
														"isOffset": false,
														"isSlot": false,
														"src": "62412:4:0",
														"valueSize": 1
													}
												],
												"id": 2827,
												"nodeType": "InlineAssembly",
												"src": "62379:47:0"
											}
										]
									},
									"documentation": {
										"id": 2819,
										"nodeType": "StructuredDocumentation",
										"src": "62150:87:0",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 2829,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "62251:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2821,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "62274:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2829,
												"src": "62266:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2820,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "62266:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "62265:14:0"
									},
									"returnParameters": {
										"id": 2826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2825,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "62323:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2829,
												"src": "62303:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$2787_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 2824,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2823,
														"name": "Bytes32Slot",
														"nameLocations": [
															"62303:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2787,
														"src": "62303:11:0"
													},
													"referencedDeclaration": 2787,
													"src": "62303:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$2787_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "62302:23:0"
									},
									"scope": 2885,
									"src": "62242:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2839,
										"nodeType": "Block",
										"src": "62614:106:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "62676:38:0",
													"nodeType": "YulBlock",
													"src": "62676:38:0",
													"statements": [
														{
															"nativeSrc": "62690:14:0",
															"nodeType": "YulAssignment",
															"src": "62690:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "62700:4:0",
																"nodeType": "YulIdentifier",
																"src": "62700:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "62690:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "62690:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2836,
														"isOffset": false,
														"isSlot": true,
														"src": "62690:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2832,
														"isOffset": false,
														"isSlot": false,
														"src": "62700:4:0",
														"valueSize": 1
													}
												],
												"id": 2838,
												"nodeType": "InlineAssembly",
												"src": "62667:47:0"
											}
										]
									},
									"documentation": {
										"id": 2830,
										"nodeType": "StructuredDocumentation",
										"src": "62438:87:0",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 2840,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "62539:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2832,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "62562:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2840,
												"src": "62554:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2831,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "62554:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "62553:14:0"
									},
									"returnParameters": {
										"id": 2837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2836,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "62611:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2840,
												"src": "62591:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$2790_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 2835,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2834,
														"name": "Uint256Slot",
														"nameLocations": [
															"62591:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2790,
														"src": "62591:11:0"
													},
													"referencedDeclaration": 2790,
													"src": "62591:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$2790_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "62590:23:0"
									},
									"scope": 2885,
									"src": "62530:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2850,
										"nodeType": "Block",
										"src": "62899:106:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "62961:38:0",
													"nodeType": "YulBlock",
													"src": "62961:38:0",
													"statements": [
														{
															"nativeSrc": "62975:14:0",
															"nodeType": "YulAssignment",
															"src": "62975:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "62985:4:0",
																"nodeType": "YulIdentifier",
																"src": "62985:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "62975:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "62975:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2847,
														"isOffset": false,
														"isSlot": true,
														"src": "62975:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2843,
														"isOffset": false,
														"isSlot": false,
														"src": "62985:4:0",
														"valueSize": 1
													}
												],
												"id": 2849,
												"nodeType": "InlineAssembly",
												"src": "62952:47:0"
											}
										]
									},
									"documentation": {
										"id": 2841,
										"nodeType": "StructuredDocumentation",
										"src": "62726:86:0",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 2851,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "62826:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2843,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "62848:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2851,
												"src": "62840:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2842,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "62840:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "62839:14:0"
									},
									"returnParameters": {
										"id": 2848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2847,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "62896:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2851,
												"src": "62877:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$2793_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 2846,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2845,
														"name": "StringSlot",
														"nameLocations": [
															"62877:10:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2793,
														"src": "62877:10:0"
													},
													"referencedDeclaration": 2793,
													"src": "62877:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$2793_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "62876:22:0"
									},
									"scope": 2885,
									"src": "62817:188:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2861,
										"nodeType": "Block",
										"src": "63207:112:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "63269:44:0",
													"nodeType": "YulBlock",
													"src": "63269:44:0",
													"statements": [
														{
															"nativeSrc": "63283:20:0",
															"nodeType": "YulAssignment",
															"src": "63283:20:0",
															"value": {
																"name": "store.slot",
																"nativeSrc": "63293:10:0",
																"nodeType": "YulIdentifier",
																"src": "63293:10:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "63283:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "63283:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2858,
														"isOffset": false,
														"isSlot": true,
														"src": "63283:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2854,
														"isOffset": false,
														"isSlot": true,
														"src": "63293:10:0",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 2860,
												"nodeType": "InlineAssembly",
												"src": "63260:53:0"
											}
										]
									},
									"documentation": {
										"id": 2852,
										"nodeType": "StructuredDocumentation",
										"src": "63011:101:0",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 2862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "63126:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2854,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "63155:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2862,
												"src": "63140:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2853,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "63140:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63139:22:0"
									},
									"returnParameters": {
										"id": 2859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2858,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "63204:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2862,
												"src": "63185:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$2793_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 2857,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2856,
														"name": "StringSlot",
														"nameLocations": [
															"63185:10:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2793,
														"src": "63185:10:0"
													},
													"referencedDeclaration": 2793,
													"src": "63185:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$2793_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63184:22:0"
									},
									"scope": 2885,
									"src": "63117:202:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2872,
										"nodeType": "Block",
										"src": "63495:106:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "63557:38:0",
													"nodeType": "YulBlock",
													"src": "63557:38:0",
													"statements": [
														{
															"nativeSrc": "63571:14:0",
															"nodeType": "YulAssignment",
															"src": "63571:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "63581:4:0",
																"nodeType": "YulIdentifier",
																"src": "63581:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "63571:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "63571:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2869,
														"isOffset": false,
														"isSlot": true,
														"src": "63571:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2865,
														"isOffset": false,
														"isSlot": false,
														"src": "63581:4:0",
														"valueSize": 1
													}
												],
												"id": 2871,
												"nodeType": "InlineAssembly",
												"src": "63548:47:0"
											}
										]
									},
									"documentation": {
										"id": 2863,
										"nodeType": "StructuredDocumentation",
										"src": "63325:85:0",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 2873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "63424:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2865,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "63445:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2873,
												"src": "63437:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2864,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "63437:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63436:14:0"
									},
									"returnParameters": {
										"id": 2870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2869,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "63492:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2873,
												"src": "63474:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$2796_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 2868,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2867,
														"name": "BytesSlot",
														"nameLocations": [
															"63474:9:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2796,
														"src": "63474:9:0"
													},
													"referencedDeclaration": 2796,
													"src": "63474:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$2796_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63473:21:0"
									},
									"scope": 2885,
									"src": "63415:186:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2883,
										"nodeType": "Block",
										"src": "63798:112:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "63860:44:0",
													"nodeType": "YulBlock",
													"src": "63860:44:0",
													"statements": [
														{
															"nativeSrc": "63874:20:0",
															"nodeType": "YulAssignment",
															"src": "63874:20:0",
															"value": {
																"name": "store.slot",
																"nativeSrc": "63884:10:0",
																"nodeType": "YulIdentifier",
																"src": "63884:10:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "63874:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "63874:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2880,
														"isOffset": false,
														"isSlot": true,
														"src": "63874:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2876,
														"isOffset": false,
														"isSlot": true,
														"src": "63884:10:0",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 2882,
												"nodeType": "InlineAssembly",
												"src": "63851:53:0"
											}
										]
									},
									"documentation": {
										"id": 2874,
										"nodeType": "StructuredDocumentation",
										"src": "63607:99:0",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 2884,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "63720:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2876,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "63747:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2884,
												"src": "63733:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2875,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "63733:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63732:21:0"
									},
									"returnParameters": {
										"id": 2881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2880,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "63795:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2884,
												"src": "63777:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$2796_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 2879,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2878,
														"name": "BytesSlot",
														"nameLocations": [
															"63777:9:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2796,
														"src": "63777:9:0"
													},
													"referencedDeclaration": 2796,
													"src": "63777:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$2796_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63776:21:0"
									},
									"scope": 2885,
									"src": "63711:199:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3604,
							"src": "61227:2685:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 2886,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "64046:24:0"
						},
						{
							"canonicalName": "ShortString",
							"id": 2888,
							"name": "ShortString",
							"nameLocation": "64246:11:0",
							"nodeType": "UserDefinedValueTypeDefinition",
							"src": "64241:28:0",
							"underlyingType": {
								"id": 2887,
								"name": "bytes32",
								"nodeType": "ElementaryTypeName",
								"src": "64261:7:0",
								"typeDescriptions": {
									"typeIdentifier": "t_bytes32",
									"typeString": "bytes32"
								}
							}
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ShortStrings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2889,
								"nodeType": "StructuredDocumentation",
								"src": "64271:876:0",
								"text": " @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 3099,
							"linearizedBaseContracts": [
								3099
							],
							"name": "ShortStrings",
							"nameLocation": "65156:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 2892,
									"mutability": "constant",
									"name": "FALLBACK_SENTINEL",
									"nameLocation": "65263:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 3099,
									"src": "65238:111:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2890,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "65238:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646",
										"id": 2891,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "65283:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_255_by_1",
											"typeString": "int_const 255"
										},
										"value": "0x00000000000000000000000000000000000000000000000000000000000000FF"
									},
									"visibility": "private"
								},
								{
									"errorSelector": "305a27a9",
									"id": 2896,
									"name": "StringTooLong",
									"nameLocation": "65362:13:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2894,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "65383:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 2896,
												"src": "65376:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "65376:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "65375:12:0"
									},
									"src": "65356:32:0"
								},
								{
									"errorSelector": "b3512b0c",
									"id": 2898,
									"name": "InvalidShortString",
									"nameLocation": "65399:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2897,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "65417:2:0"
									},
									"src": "65393:27:0"
								},
								{
									"body": {
										"id": 2941,
										"nodeType": "Block",
										"src": "65679:208:0",
										"statements": [
											{
												"assignments": [
													2908
												],
												"declarations": [
													{
														"constant": false,
														"id": 2908,
														"mutability": "mutable",
														"name": "bstr",
														"nameLocation": "65702:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2941,
														"src": "65689:17:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2907,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "65689:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2913,
												"initialValue": {
													"arguments": [
														{
															"id": 2911,
															"name": "str",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2901,
															"src": "65715:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2910,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "65709:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 2909,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "65709:5:0",
															"typeDescriptions": {}
														}
													},
													"id": 2912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "65709:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "65689:30:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2914,
															"name": "bstr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2908,
															"src": "65733:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2915,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "65738:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "65733:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3331",
														"id": 2916,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "65747:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31_by_1",
															"typeString": "int_const 31"
														},
														"value": "31"
													},
													"src": "65733:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2923,
												"nodeType": "IfStatement",
												"src": "65729:72:0",
												"trueBody": {
													"id": 2922,
													"nodeType": "Block",
													"src": "65751:50:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2919,
																		"name": "str",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2901,
																		"src": "65786:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2918,
																	"name": "StringTooLong",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2896,
																	"src": "65772:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$_t_error_$",
																		"typeString": "function (string memory) pure returns (error)"
																	}
																},
																"id": 2920,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "65772:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2921,
															"nodeType": "RevertStatement",
															"src": "65765:25:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2937,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 2932,
																						"name": "bstr",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2908,
																						"src": "65858:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					],
																					"id": 2931,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "65850:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes32_$",
																						"typeString": "type(bytes32)"
																					},
																					"typeName": {
																						"id": 2930,
																						"name": "bytes32",
																						"nodeType": "ElementaryTypeName",
																						"src": "65850:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2933,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "65850:13:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"id": 2929,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "65842:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 2928,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "65842:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2934,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "65842:22:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "|",
																	"rightExpression": {
																		"expression": {
																			"id": 2935,
																			"name": "bstr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2908,
																			"src": "65867:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 2936,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "65872:6:0",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "65867:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "65842:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2927,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "65834:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2926,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "65834:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2938,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "65834:45:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 2924,
															"name": "ShortString",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2888,
															"src": "65817:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$2888_$",
																"typeString": "type(ShortString)"
															}
														},
														"id": 2925,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "65829:4:0",
														"memberName": "wrap",
														"nodeType": "MemberAccess",
														"src": "65817:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$2888_$",
															"typeString": "function (bytes32) pure returns (ShortString)"
														}
													},
													"id": 2939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "65817:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
														"typeString": "ShortString"
													}
												},
												"functionReturnParameters": 2906,
												"id": 2940,
												"nodeType": "Return",
												"src": "65810:70:0"
											}
										]
									},
									"documentation": {
										"id": 2899,
										"nodeType": "StructuredDocumentation",
										"src": "65426:170:0",
										"text": " @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."
									},
									"id": 2942,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toShortString",
									"nameLocation": "65610:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2901,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "65638:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 2942,
												"src": "65624:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2900,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "65624:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "65623:19:0"
									},
									"returnParameters": {
										"id": 2906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2905,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2942,
												"src": "65666:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 2904,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2903,
														"name": "ShortString",
														"nameLocations": [
															"65666:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2888,
														"src": "65666:11:0"
													},
													"referencedDeclaration": 2888,
													"src": "65666:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "65665:13:0"
									},
									"scope": 3099,
									"src": "65601:286:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2967,
										"nodeType": "Block",
										"src": "66045:331:0",
										"statements": [
											{
												"assignments": [
													2952
												],
												"declarations": [
													{
														"constant": false,
														"id": 2952,
														"mutability": "mutable",
														"name": "len",
														"nameLocation": "66063:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 2967,
														"src": "66055:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2951,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "66055:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2956,
												"initialValue": {
													"arguments": [
														{
															"id": 2954,
															"name": "sstr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2946,
															"src": "66080:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
																"typeString": "ShortString"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
																"typeString": "ShortString"
															}
														],
														"id": 2953,
														"name": "byteLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3000,
														"src": "66069:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2888_$returns$_t_uint256_$",
															"typeString": "function (ShortString) pure returns (uint256)"
														}
													},
													"id": 2955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "66069:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "66055:30:0"
											},
											{
												"assignments": [
													2958
												],
												"declarations": [
													{
														"constant": false,
														"id": 2958,
														"mutability": "mutable",
														"name": "str",
														"nameLocation": "66187:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 2967,
														"src": "66173:17:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 2957,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "66173:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2963,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "3332",
															"id": 2961,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "66204:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															}
														],
														"id": 2960,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "66193:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) pure returns (string memory)"
														},
														"typeName": {
															"id": 2959,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "66197:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														}
													},
													"id": 2962,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "66193:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "66173:34:0"
											},
											{
												"AST": {
													"nativeSrc": "66269:81:0",
													"nodeType": "YulBlock",
													"src": "66269:81:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nativeSrc": "66290:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "66290:3:0"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "66295:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "66295:3:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "66283:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "66283:6:0"
																},
																"nativeSrc": "66283:16:0",
																"nodeType": "YulFunctionCall",
																"src": "66283:16:0"
															},
															"nativeSrc": "66283:16:0",
															"nodeType": "YulExpressionStatement",
															"src": "66283:16:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "str",
																				"nativeSrc": "66323:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "66323:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "66328:4:0",
																				"nodeType": "YulLiteral",
																				"src": "66328:4:0",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "66319:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "66319:3:0"
																		},
																		"nativeSrc": "66319:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "66319:14:0"
																	},
																	{
																		"name": "sstr",
																		"nativeSrc": "66335:4:0",
																		"nodeType": "YulIdentifier",
																		"src": "66335:4:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "66312:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "66312:6:0"
																},
																"nativeSrc": "66312:28:0",
																"nodeType": "YulFunctionCall",
																"src": "66312:28:0"
															},
															"nativeSrc": "66312:28:0",
															"nodeType": "YulExpressionStatement",
															"src": "66312:28:0"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2952,
														"isOffset": false,
														"isSlot": false,
														"src": "66295:3:0",
														"valueSize": 1
													},
													{
														"declaration": 2946,
														"isOffset": false,
														"isSlot": false,
														"src": "66335:4:0",
														"valueSize": 1
													},
													{
														"declaration": 2958,
														"isOffset": false,
														"isSlot": false,
														"src": "66290:3:0",
														"valueSize": 1
													},
													{
														"declaration": 2958,
														"isOffset": false,
														"isSlot": false,
														"src": "66323:3:0",
														"valueSize": 1
													}
												],
												"id": 2964,
												"nodeType": "InlineAssembly",
												"src": "66260:90:0"
											},
											{
												"expression": {
													"id": 2965,
													"name": "str",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2958,
													"src": "66366:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2950,
												"id": 2966,
												"nodeType": "Return",
												"src": "66359:10:0"
											}
										]
									},
									"documentation": {
										"id": 2943,
										"nodeType": "StructuredDocumentation",
										"src": "65893:73:0",
										"text": " @dev Decode a `ShortString` back to a \"normal\" string."
									},
									"id": 2968,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "65980:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2946,
												"mutability": "mutable",
												"name": "sstr",
												"nameLocation": "66001:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2968,
												"src": "65989:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 2945,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2944,
														"name": "ShortString",
														"nameLocations": [
															"65989:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2888,
														"src": "65989:11:0"
													},
													"referencedDeclaration": 2888,
													"src": "65989:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "65988:18:0"
									},
									"returnParameters": {
										"id": 2950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2949,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2968,
												"src": "66030:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2948,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "66030:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "66029:15:0"
									},
									"scope": 3099,
									"src": "65971:405:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2999,
										"nodeType": "Block",
										"src": "66518:175:0",
										"statements": [
											{
												"assignments": [
													2978
												],
												"declarations": [
													{
														"constant": false,
														"id": 2978,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "66536:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 2999,
														"src": "66528:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2977,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "66528:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2988,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2983,
																		"name": "sstr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2972,
																		"src": "66572:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
																			"typeString": "ShortString"
																		}
																	],
																	"expression": {
																		"id": 2981,
																		"name": "ShortString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2888,
																		"src": "66553:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$2888_$",
																			"typeString": "type(ShortString)"
																		}
																	},
																	"id": 2982,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "66565:6:0",
																	"memberName": "unwrap",
																	"nodeType": "MemberAccess",
																	"src": "66553:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2888_$returns$_t_bytes32_$",
																		"typeString": "function (ShortString) pure returns (bytes32)"
																	}
																},
																"id": 2984,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "66553:24:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 2980,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "66545:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 2979,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "66545:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2985,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "66545:33:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"hexValue": "30784646",
														"id": 2986,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "66581:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255_by_1",
															"typeString": "int_const 255"
														},
														"value": "0xFF"
													},
													"src": "66545:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "66528:57:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2989,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2978,
														"src": "66599:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3331",
														"id": 2990,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "66608:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31_by_1",
															"typeString": "int_const 31"
														},
														"value": "31"
													},
													"src": "66599:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2996,
												"nodeType": "IfStatement",
												"src": "66595:69:0",
												"trueBody": {
													"id": 2995,
													"nodeType": "Block",
													"src": "66612:52:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2992,
																	"name": "InvalidShortString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2898,
																	"src": "66633:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 2993,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "66633:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2994,
															"nodeType": "RevertStatement",
															"src": "66626:27:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2997,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2978,
													"src": "66680:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2976,
												"id": 2998,
												"nodeType": "Return",
												"src": "66673:13:0"
											}
										]
									},
									"documentation": {
										"id": 2969,
										"nodeType": "StructuredDocumentation",
										"src": "66382:61:0",
										"text": " @dev Return the length of a `ShortString`."
									},
									"id": 3000,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "byteLength",
									"nameLocation": "66457:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2972,
												"mutability": "mutable",
												"name": "sstr",
												"nameLocation": "66480:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3000,
												"src": "66468:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 2971,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2970,
														"name": "ShortString",
														"nameLocations": [
															"66468:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2888,
														"src": "66468:11:0"
													},
													"referencedDeclaration": 2888,
													"src": "66468:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "66467:18:0"
									},
									"returnParameters": {
										"id": 2976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2975,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3000,
												"src": "66509:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2974,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "66509:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "66508:9:0"
									},
									"scope": 3099,
									"src": "66448:245:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3039,
										"nodeType": "Block",
										"src": "66916:231:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3013,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3003,
																	"src": "66936:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 3012,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "66930:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 3011,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "66930:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3014,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "66930:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 3015,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "66943:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "66930:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3332",
														"id": 3016,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "66952:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "66930:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3037,
													"nodeType": "Block",
													"src": "67014:127:0",
													"statements": [
														{
															"expression": {
																"id": 3030,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 3026,
																				"name": "store",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3005,
																				"src": "67054:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_storage_ptr",
																					"typeString": "string storage pointer"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_storage_ptr",
																					"typeString": "string storage pointer"
																				}
																			],
																			"expression": {
																				"id": 3023,
																				"name": "StorageSlot",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2885,
																				"src": "67028:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2885_$",
																					"typeString": "type(library StorageSlot)"
																				}
																			},
																			"id": 3025,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "67040:13:0",
																			"memberName": "getStringSlot",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2862,
																			"src": "67028:25:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$2793_storage_ptr_$",
																				"typeString": "function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"
																			}
																		},
																		"id": 3027,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "67028:32:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StringSlot_$2793_storage_ptr",
																			"typeString": "struct StorageSlot.StringSlot storage pointer"
																		}
																	},
																	"id": 3028,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "67061:5:0",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2792,
																	"src": "67028:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 3029,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3003,
																	"src": "67069:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"src": "67028:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															},
															"id": 3031,
															"nodeType": "ExpressionStatement",
															"src": "67028:46:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 3034,
																		"name": "FALLBACK_SENTINEL",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2892,
																		"src": "67112:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"id": 3032,
																		"name": "ShortString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2888,
																		"src": "67095:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$2888_$",
																			"typeString": "type(ShortString)"
																		}
																	},
																	"id": 3033,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "67107:4:0",
																	"memberName": "wrap",
																	"nodeType": "MemberAccess",
																	"src": "67095:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$2888_$",
																		"typeString": "function (bytes32) pure returns (ShortString)"
																	}
																},
																"id": 3035,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "67095:35:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
																	"typeString": "ShortString"
																}
															},
															"functionReturnParameters": 3010,
															"id": 3036,
															"nodeType": "Return",
															"src": "67088:42:0"
														}
													]
												},
												"id": 3038,
												"nodeType": "IfStatement",
												"src": "66926:215:0",
												"trueBody": {
													"id": 3022,
													"nodeType": "Block",
													"src": "66956:52:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 3019,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3003,
																		"src": "66991:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 3018,
																	"name": "toShortString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2942,
																	"src": "66977:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$2888_$",
																		"typeString": "function (string memory) pure returns (ShortString)"
																	}
																},
																"id": 3020,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "66977:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
																	"typeString": "ShortString"
																}
															},
															"functionReturnParameters": 3010,
															"id": 3021,
															"nodeType": "Return",
															"src": "66970:27:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3001,
										"nodeType": "StructuredDocumentation",
										"src": "66699:103:0",
										"text": " @dev Encode a string into a `ShortString`, or write it to storage if it is too long."
									},
									"id": 3040,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toShortStringWithFallback",
									"nameLocation": "66816:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3003,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "66856:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3040,
												"src": "66842:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3002,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "66842:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3005,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "66878:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3040,
												"src": "66863:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3004,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "66863:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "66841:43:0"
									},
									"returnParameters": {
										"id": 3010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3009,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3040,
												"src": "66903:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 3008,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3007,
														"name": "ShortString",
														"nameLocations": [
															"66903:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2888,
														"src": "66903:11:0"
													},
													"referencedDeclaration": 2888,
													"src": "66903:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "66902:13:0"
									},
									"scope": 3099,
									"src": "66807:340:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3066,
										"nodeType": "Block",
										"src": "67387:158:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 3056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 3053,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3044,
																"src": "67420:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
																	"typeString": "ShortString"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
																	"typeString": "ShortString"
																}
															],
															"expression": {
																"id": 3051,
																"name": "ShortString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2888,
																"src": "67401:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$2888_$",
																	"typeString": "type(ShortString)"
																}
															},
															"id": 3052,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "67413:6:0",
															"memberName": "unwrap",
															"nodeType": "MemberAccess",
															"src": "67401:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2888_$returns$_t_bytes32_$",
																"typeString": "function (ShortString) pure returns (bytes32)"
															}
														},
														"id": 3054,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "67401:25:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3055,
														"name": "FALLBACK_SENTINEL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2892,
														"src": "67430:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "67401:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3064,
													"nodeType": "Block",
													"src": "67502:37:0",
													"statements": [
														{
															"expression": {
																"id": 3062,
																"name": "store",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3046,
																"src": "67523:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage_ptr",
																	"typeString": "string storage pointer"
																}
															},
															"functionReturnParameters": 3050,
															"id": 3063,
															"nodeType": "Return",
															"src": "67516:12:0"
														}
													]
												},
												"id": 3065,
												"nodeType": "IfStatement",
												"src": "67397:142:0",
												"trueBody": {
													"id": 3061,
													"nodeType": "Block",
													"src": "67449:47:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 3058,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3044,
																		"src": "67479:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
																			"typeString": "ShortString"
																		}
																	],
																	"id": 3057,
																	"name": "toString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2968,
																	"src": "67470:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2888_$returns$_t_string_memory_ptr_$",
																		"typeString": "function (ShortString) pure returns (string memory)"
																	}
																},
																"id": 3059,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "67470:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 3050,
															"id": 3060,
															"nodeType": "Return",
															"src": "67463:22:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3041,
										"nodeType": "StructuredDocumentation",
										"src": "67153:120:0",
										"text": " @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."
									},
									"id": 3067,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringWithFallback",
									"nameLocation": "67287:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3044,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "67320:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3067,
												"src": "67308:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 3043,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3042,
														"name": "ShortString",
														"nameLocations": [
															"67308:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2888,
														"src": "67308:11:0"
													},
													"referencedDeclaration": 2888,
													"src": "67308:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3046,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "67342:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3067,
												"src": "67327:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3045,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "67327:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "67307:41:0"
									},
									"returnParameters": {
										"id": 3050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3049,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3067,
												"src": "67372:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3048,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "67372:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "67371:15:0"
									},
									"scope": 3099,
									"src": "67278:267:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3097,
										"nodeType": "Block",
										"src": "68025:174:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 3083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 3080,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3071,
																"src": "68058:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
																	"typeString": "ShortString"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
																	"typeString": "ShortString"
																}
															],
															"expression": {
																"id": 3078,
																"name": "ShortString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2888,
																"src": "68039:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$2888_$",
																	"typeString": "type(ShortString)"
																}
															},
															"id": 3079,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "68051:6:0",
															"memberName": "unwrap",
															"nodeType": "MemberAccess",
															"src": "68039:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2888_$returns$_t_bytes32_$",
																"typeString": "function (ShortString) pure returns (bytes32)"
															}
														},
														"id": 3081,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "68039:25:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3082,
														"name": "FALLBACK_SENTINEL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2892,
														"src": "68068:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "68039:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3095,
													"nodeType": "Block",
													"src": "68142:51:0",
													"statements": [
														{
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 3091,
																			"name": "store",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3073,
																			"src": "68169:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_storage_ptr",
																				"typeString": "string storage pointer"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_storage_ptr",
																				"typeString": "string storage pointer"
																			}
																		],
																		"id": 3090,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "68163:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 3089,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "68163:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "68163:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes storage pointer"
																	}
																},
																"id": 3093,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "68176:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "68163:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 3077,
															"id": 3094,
															"nodeType": "Return",
															"src": "68156:26:0"
														}
													]
												},
												"id": 3096,
												"nodeType": "IfStatement",
												"src": "68035:158:0",
												"trueBody": {
													"id": 3088,
													"nodeType": "Block",
													"src": "68087:49:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 3085,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3071,
																		"src": "68119:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
																			"typeString": "ShortString"
																		}
																	],
																	"id": 3084,
																	"name": "byteLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3000,
																	"src": "68108:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2888_$returns$_t_uint256_$",
																		"typeString": "function (ShortString) pure returns (uint256)"
																	}
																},
																"id": 3086,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "68108:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 3077,
															"id": 3087,
															"nodeType": "Return",
															"src": "68101:24:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3068,
										"nodeType": "StructuredDocumentation",
										"src": "67551:364:0",
										"text": " @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."
									},
									"id": 3098,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "byteLengthWithFallback",
									"nameLocation": "67929:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3071,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "67964:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3098,
												"src": "67952:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 3070,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3069,
														"name": "ShortString",
														"nameLocations": [
															"67952:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2888,
														"src": "67952:11:0"
													},
													"referencedDeclaration": 2888,
													"src": "67952:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3073,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "67986:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3098,
												"src": "67971:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3072,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "67971:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "67951:41:0"
									},
									"returnParameters": {
										"id": 3077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3076,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3098,
												"src": "68016:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3075,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "68016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "68015:9:0"
									},
									"scope": 3099,
									"src": "67920:279:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3604,
							"src": "65148:3053:0",
							"usedErrors": [
								2896,
								2898
							],
							"usedEvents": []
						},
						{
							"id": 3100,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "68337:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC5267",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 3123,
							"linearizedBaseContracts": [
								3123
							],
							"name": "IERC5267",
							"nameLocation": "68373:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3101,
										"nodeType": "StructuredDocumentation",
										"src": "68388:84:0",
										"text": " @dev MAY be emitted to signal that the domain could have changed."
									},
									"eventSelector": "0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31",
									"id": 3103,
									"name": "EIP712DomainChanged",
									"nameLocation": "68483:19:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "68502:2:0"
									},
									"src": "68477:28:0"
								},
								{
									"documentation": {
										"id": 3104,
										"nodeType": "StructuredDocumentation",
										"src": "68511:140:0",
										"text": " @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."
									},
									"functionSelector": "84b0196e",
									"id": 3122,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "eip712Domain",
									"nameLocation": "68665:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "68677:2:0"
									},
									"returnParameters": {
										"id": 3121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3107,
												"mutability": "mutable",
												"name": "fields",
												"nameLocation": "68747:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3122,
												"src": "68740:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 3106,
													"name": "bytes1",
													"nodeType": "ElementaryTypeName",
													"src": "68740:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3109,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "68781:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3122,
												"src": "68767:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3108,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "68767:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3111,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "68813:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3122,
												"src": "68799:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3110,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "68799:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3113,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "68842:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3122,
												"src": "68834:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "68834:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3115,
												"mutability": "mutable",
												"name": "verifyingContract",
												"nameLocation": "68871:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 3122,
												"src": "68863:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "68863:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3117,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "68910:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3122,
												"src": "68902:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "68902:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3120,
												"mutability": "mutable",
												"name": "extensions",
												"nameLocation": "68945:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 3122,
												"src": "68928:27:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3118,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "68928:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3119,
													"nodeType": "ArrayTypeName",
													"src": "68928:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "68726:239:0"
									},
									"scope": 3123,
									"src": "68656:310:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3604,
							"src": "68363:605:0",
							"usedErrors": [],
							"usedEvents": [
								3103
							]
						},
						{
							"id": 3124,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "69116:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 3126,
										"name": "IERC5267",
										"nameLocations": [
											"70817:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3123,
										"src": "70817:8:0"
									},
									"id": 3127,
									"nodeType": "InheritanceSpecifier",
									"src": "70817:8:0"
								}
							],
							"canonicalName": "EIP712",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3125,
								"nodeType": "StructuredDocumentation",
								"src": "69145:1643:0",
								"text": " @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"
							},
							"fullyImplemented": true,
							"id": 3342,
							"linearizedBaseContracts": [
								3342,
								3123
							],
							"name": "EIP712",
							"nameLocation": "70807:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 3129,
									"libraryName": {
										"id": 3128,
										"name": "ShortStrings",
										"nameLocations": [
											"70838:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3099,
										"src": "70838:12:0"
									},
									"nodeType": "UsingForDirective",
									"src": "70832:25:0"
								},
								{
									"constant": true,
									"id": 3134,
									"mutability": "constant",
									"name": "TYPE_HASH",
									"nameLocation": "70888:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 3342,
									"src": "70863:140:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 3130,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "70863:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
												"id": 3132,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "70918:84:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
													"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
												},
												"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
													"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
												}
											],
											"id": 3131,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "70908:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 3133,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "70908:95:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3136,
									"mutability": "immutable",
									"name": "_cachedDomainSeparator",
									"nameLocation": "71228:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 3342,
									"src": "71202:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 3135,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "71202:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3138,
									"mutability": "immutable",
									"name": "_cachedChainId",
									"nameLocation": "71282:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 3342,
									"src": "71256:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3137,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "71256:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3140,
									"mutability": "immutable",
									"name": "_cachedThis",
									"nameLocation": "71328:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 3342,
									"src": "71302:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3139,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "71302:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3142,
									"mutability": "immutable",
									"name": "_hashedName",
									"nameLocation": "71372:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 3342,
									"src": "71346:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 3141,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "71346:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3144,
									"mutability": "immutable",
									"name": "_hashedVersion",
									"nameLocation": "71415:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 3342,
									"src": "71389:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 3143,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "71389:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3147,
									"mutability": "immutable",
									"name": "_name",
									"nameLocation": "71466:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 3342,
									"src": "71436:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
										"typeString": "ShortString"
									},
									"typeName": {
										"id": 3146,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3145,
											"name": "ShortString",
											"nameLocations": [
												"71436:11:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2888,
											"src": "71436:11:0"
										},
										"referencedDeclaration": 2888,
										"src": "71436:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
											"typeString": "ShortString"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3150,
									"mutability": "immutable",
									"name": "_version",
									"nameLocation": "71507:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 3342,
									"src": "71477:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
										"typeString": "ShortString"
									},
									"typeName": {
										"id": 3149,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3148,
											"name": "ShortString",
											"nameLocations": [
												"71477:11:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2888,
											"src": "71477:11:0"
										},
										"referencedDeclaration": 2888,
										"src": "71477:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
											"typeString": "ShortString"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3152,
									"mutability": "mutable",
									"name": "_nameFallback",
									"nameLocation": "71536:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 3342,
									"src": "71521:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 3151,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "71521:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3154,
									"mutability": "mutable",
									"name": "_versionFallback",
									"nameLocation": "71570:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 3342,
									"src": "71555:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 3153,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "71555:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 3211,
										"nodeType": "Block",
										"src": "72212:376:0",
										"statements": [
											{
												"expression": {
													"id": 3167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3162,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3147,
														"src": "72222:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
															"typeString": "ShortString"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3165,
																"name": "_nameFallback",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3152,
																"src": "72261:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															],
															"expression": {
																"id": 3163,
																"name": "name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3157,
																"src": "72230:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 3164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "72235:25:0",
															"memberName": "toShortStringWithFallback",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3040,
															"src": "72230:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$2888_$attached_to$_t_string_memory_ptr_$",
																"typeString": "function (string memory,string storage pointer) returns (ShortString)"
															}
														},
														"id": 3166,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "72230:45:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
															"typeString": "ShortString"
														}
													},
													"src": "72222:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
														"typeString": "ShortString"
													}
												},
												"id": 3168,
												"nodeType": "ExpressionStatement",
												"src": "72222:53:0"
											},
											{
												"expression": {
													"id": 3174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3169,
														"name": "_version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3150,
														"src": "72285:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
															"typeString": "ShortString"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3172,
																"name": "_versionFallback",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3154,
																"src": "72330:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															],
															"expression": {
																"id": 3170,
																"name": "version",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3159,
																"src": "72296:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 3171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "72304:25:0",
															"memberName": "toShortStringWithFallback",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3040,
															"src": "72296:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$2888_$attached_to$_t_string_memory_ptr_$",
																"typeString": "function (string memory,string storage pointer) returns (ShortString)"
															}
														},
														"id": 3173,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "72296:51:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
															"typeString": "ShortString"
														}
													},
													"src": "72285:62:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
														"typeString": "ShortString"
													}
												},
												"id": 3175,
												"nodeType": "ExpressionStatement",
												"src": "72285:62:0"
											},
											{
												"expression": {
													"id": 3183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3176,
														"name": "_hashedName",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3142,
														"src": "72357:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 3180,
																		"name": "name",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3157,
																		"src": "72387:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 3179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "72381:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 3178,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "72381:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 3181,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "72381:11:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 3177,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "72371:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 3182,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "72371:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "72357:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 3184,
												"nodeType": "ExpressionStatement",
												"src": "72357:36:0"
											},
											{
												"expression": {
													"id": 3192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3185,
														"name": "_hashedVersion",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3144,
														"src": "72403:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 3189,
																		"name": "version",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3159,
																		"src": "72436:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 3188,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "72430:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 3187,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "72430:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 3190,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "72430:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 3186,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "72420:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 3191,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "72420:25:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "72403:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 3193,
												"nodeType": "ExpressionStatement",
												"src": "72403:42:0"
											},
											{
												"expression": {
													"id": 3197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3194,
														"name": "_cachedChainId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3138,
														"src": "72456:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 3195,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "72473:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 3196,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "72479:7:0",
														"memberName": "chainid",
														"nodeType": "MemberAccess",
														"src": "72473:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "72456:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3198,
												"nodeType": "ExpressionStatement",
												"src": "72456:30:0"
											},
											{
												"expression": {
													"id": 3202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3199,
														"name": "_cachedDomainSeparator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3136,
														"src": "72496:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3200,
															"name": "_buildDomainSeparator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3259,
															"src": "72521:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																"typeString": "function () view returns (bytes32)"
															}
														},
														"id": 3201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "72521:23:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "72496:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 3203,
												"nodeType": "ExpressionStatement",
												"src": "72496:48:0"
											},
											{
												"expression": {
													"id": 3209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3204,
														"name": "_cachedThis",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3140,
														"src": "72554:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3207,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "72576:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_EIP712_$3342",
																	"typeString": "contract EIP712"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_EIP712_$3342",
																	"typeString": "contract EIP712"
																}
															],
															"id": 3206,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "72568:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3205,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "72568:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 3208,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "72568:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "72554:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3210,
												"nodeType": "ExpressionStatement",
												"src": "72554:27:0"
											}
										]
									},
									"documentation": {
										"id": 3155,
										"nodeType": "StructuredDocumentation",
										"src": "71593:559:0",
										"text": " @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."
									},
									"id": 3212,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3157,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "72183:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3212,
												"src": "72169:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3156,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "72169:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3159,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "72203:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3212,
												"src": "72189:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3158,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "72189:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "72168:43:0"
									},
									"returnParameters": {
										"id": 3161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "72212:0:0"
									},
									"scope": 3342,
									"src": "72157:431:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3237,
										"nodeType": "Block",
										"src": "72736:200:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 3228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 3223,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3220,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "72758:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_EIP712_$3342",
																		"typeString": "contract EIP712"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_EIP712_$3342",
																		"typeString": "contract EIP712"
																	}
																],
																"id": 3219,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "72750:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3218,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "72750:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "72750:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 3222,
															"name": "_cachedThis",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3140,
															"src": "72767:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "72750:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3227,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 3224,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "72782:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 3225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "72788:7:0",
															"memberName": "chainid",
															"nodeType": "MemberAccess",
															"src": "72782:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 3226,
															"name": "_cachedChainId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3138,
															"src": "72799:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "72782:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "72750:63:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3235,
													"nodeType": "Block",
													"src": "72875:55:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 3232,
																	"name": "_buildDomainSeparator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3259,
																	"src": "72896:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																		"typeString": "function () view returns (bytes32)"
																	}
																},
																"id": 3233,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "72896:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"functionReturnParameters": 3217,
															"id": 3234,
															"nodeType": "Return",
															"src": "72889:30:0"
														}
													]
												},
												"id": 3236,
												"nodeType": "IfStatement",
												"src": "72746:184:0",
												"trueBody": {
													"id": 3231,
													"nodeType": "Block",
													"src": "72815:54:0",
													"statements": [
														{
															"expression": {
																"id": 3229,
																"name": "_cachedDomainSeparator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3136,
																"src": "72836:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"functionReturnParameters": 3217,
															"id": 3230,
															"nodeType": "Return",
															"src": "72829:29:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3213,
										"nodeType": "StructuredDocumentation",
										"src": "72594:75:0",
										"text": " @dev Returns the domain separator for the current chain."
									},
									"id": 3238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_domainSeparatorV4",
									"nameLocation": "72683:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "72701:2:0"
									},
									"returnParameters": {
										"id": 3217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3216,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3238,
												"src": "72727:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3215,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "72727:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "72726:9:0"
									},
									"scope": 3342,
									"src": "72674:262:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3258,
										"nodeType": "Block",
										"src": "73006:115:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3246,
																	"name": "TYPE_HASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3134,
																	"src": "73044:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 3247,
																	"name": "_hashedName",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3142,
																	"src": "73055:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 3248,
																	"name": "_hashedVersion",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3144,
																	"src": "73068:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 3249,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "73084:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 3250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "73090:7:0",
																	"memberName": "chainid",
																	"nodeType": "MemberAccess",
																	"src": "73084:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 3253,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "73107:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_EIP712_$3342",
																				"typeString": "contract EIP712"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_EIP712_$3342",
																				"typeString": "contract EIP712"
																			}
																		],
																		"id": 3252,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "73099:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 3251,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "73099:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3254,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "73099:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 3244,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "73033:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 3245,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "73037:6:0",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "73033:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 3255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "73033:80:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 3243,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "73023:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 3256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "73023:91:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 3242,
												"id": 3257,
												"nodeType": "Return",
												"src": "73016:98:0"
											}
										]
									},
									"id": 3259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_buildDomainSeparator",
									"nameLocation": "72951:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "72972:2:0"
									},
									"returnParameters": {
										"id": 3242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3259,
												"src": "72997:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3240,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "72997:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "72996:9:0"
									},
									"scope": 3342,
									"src": "72942:179:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3274,
										"nodeType": "Block",
										"src": "73832:90:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 3269,
																"name": "_domainSeparatorV4",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3238,
																"src": "73882:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																	"typeString": "function () view returns (bytes32)"
																}
															},
															"id": 3270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "73882:20:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 3271,
															"name": "structHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3262,
															"src": "73904:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 3267,
															"name": "MessageHashUtils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2776,
															"src": "73849:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_MessageHashUtils_$2776_$",
																"typeString": "type(library MessageHashUtils)"
															}
														},
														"id": 3268,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "73866:15:0",
														"memberName": "toTypedDataHash",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2775,
														"src": "73849:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32) pure returns (bytes32)"
														}
													},
													"id": 3272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "73849:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 3266,
												"id": 3273,
												"nodeType": "Return",
												"src": "73842:73:0"
											}
										]
									},
									"documentation": {
										"id": 3260,
										"nodeType": "StructuredDocumentation",
										"src": "73127:614:0",
										"text": " @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"
									},
									"id": 3275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_hashTypedDataV4",
									"nameLocation": "73755:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3262,
												"mutability": "mutable",
												"name": "structHash",
												"nameLocation": "73780:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 3275,
												"src": "73772:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3261,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "73772:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "73771:20:0"
									},
									"returnParameters": {
										"id": 3266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3275,
												"src": "73823:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3264,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "73823:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "73822:9:0"
									},
									"scope": 3342,
									"src": "73746:176:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										3122
									],
									"body": {
										"id": 3316,
										"nodeType": "Block",
										"src": "74301:229:0",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"hexValue": "0f",
															"id": 3294,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "hexString",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "74332:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c",
																"typeString": "literal_string hex\"0f\""
															},
															"value": "\u000f"
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 3295,
																"name": "_EIP712Name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3329,
																"src": "74362:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																	"typeString": "function () view returns (string memory)"
																}
															},
															"id": 3296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "74362:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 3297,
																"name": "_EIP712Version",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3341,
																"src": "74389:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																	"typeString": "function () view returns (string memory)"
																}
															},
															"id": 3298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "74389:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"expression": {
																"id": 3299,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "74419:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 3300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "74425:7:0",
															"memberName": "chainid",
															"nodeType": "MemberAccess",
															"src": "74419:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 3303,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "74454:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_EIP712_$3342",
																		"typeString": "contract EIP712"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_EIP712_$3342",
																		"typeString": "contract EIP712"
																	}
																],
																"id": 3302,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "74446:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3301,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "74446:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "74446:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 3307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "74481:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 3306,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "74473:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 3305,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "74473:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3308,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "74473:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 3312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "74511:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 3311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "74497:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																},
																"typeName": {
																	"baseType": {
																		"id": 3309,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "74501:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3310,
																	"nodeType": "ArrayTypeName",
																	"src": "74501:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																		"typeString": "uint256[]"
																	}
																}
															},
															"id": 3313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "74497:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"id": 3314,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "74318:205:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"
													}
												},
												"functionReturnParameters": 3293,
												"id": 3315,
												"nodeType": "Return",
												"src": "74311:212:0"
											}
										]
									},
									"documentation": {
										"id": 3276,
										"nodeType": "StructuredDocumentation",
										"src": "73928:40:0",
										"text": " @dev See {IERC-5267}."
									},
									"functionSelector": "84b0196e",
									"id": 3317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "eip712Domain",
									"nameLocation": "73982:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "73994:2:0"
									},
									"returnParameters": {
										"id": 3293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3279,
												"mutability": "mutable",
												"name": "fields",
												"nameLocation": "74078:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3317,
												"src": "74071:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 3278,
													"name": "bytes1",
													"nodeType": "ElementaryTypeName",
													"src": "74071:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3281,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "74112:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3317,
												"src": "74098:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3280,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "74098:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3283,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "74144:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3317,
												"src": "74130:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3282,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "74130:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3285,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "74173:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3317,
												"src": "74165:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "74165:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3287,
												"mutability": "mutable",
												"name": "verifyingContract",
												"nameLocation": "74202:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 3317,
												"src": "74194:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "74194:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3289,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "74241:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3317,
												"src": "74233:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3288,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "74233:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3292,
												"mutability": "mutable",
												"name": "extensions",
												"nameLocation": "74276:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 3317,
												"src": "74259:27:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3290,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "74259:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3291,
													"nodeType": "ArrayTypeName",
													"src": "74259:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "74057:239:0"
									},
									"scope": 3342,
									"src": "73973:557:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3328,
										"nodeType": "Block",
										"src": "74911:65:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3325,
															"name": "_nameFallback",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3152,
															"src": "74955:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"expression": {
															"id": 3323,
															"name": "_name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3147,
															"src": "74928:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
																"typeString": "ShortString"
															}
														},
														"id": 3324,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "74934:20:0",
														"memberName": "toStringWithFallback",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3067,
														"src": "74928:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2888_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$2888_$",
															"typeString": "function (ShortString,string storage pointer) pure returns (string memory)"
														}
													},
													"id": 3326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "74928:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 3322,
												"id": 3327,
												"nodeType": "Return",
												"src": "74921:48:0"
											}
										]
									},
									"documentation": {
										"id": 3318,
										"nodeType": "StructuredDocumentation",
										"src": "74536:256:0",
										"text": " @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."
									},
									"id": 3329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_EIP712Name",
									"nameLocation": "74859:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "74870:2:0"
									},
									"returnParameters": {
										"id": 3322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3329,
												"src": "74896:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3320,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "74896:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "74895:15:0"
									},
									"scope": 3342,
									"src": "74850:126:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3340,
										"nodeType": "Block",
										"src": "75366:71:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3337,
															"name": "_versionFallback",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3154,
															"src": "75413:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"expression": {
															"id": 3335,
															"name": "_version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3150,
															"src": "75383:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
																"typeString": "ShortString"
															}
														},
														"id": 3336,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "75392:20:0",
														"memberName": "toStringWithFallback",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3067,
														"src": "75383:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2888_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$2888_$",
															"typeString": "function (ShortString,string storage pointer) pure returns (string memory)"
														}
													},
													"id": 3338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "75383:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 3334,
												"id": 3339,
												"nodeType": "Return",
												"src": "75376:54:0"
											}
										]
									},
									"documentation": {
										"id": 3330,
										"nodeType": "StructuredDocumentation",
										"src": "74982:262:0",
										"text": " @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."
									},
									"id": 3341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_EIP712Version",
									"nameLocation": "75311:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "75325:2:0"
									},
									"returnParameters": {
										"id": 3334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3333,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3341,
												"src": "75351:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3332,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "75351:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "75350:15:0"
									},
									"scope": 3342,
									"src": "75302:135:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3604,
							"src": "70789:4650:0",
							"usedErrors": [
								2896,
								2898
							],
							"usedEvents": [
								3103
							]
						},
						{
							"id": 3343,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "75560:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Nonces",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3344,
								"nodeType": "StructuredDocumentation",
								"src": "75586:83:0",
								"text": " @dev Provides tracking nonces for addresses. Nonces will only increment."
							},
							"fullyImplemented": true,
							"id": 3409,
							"linearizedBaseContracts": [
								3409
							],
							"name": "Nonces",
							"nameLocation": "75688:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3345,
										"nodeType": "StructuredDocumentation",
										"src": "75701:90:0",
										"text": " @dev The nonce used for an `account` is not the expected current nonce."
									},
									"errorSelector": "752d88c0",
									"id": 3351,
									"name": "InvalidAccountNonce",
									"nameLocation": "75802:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3347,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "75830:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3351,
												"src": "75822:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "75822:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3349,
												"mutability": "mutable",
												"name": "currentNonce",
												"nameLocation": "75847:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 3351,
												"src": "75839:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "75839:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "75821:39:0"
									},
									"src": "75796:65:0"
								},
								{
									"constant": false,
									"id": 3355,
									"mutability": "mutable",
									"name": "_nonces",
									"nameLocation": "75911:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 3409,
									"src": "75867:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 3354,
										"keyName": "account",
										"keyNameLocation": "75883:7:0",
										"keyType": {
											"id": 3352,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "75875:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "75867:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3353,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "75894:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 3367,
										"nodeType": "Block",
										"src": "76068:38:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 3363,
														"name": "_nonces",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3355,
														"src": "76085:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 3365,
													"indexExpression": {
														"id": 3364,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3358,
														"src": "76093:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "76085:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3362,
												"id": 3366,
												"nodeType": "Return",
												"src": "76078:21:0"
											}
										]
									},
									"documentation": {
										"id": 3356,
										"nodeType": "StructuredDocumentation",
										"src": "75925:69:0",
										"text": " @dev Returns the next unused nonce for an address."
									},
									"functionSelector": "7ecebe00",
									"id": 3368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "76008:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3358,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "76023:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3368,
												"src": "76015:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "76015:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "76014:15:0"
									},
									"returnParameters": {
										"id": 3362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3368,
												"src": "76059:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "76059:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "76058:9:0"
									},
									"scope": 3409,
									"src": "75999:107:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3382,
										"nodeType": "Block",
										"src": "76289:326:0",
										"statements": [
											{
												"id": 3381,
												"nodeType": "UncheckedBlock",
												"src": "76492:117:0",
												"statements": [
													{
														"expression": {
															"id": 3379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "76582:16:0",
															"subExpression": {
																"baseExpression": {
																	"id": 3376,
																	"name": "_nonces",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3355,
																	"src": "76582:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 3378,
																"indexExpression": {
																	"id": 3377,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3371,
																	"src": "76590:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "76582:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3375,
														"id": 3380,
														"nodeType": "Return",
														"src": "76575:23:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3369,
										"nodeType": "StructuredDocumentation",
										"src": "76112:103:0",
										"text": " @dev Consumes a nonce.\n Returns the current value and increments nonce."
									},
									"id": 3383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_useNonce",
									"nameLocation": "76229:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3371,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "76247:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3383,
												"src": "76239:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "76239:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "76238:15:0"
									},
									"returnParameters": {
										"id": 3375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3374,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3383,
												"src": "76280:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "76280:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "76279:9:0"
									},
									"scope": 3409,
									"src": "76220:395:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3407,
										"nodeType": "Block",
										"src": "76799:149:0",
										"statements": [
											{
												"assignments": [
													3392
												],
												"declarations": [
													{
														"constant": false,
														"id": 3392,
														"mutability": "mutable",
														"name": "current",
														"nameLocation": "76817:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 3407,
														"src": "76809:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3391,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "76809:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3396,
												"initialValue": {
													"arguments": [
														{
															"id": 3394,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3386,
															"src": "76837:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3393,
														"name": "_useNonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3383,
														"src": "76827:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) returns (uint256)"
														}
													},
													"id": 3395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "76827:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "76809:34:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3397,
														"name": "nonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3388,
														"src": "76857:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3398,
														"name": "current",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3392,
														"src": "76866:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "76857:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3406,
												"nodeType": "IfStatement",
												"src": "76853:89:0",
												"trueBody": {
													"id": 3405,
													"nodeType": "Block",
													"src": "76875:67:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 3401,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3386,
																		"src": "76916:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3402,
																		"name": "current",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3392,
																		"src": "76923:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3400,
																	"name": "InvalidAccountNonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3351,
																	"src": "76896:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (address,uint256) pure returns (error)"
																	}
																},
																"id": 3403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "76896:35:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3404,
															"nodeType": "RevertStatement",
															"src": "76889:42:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3384,
										"nodeType": "StructuredDocumentation",
										"src": "76621:100:0",
										"text": " @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`."
									},
									"id": 3408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_useCheckedNonce",
									"nameLocation": "76735:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3386,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "76760:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3408,
												"src": "76752:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "76752:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3388,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "76775:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3408,
												"src": "76767:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "76767:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "76751:30:0"
									},
									"returnParameters": {
										"id": 3390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "76799:0:0"
									},
									"scope": 3409,
									"src": "76726:222:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3604,
							"src": "75670:1280:0",
							"usedErrors": [
								3351
							],
							"usedEvents": []
						},
						{
							"id": 3410,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "77116:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 3412,
										"name": "ERC20",
										"nameLocations": [
											"77668:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 771,
										"src": "77668:5:0"
									},
									"id": 3413,
									"nodeType": "InheritanceSpecifier",
									"src": "77668:5:0"
								},
								{
									"baseName": {
										"id": 3414,
										"name": "IERC20Permit",
										"nameLocations": [
											"77675:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 951,
										"src": "77675:12:0"
									},
									"id": 3415,
									"nodeType": "InheritanceSpecifier",
									"src": "77675:12:0"
								},
								{
									"baseName": {
										"id": 3416,
										"name": "EIP712",
										"nameLocations": [
											"77689:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3342,
										"src": "77689:6:0"
									},
									"id": 3417,
									"nodeType": "InheritanceSpecifier",
									"src": "77689:6:0"
								},
								{
									"baseName": {
										"id": 3418,
										"name": "Nonces",
										"nameLocations": [
											"77697:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3409,
										"src": "77697:6:0"
									},
									"id": 3419,
									"nodeType": "InheritanceSpecifier",
									"src": "77697:6:0"
								}
							],
							"canonicalName": "ERC20Permit",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3411,
								"nodeType": "StructuredDocumentation",
								"src": "77147:487:0",
								"text": " @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": true,
							"id": 3552,
							"linearizedBaseContracts": [
								3552,
								3409,
								3342,
								3123,
								951,
								771,
								170,
								100,
								77,
								129
							],
							"name": "ERC20Permit",
							"nameLocation": "77653:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 3424,
									"mutability": "constant",
									"name": "PERMIT_TYPEHASH",
									"nameLocation": "77735:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 3552,
									"src": "77710:146:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 3420,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "77710:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529",
												"id": 3422,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "77771:84:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
													"typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
												},
												"value": "Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
													"typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
												}
											],
											"id": 3421,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "77761:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 3423,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "77761:95:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 3425,
										"nodeType": "StructuredDocumentation",
										"src": "77863:52:0",
										"text": " @dev Permit deadline has expired."
									},
									"errorSelector": "62791302",
									"id": 3429,
									"name": "ERC2612ExpiredSignature",
									"nameLocation": "77926:23:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3427,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "77958:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 3429,
												"src": "77950:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "77950:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "77949:18:0"
									},
									"src": "77920:48:0"
								},
								{
									"documentation": {
										"id": 3430,
										"nodeType": "StructuredDocumentation",
										"src": "77974:45:0",
										"text": " @dev Mismatched signature."
									},
									"errorSelector": "4b800e46",
									"id": 3436,
									"name": "ERC2612InvalidSigner",
									"nameLocation": "78030:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3432,
												"mutability": "mutable",
												"name": "signer",
												"nameLocation": "78059:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3436,
												"src": "78051:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "78051:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3434,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "78075:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3436,
												"src": "78067:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "78067:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "78050:31:0"
									},
									"src": "78024:58:0"
								},
								{
									"body": {
										"id": 3446,
										"nodeType": "Block",
										"src": "78363:2:0",
										"statements": []
									},
									"documentation": {
										"id": 3437,
										"nodeType": "StructuredDocumentation",
										"src": "78088:220:0",
										"text": " @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC20 token name."
									},
									"id": 3447,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3442,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3439,
													"src": "78352:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"hexValue": "31",
													"id": 3443,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "78358:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
														"typeString": "literal_string \"1\""
													},
													"value": "1"
												}
											],
											"id": 3444,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3441,
												"name": "EIP712",
												"nameLocations": [
													"78345:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3342,
												"src": "78345:6:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "78345:17:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3439,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "78339:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3447,
												"src": "78325:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3438,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "78325:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "78324:20:0"
									},
									"returnParameters": {
										"id": 3445,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "78363:0:0"
									},
									"scope": 3552,
									"src": "78313:52:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										936
									],
									"body": {
										"id": 3523,
										"nodeType": "Block",
										"src": "78608:483:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 3465,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "78622:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 3466,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "78628:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "78622:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 3467,
														"name": "deadline",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3456,
														"src": "78640:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "78622:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3474,
												"nodeType": "IfStatement",
												"src": "78618:97:0",
												"trueBody": {
													"id": 3473,
													"nodeType": "Block",
													"src": "78650:65:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 3470,
																		"name": "deadline",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3456,
																		"src": "78695:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3469,
																	"name": "ERC2612ExpiredSignature",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3429,
																	"src": "78671:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 3471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "78671:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3472,
															"nodeType": "RevertStatement",
															"src": "78664:40:0"
														}
													]
												}
											},
											{
												"assignments": [
													3476
												],
												"declarations": [
													{
														"constant": false,
														"id": 3476,
														"mutability": "mutable",
														"name": "structHash",
														"nameLocation": "78733:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 3523,
														"src": "78725:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 3475,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "78725:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3490,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3480,
																	"name": "PERMIT_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3424,
																	"src": "78767:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 3481,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3450,
																	"src": "78784:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 3482,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3452,
																	"src": "78791:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 3483,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3454,
																	"src": "78800:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 3485,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3450,
																			"src": "78817:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 3484,
																		"name": "_useNonce",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3383,
																		"src": "78807:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) returns (uint256)"
																		}
																	},
																	"id": 3486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "78807:16:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 3487,
																	"name": "deadline",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3456,
																	"src": "78825:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 3478,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "78756:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 3479,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "78760:6:0",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "78756:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 3488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "78756:78:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 3477,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "78746:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 3489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "78746:89:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "78725:110:0"
											},
											{
												"assignments": [
													3492
												],
												"declarations": [
													{
														"constant": false,
														"id": 3492,
														"mutability": "mutable",
														"name": "hash",
														"nameLocation": "78854:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 3523,
														"src": "78846:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 3491,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "78846:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3496,
												"initialValue": {
													"arguments": [
														{
															"id": 3494,
															"name": "structHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3476,
															"src": "78878:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3493,
														"name": "_hashTypedDataV4",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3275,
														"src": "78861:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 3495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "78861:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "78846:43:0"
											},
											{
												"assignments": [
													3498
												],
												"declarations": [
													{
														"constant": false,
														"id": 3498,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "78908:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 3523,
														"src": "78900:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3497,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "78900:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3506,
												"initialValue": {
													"arguments": [
														{
															"id": 3501,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3492,
															"src": "78931:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 3502,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3458,
															"src": "78937:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 3503,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3460,
															"src": "78940:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 3504,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3462,
															"src": "78943:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 3499,
															"name": "ECDSA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1298,
															"src": "78917:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ECDSA_$1298_$",
																"typeString": "type(library ECDSA)"
															}
														},
														"id": 3500,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "78923:7:0",
														"memberName": "recover",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1248,
														"src": "78917:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 3505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "78917:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "78900:45:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3507,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3498,
														"src": "78959:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3508,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3450,
														"src": "78969:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "78959:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3516,
												"nodeType": "IfStatement",
												"src": "78955:88:0",
												"trueBody": {
													"id": 3515,
													"nodeType": "Block",
													"src": "78976:67:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 3511,
																		"name": "signer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3498,
																		"src": "79018:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3512,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3450,
																		"src": "79026:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3510,
																	"name": "ERC2612InvalidSigner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3436,
																	"src": "78997:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$_t_error_$",
																		"typeString": "function (address,address) pure returns (error)"
																	}
																},
																"id": 3513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "78997:35:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3514,
															"nodeType": "RevertStatement",
															"src": "78990:42:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3518,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3450,
															"src": "79062:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3519,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3452,
															"src": "79069:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3454,
															"src": "79078:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3517,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															662,
															722
														],
														"referencedDeclaration": 662,
														"src": "79053:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "79053:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3522,
												"nodeType": "ExpressionStatement",
												"src": "79053:31:0"
											}
										]
									},
									"documentation": {
										"id": 3448,
										"nodeType": "StructuredDocumentation",
										"src": "78371:43:0",
										"text": " @inheritdoc IERC20Permit"
									},
									"functionSelector": "d505accf",
									"id": 3524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "78428:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3450,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "78452:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3524,
												"src": "78444:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "78444:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3452,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "78475:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3524,
												"src": "78467:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "78467:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3454,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "78500:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3524,
												"src": "78492:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "78492:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3456,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "78523:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 3524,
												"src": "78515:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "78515:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3458,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "78547:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 3524,
												"src": "78541:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3457,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "78541:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3460,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "78566:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 3524,
												"src": "78558:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3459,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "78558:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3462,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "78585:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 3524,
												"src": "78577:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3461,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "78577:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "78434:158:0"
									},
									"returnParameters": {
										"id": 3464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "78608:0:0"
									},
									"scope": 3552,
									"src": "78419:672:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										944,
										3368
									],
									"body": {
										"id": 3540,
										"nodeType": "Block",
										"src": "79245:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3537,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3527,
															"src": "79275:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 3535,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "79262:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC20Permit_$3552_$",
																"typeString": "type(contract super ERC20Permit)"
															}
														},
														"id": 3536,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "79268:6:0",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3368,
														"src": "79262:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 3538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "79262:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3534,
												"id": 3539,
												"nodeType": "Return",
												"src": "79255:26:0"
											}
										]
									},
									"documentation": {
										"id": 3525,
										"nodeType": "StructuredDocumentation",
										"src": "79097:43:0",
										"text": " @inheritdoc IERC20Permit"
									},
									"functionSelector": "7ecebe00",
									"id": 3541,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "79154:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3531,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 3529,
												"name": "IERC20Permit",
												"nameLocations": [
													"79205:12:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 951,
												"src": "79205:12:0"
											},
											{
												"id": 3530,
												"name": "Nonces",
												"nameLocations": [
													"79219:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3409,
												"src": "79219:6:0"
											}
										],
										"src": "79196:30:0"
									},
									"parameters": {
										"id": 3528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "79169:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3541,
												"src": "79161:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "79161:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "79160:15:0"
									},
									"returnParameters": {
										"id": 3534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3533,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3541,
												"src": "79236:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "79236:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "79235:9:0"
									},
									"scope": 3552,
									"src": "79145:143:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										950
									],
									"body": {
										"id": 3550,
										"nodeType": "Block",
										"src": "79463:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3547,
														"name": "_domainSeparatorV4",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3238,
														"src": "79480:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
															"typeString": "function () view returns (bytes32)"
														}
													},
													"id": 3548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "79480:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 3546,
												"id": 3549,
												"nodeType": "Return",
												"src": "79473:27:0"
											}
										]
									},
									"documentation": {
										"id": 3542,
										"nodeType": "StructuredDocumentation",
										"src": "79294:43:0",
										"text": " @inheritdoc IERC20Permit"
									},
									"functionSelector": "3644e515",
									"id": 3551,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "79404:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "79420:2:0"
									},
									"returnParameters": {
										"id": 3546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3545,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3551,
												"src": "79454:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3544,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "79454:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "79453:9:0"
									},
									"scope": 3552,
									"src": "79395:112:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								}
							],
							"scope": 3604,
							"src": "77635:1874:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169,
								961,
								966,
								971,
								2896,
								2898,
								3351,
								3429,
								3436
							],
							"usedEvents": [
								11,
								20,
								3103
							]
						},
						{
							"id": 3553,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "79590:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3555,
										"name": "ERC20",
										"nameLocations": [
											"79702:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 771,
										"src": "79702:5:0"
									},
									"id": 3556,
									"nodeType": "InheritanceSpecifier",
									"src": "79702:5:0"
								},
								{
									"baseName": {
										"id": 3557,
										"name": "Ownable",
										"nameLocations": [
											"79709:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 916,
										"src": "79709:7:0"
									},
									"id": 3558,
									"nodeType": "InheritanceSpecifier",
									"src": "79709:7:0"
								},
								{
									"baseName": {
										"id": 3559,
										"name": "ERC20Permit",
										"nameLocations": [
											"79718:11:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3552,
										"src": "79718:11:0"
									},
									"id": 3560,
									"nodeType": "InheritanceSpecifier",
									"src": "79718:11:0"
								}
							],
							"canonicalName": "Clarence_dolar",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3554,
								"nodeType": "StructuredDocumentation",
								"src": "79619:56:0",
								"text": "@custom:security-contact juand.ramirezr@ecci.edu.co"
							},
							"fullyImplemented": true,
							"id": 3603,
							"linearizedBaseContracts": [
								3603,
								3552,
								3409,
								3342,
								3123,
								951,
								916,
								771,
								170,
								100,
								77,
								129
							],
							"name": "Clarence_dolar",
							"nameLocation": "79684:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3586,
										"nodeType": "Block",
										"src": "79879:59:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3576,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "79895:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "79899:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "79895:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31303030",
																"id": 3578,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "79907:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3579,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "79914:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 3580,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 335,
																		"src": "79920:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 3581,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "79920:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "79914:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "79907:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3575,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "79889:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "79889:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3585,
												"nodeType": "ExpressionStatement",
												"src": "79889:42:0"
											}
										]
									},
									"id": 3587,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "436c6172656e6365446f6c6172",
													"id": 3565,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "79784:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_1612977c36ece03911234626b7d7c3531a2d51bf7892cbf56cf8c5dd5411b208",
														"typeString": "literal_string \"ClarenceDolar\""
													},
													"value": "ClarenceDolar"
												},
												{
													"hexValue": "434c44",
													"id": 3566,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "79801:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_48d7f72f1f1bac7372b62361d91c22a26f62f81844b14a7e5c78fd4d08320c67",
														"typeString": "literal_string \"CLD\""
													},
													"value": "CLD"
												}
											],
											"id": 3567,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3564,
												"name": "ERC20",
												"nameLocations": [
													"79778:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 771,
												"src": "79778:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "79778:29:0"
										},
										{
											"arguments": [
												{
													"id": 3569,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3562,
													"src": "79824:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 3570,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3568,
												"name": "Ownable",
												"nameLocations": [
													"79816:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 916,
												"src": "79816:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "79816:21:0"
										},
										{
											"arguments": [
												{
													"hexValue": "436c6172656e6365446f6c6172",
													"id": 3572,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "79858:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_1612977c36ece03911234626b7d7c3531a2d51bf7892cbf56cf8c5dd5411b208",
														"typeString": "literal_string \"ClarenceDolar\""
													},
													"value": "ClarenceDolar"
												}
											],
											"id": 3573,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3571,
												"name": "ERC20Permit",
												"nameLocations": [
													"79846:11:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3552,
												"src": "79846:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "79846:28:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3562,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "79756:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 3587,
												"src": "79748:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "79748:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "79747:22:0"
									},
									"returnParameters": {
										"id": 3574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "79879:0:0"
									},
									"scope": 3603,
									"src": "79736:202:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3601,
										"nodeType": "Block",
										"src": "80003:34:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3597,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3589,
															"src": "80019:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3598,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3591,
															"src": "80023:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3596,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "80013:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "80013:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3600,
												"nodeType": "ExpressionStatement",
												"src": "80013:17:0"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 3602,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3594,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3593,
												"name": "onlyOwner",
												"nameLocations": [
													"79993:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 827,
												"src": "79993:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "79993:9:0"
										}
									],
									"name": "mint",
									"nameLocation": "79953:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3589,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "79966:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 3602,
												"src": "79958:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "79958:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3591,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "79978:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3602,
												"src": "79970:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "79970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "79957:28:0"
									},
									"returnParameters": {
										"id": 3595,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "80003:0:0"
									},
									"scope": 3603,
									"src": "79944:93:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3604,
							"src": "79675:364:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169,
								782,
								787,
								961,
								966,
								971,
								2896,
								2898,
								3351,
								3429,
								3436
							],
							"usedEvents": [
								11,
								20,
								793,
								3103
							]
						}
					],
					"src": "164:79876:0"
				},
				"id": 0
			}
		}
	}
}